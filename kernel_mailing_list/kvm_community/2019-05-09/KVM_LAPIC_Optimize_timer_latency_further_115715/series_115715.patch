From patchwork Thu May  9 11:29:19 2019
Content-Type: text/plain; charset="utf-8"
MIME-Version: 1.0
Content-Transfer-Encoding: 8bit
X-Patchwork-Submitter: Wanpeng Li <kernellwp@gmail.com>
X-Patchwork-Id: 10937041
Return-Path: <kvm-owner@kernel.org>
Received: from mail.wl.linuxfoundation.org (pdx-wl-mail.web.codeaurora.org
 [172.30.200.125])
	by pdx-korg-patchwork-2.web.codeaurora.org (Postfix) with ESMTP id C8C07933
	for <patchwork-kvm@patchwork.kernel.org>;
 Thu,  9 May 2019 11:29:42 +0000 (UTC)
Received: from mail.wl.linuxfoundation.org (localhost [127.0.0.1])
	by mail.wl.linuxfoundation.org (Postfix) with ESMTP id B8EA0283C9
	for <patchwork-kvm@patchwork.kernel.org>;
 Thu,  9 May 2019 11:29:42 +0000 (UTC)
Received: by mail.wl.linuxfoundation.org (Postfix, from userid 486)
	id AD56D28A47; Thu,  9 May 2019 11:29:42 +0000 (UTC)
X-Spam-Checker-Version: SpamAssassin 3.3.1 (2010-03-16) on
	pdx-wl-mail.web.codeaurora.org
X-Spam-Level: 
X-Spam-Status: No, score=-8.0 required=2.0 tests=BAYES_00,DKIM_SIGNED,
	DKIM_VALID,DKIM_VALID_AU,FREEMAIL_FROM,MAILING_LIST_MULTI,RCVD_IN_DNSWL_HI
	autolearn=ham version=3.3.1
Received: from vger.kernel.org (vger.kernel.org [209.132.180.67])
	by mail.wl.linuxfoundation.org (Postfix) with ESMTP id 49CE2283C9
	for <patchwork-kvm@patchwork.kernel.org>;
 Thu,  9 May 2019 11:29:42 +0000 (UTC)
Received: (majordomo@vger.kernel.org) by vger.kernel.org via listexpand
        id S1726776AbfEIL33 (ORCPT
        <rfc822;patchwork-kvm@patchwork.kernel.org>);
        Thu, 9 May 2019 07:29:29 -0400
Received: from mail-pl1-f193.google.com ([209.85.214.193]:37646 "EHLO
        mail-pl1-f193.google.com" rhost-flags-OK-OK-OK-OK) by vger.kernel.org
        with ESMTP id S1725869AbfEIL32 (ORCPT <rfc822;kvm@vger.kernel.org>);
        Thu, 9 May 2019 07:29:28 -0400
Received: by mail-pl1-f193.google.com with SMTP id p15so1023268pll.4;
        Thu, 09 May 2019 04:29:28 -0700 (PDT)
DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/relaxed;
        d=gmail.com; s=20161025;
        h=from:to:cc:subject:date:message-id:in-reply-to:references
         :mime-version:content-transfer-encoding;
        bh=kmGfVV6xMnKEH1Nw/+sZ6in9OeGvjzHFhQvxNu73uPA=;
        b=lZ+7dgwNi4xSZFMnOMgt6+YnXWQydzk/rEIKBWWYgNir/GYcwekJBvoYneXUuHf5m6
         ZP+Ns/p6TypS+o88fVAYzyfPjxCYMfBpR6M8jWMyG0+smRHKzGKpuDdiBSULLcZo+ted
         QffaFfoB7U/Y1+F+su3ktavDtGl0VMaMPU4DtPWr7i5QR1xLaH2jhxT+d2T/0r0Cnjo5
         pHZOtpS0q1SJxlAN59sp5DOqEIBhkcaY1JjMZj/+4s7ry7KKUUnIbZT3/9sc34IhZq5h
         eSwDVtvXntNMd3WHqnH4waOrvoiSWoZfnqGvs7TXJp+Lt38sWqwEvuejp1ekV/GX++vJ
         pgtA==
X-Google-DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/relaxed;
        d=1e100.net; s=20161025;
        h=x-gm-message-state:from:to:cc:subject:date:message-id:in-reply-to
         :references:mime-version:content-transfer-encoding;
        bh=kmGfVV6xMnKEH1Nw/+sZ6in9OeGvjzHFhQvxNu73uPA=;
        b=ioxz/cmFMs2Y8vf/fDaHPlNokJ2RVr7RG1ic67RQE2D8yQRedIPwTLs+kUJ03kOz0Z
         F6hfqtqkdtZ+hKzdIY0TmYQCJUNVHtVovzeKOqdV78keGJe9CX5pr7LA8/B6Br104+Fi
         WvdB/vVSrL72Chb6C+md808olfMeDNqRmozxf/L5Ki+j2/evYK30aBsnwI4dAAA+WqOC
         z33BFi8YSR1+lhz0SQF/XSaPxZSBzOjojJwEwM5/wlO2lzHVr6WveaDjIWb7BwrpjZ/6
         pOqtNDPxSOiY1EOY9656jQzfkiNGD2pzDtQB0nYxCEHbRQReXc7AOq94g7l1o6F1Bf7F
         QIfg==
X-Gm-Message-State: APjAAAV+8JoQ9pdjHwDxCtbyFCyYR3tP3AeLeClfA8hyle7wO1/8zNNT
        4TtjFseAgoc3RskhlsL9VRz0Fiot
X-Google-Smtp-Source: 
 APXvYqxTj9IdFC4fToQziuY7q99z7gwEsiT2cqmr8tK/32rIJgOGXN/BYECKiqcFoi1BHSlwVWYY+w==
X-Received: by 2002:a17:902:b589:: with SMTP id
 a9mr4435112pls.66.1557401367858;
        Thu, 09 May 2019 04:29:27 -0700 (PDT)
Received: from localhost.localdomain ([203.205.141.123])
        by smtp.googlemail.com with ESMTPSA id
 j10sm2762002pfa.37.2019.05.09.04.29.25
        (version=TLS1_2 cipher=ECDHE-RSA-AES128-SHA bits=128/128);
        Thu, 09 May 2019 04:29:27 -0700 (PDT)
From: Wanpeng Li <kernellwp@gmail.com>
X-Google-Original-From: Wanpeng Li <wanpengli@tencent.com>
To: linux-kernel@vger.kernel.org, kvm@vger.kernel.org
Cc: Paolo Bonzini <pbonzini@redhat.com>,
 =?utf-8?b?UmFkaW0gS3LEjW3DocWZ?= <rkrcmar@redhat.com>,
 Sean Christopherson <sean.j.christopherson@intel.com>,
 Liran Alon <liran.alon@oracle.com>
Subject: [PATCH 1/3] KVM: LAPIC: Extract adaptive tune timer advancement logic
Date: Thu,  9 May 2019 19:29:19 +0800
Message-Id: <1557401361-3828-2-git-send-email-wanpengli@tencent.com>
X-Mailer: git-send-email 2.7.4
In-Reply-To: <1557401361-3828-1-git-send-email-wanpengli@tencent.com>
References: <1557401361-3828-1-git-send-email-wanpengli@tencent.com>
MIME-Version: 1.0
Content-Type: text/plain; charset=UTF-8
Sender: kvm-owner@vger.kernel.org
Precedence: bulk
List-ID: <kvm.vger.kernel.org>
X-Mailing-List: kvm@vger.kernel.org
X-Virus-Scanned: ClamAV using ClamSMTP

From: Wanpeng Li <wanpengli@tencent.com>

Extract adaptive tune timer advancement logic to a single function.

Cc: Paolo Bonzini <pbonzini@redhat.com>
Cc: Radim Krčmář <rkrcmar@redhat.com>
Cc: Sean Christopherson <sean.j.christopherson@intel.com>
Cc: Liran Alon <liran.alon@oracle.com>
Signed-off-by: Wanpeng Li <wanpengli@tencent.com>
---
 arch/x86/kvm/lapic.c | 57 ++++++++++++++++++++++++++++++----------------------
 1 file changed, 33 insertions(+), 24 deletions(-)

diff --git a/arch/x86/kvm/lapic.c b/arch/x86/kvm/lapic.c
index bd13fdd..e7a0660 100644
--- a/arch/x86/kvm/lapic.c
+++ b/arch/x86/kvm/lapic.c
@@ -1501,11 +1501,41 @@ static inline void __wait_lapic_expire(struct kvm_vcpu *vcpu, u64 guest_cycles)
 	}
 }
 
-void wait_lapic_expire(struct kvm_vcpu *vcpu)
+static inline void adaptive_tune_timer_advancement(struct kvm_vcpu *vcpu,
+				u64 guest_tsc, u64 tsc_deadline)
 {
 	struct kvm_lapic *apic = vcpu->arch.apic;
 	u32 timer_advance_ns = apic->lapic_timer.timer_advance_ns;
-	u64 guest_tsc, tsc_deadline, ns;
+	u64 ns;
+
+	if (!apic->lapic_timer.timer_advance_adjust_done) {
+			/* too early */
+			if (guest_tsc < tsc_deadline) {
+				ns = (tsc_deadline - guest_tsc) * 1000000ULL;
+				do_div(ns, vcpu->arch.virtual_tsc_khz);
+				timer_advance_ns -= min((u32)ns,
+					timer_advance_ns / LAPIC_TIMER_ADVANCE_ADJUST_STEP);
+			} else {
+			/* too late */
+				ns = (guest_tsc - tsc_deadline) * 1000000ULL;
+				do_div(ns, vcpu->arch.virtual_tsc_khz);
+				timer_advance_ns += min((u32)ns,
+					timer_advance_ns / LAPIC_TIMER_ADVANCE_ADJUST_STEP);
+			}
+			if (abs(guest_tsc - tsc_deadline) < LAPIC_TIMER_ADVANCE_ADJUST_DONE)
+				apic->lapic_timer.timer_advance_adjust_done = true;
+			if (unlikely(timer_advance_ns > 5000)) {
+				timer_advance_ns = 0;
+				apic->lapic_timer.timer_advance_adjust_done = true;
+			}
+			apic->lapic_timer.timer_advance_ns = timer_advance_ns;
+		}
+}
+
+void wait_lapic_expire(struct kvm_vcpu *vcpu)
+{
+	struct kvm_lapic *apic = vcpu->arch.apic;
+	u64 guest_tsc, tsc_deadline;
 
 	if (apic->lapic_timer.expired_tscdeadline == 0)
 		return;
@@ -1521,28 +1551,7 @@ void wait_lapic_expire(struct kvm_vcpu *vcpu)
 	if (guest_tsc < tsc_deadline)
 		__wait_lapic_expire(vcpu, tsc_deadline - guest_tsc);
 
-	if (!apic->lapic_timer.timer_advance_adjust_done) {
-		/* too early */
-		if (guest_tsc < tsc_deadline) {
-			ns = (tsc_deadline - guest_tsc) * 1000000ULL;
-			do_div(ns, vcpu->arch.virtual_tsc_khz);
-			timer_advance_ns -= min((u32)ns,
-				timer_advance_ns / LAPIC_TIMER_ADVANCE_ADJUST_STEP);
-		} else {
-		/* too late */
-			ns = (guest_tsc - tsc_deadline) * 1000000ULL;
-			do_div(ns, vcpu->arch.virtual_tsc_khz);
-			timer_advance_ns += min((u32)ns,
-				timer_advance_ns / LAPIC_TIMER_ADVANCE_ADJUST_STEP);
-		}
-		if (abs(guest_tsc - tsc_deadline) < LAPIC_TIMER_ADVANCE_ADJUST_DONE)
-			apic->lapic_timer.timer_advance_adjust_done = true;
-		if (unlikely(timer_advance_ns > 5000)) {
-			timer_advance_ns = 0;
-			apic->lapic_timer.timer_advance_adjust_done = true;
-		}
-		apic->lapic_timer.timer_advance_ns = timer_advance_ns;
-	}
+	adaptive_tune_timer_advancement(vcpu, guest_tsc, tsc_deadline);
 }
 
 static void start_sw_tscdeadline(struct kvm_lapic *apic)

From patchwork Thu May  9 11:29:20 2019
Content-Type: text/plain; charset="utf-8"
MIME-Version: 1.0
Content-Transfer-Encoding: 8bit
X-Patchwork-Submitter: Wanpeng Li <kernellwp@gmail.com>
X-Patchwork-Id: 10937039
Return-Path: <kvm-owner@kernel.org>
Received: from mail.wl.linuxfoundation.org (pdx-wl-mail.web.codeaurora.org
 [172.30.200.125])
	by pdx-korg-patchwork-2.web.codeaurora.org (Postfix) with ESMTP id B612C13AD
	for <patchwork-kvm@patchwork.kernel.org>;
 Thu,  9 May 2019 11:29:41 +0000 (UTC)
Received: from mail.wl.linuxfoundation.org (localhost [127.0.0.1])
	by mail.wl.linuxfoundation.org (Postfix) with ESMTP id A42AD283C9
	for <patchwork-kvm@patchwork.kernel.org>;
 Thu,  9 May 2019 11:29:41 +0000 (UTC)
Received: by mail.wl.linuxfoundation.org (Postfix, from userid 486)
	id 986B428A47; Thu,  9 May 2019 11:29:41 +0000 (UTC)
X-Spam-Checker-Version: SpamAssassin 3.3.1 (2010-03-16) on
	pdx-wl-mail.web.codeaurora.org
X-Spam-Level: 
X-Spam-Status: No, score=-8.0 required=2.0 tests=BAYES_00,DKIM_SIGNED,
	DKIM_VALID,DKIM_VALID_AU,FREEMAIL_FROM,MAILING_LIST_MULTI,RCVD_IN_DNSWL_HI
	autolearn=ham version=3.3.1
Received: from vger.kernel.org (vger.kernel.org [209.132.180.67])
	by mail.wl.linuxfoundation.org (Postfix) with ESMTP id 4E9DA283C9
	for <patchwork-kvm@patchwork.kernel.org>;
 Thu,  9 May 2019 11:29:40 +0000 (UTC)
Received: (majordomo@vger.kernel.org) by vger.kernel.org via listexpand
        id S1726797AbfEIL3b (ORCPT
        <rfc822;patchwork-kvm@patchwork.kernel.org>);
        Thu, 9 May 2019 07:29:31 -0400
Received: from mail-pf1-f196.google.com ([209.85.210.196]:45792 "EHLO
        mail-pf1-f196.google.com" rhost-flags-OK-OK-OK-OK) by vger.kernel.org
        with ESMTP id S1725869AbfEIL3b (ORCPT <rfc822;kvm@vger.kernel.org>);
        Thu, 9 May 2019 07:29:31 -0400
Received: by mail-pf1-f196.google.com with SMTP id s11so1160725pfm.12;
        Thu, 09 May 2019 04:29:30 -0700 (PDT)
DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/relaxed;
        d=gmail.com; s=20161025;
        h=from:to:cc:subject:date:message-id:in-reply-to:references
         :mime-version:content-transfer-encoding;
        bh=QYuS0QZtStAtJNSUUAyhiyB4mexk/QCuRQ8hRYUX6sE=;
        b=hxSeIsahsQT4I0BeWTFl4UFrZrTJpIdIQ9r8U5bynKMnqCHBgA+KQpTuyPQJx9RrXR
         S5MgIoUFXonCozy+ObZivrRPdFTZGQnP2DuxxJTX7DdC9BBP7MVqfoWSiVVy/V+u3pCj
         9q9rgjPuBamuxkZpm8IeDFbZw8UQrf88FmjIddtF9ytioDxlr0TATMErH4LmOI8quOFr
         22fhCyO/WJj9lnJKAYBdR9voFMytps8ITXWzKqeV6cFLipaW8CpuqMIbh8JIJmXABiwr
         hPZJzmZ4HsTkILfxxOpGs1U/ysEAbUDnUaqWmSGUpf/q7NxRQUIr+XThjRnnrxxYh4Bz
         AFHw==
X-Google-DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/relaxed;
        d=1e100.net; s=20161025;
        h=x-gm-message-state:from:to:cc:subject:date:message-id:in-reply-to
         :references:mime-version:content-transfer-encoding;
        bh=QYuS0QZtStAtJNSUUAyhiyB4mexk/QCuRQ8hRYUX6sE=;
        b=XnnO6J6aGOA+AhYtw+zBWZqeb6wTK6MnEvqe+24KfpCgjzQ9uYNsxCUislU+xwfzg6
         QboabLTxtI7//Zbpjr1EG8x4zxFkzXQhOFwPqH+tfZIRne9qzB3B/Abog8LX9CwY1GXW
         kp3yb06WhW4kdUhtkkqTQ6HV6xS/oim4H70aV+IqDZCpoGfYBZbnf4ME7R4rzQUFdGG/
         kzULQIH2G9QOqoH702vyuf091gnOTHd1dhk8JjpChK1RUV51TSFXWsi5mp3IDRosvOzr
         oWYAz9Dnax9lpjvibmCJbSHNoGkBP+MkTs14ZaRVp/eaREGkIQDZyUi6LXO3o4rS1Iba
         q95A==
X-Gm-Message-State: APjAAAVQFs4WV9x5+oOT1M6EOOnUNZRhVU4EH+xrB7MTNWeAzdTnO0I/
        gWk1N9gkY0YpwUQO3mLjLBokMbim
X-Google-Smtp-Source: 
 APXvYqy+lQ/LxK6sn7h5yOIEFke+3DOetFlVnPvoxfsRGGIxeMbMxnQWOcV8lviFP1VC5XWieR9TDA==
X-Received: by 2002:a63:6ac3:: with SMTP id
 f186mr4669196pgc.326.1557401370117;
        Thu, 09 May 2019 04:29:30 -0700 (PDT)
Received: from localhost.localdomain ([203.205.141.123])
        by smtp.googlemail.com with ESMTPSA id
 j10sm2762002pfa.37.2019.05.09.04.29.28
        (version=TLS1_2 cipher=ECDHE-RSA-AES128-SHA bits=128/128);
        Thu, 09 May 2019 04:29:29 -0700 (PDT)
From: Wanpeng Li <kernellwp@gmail.com>
X-Google-Original-From: Wanpeng Li <wanpengli@tencent.com>
To: linux-kernel@vger.kernel.org, kvm@vger.kernel.org
Cc: Paolo Bonzini <pbonzini@redhat.com>,
 =?utf-8?b?UmFkaW0gS3LEjW3DocWZ?= <rkrcmar@redhat.com>,
 Sean Christopherson <sean.j.christopherson@intel.com>,
 Liran Alon <liran.alon@oracle.com>
Subject: [PATCH 2/3] KVM: LAPIC: Fix lapic_timer_advance_ns parameter overflow
Date: Thu,  9 May 2019 19:29:20 +0800
Message-Id: <1557401361-3828-3-git-send-email-wanpengli@tencent.com>
X-Mailer: git-send-email 2.7.4
In-Reply-To: <1557401361-3828-1-git-send-email-wanpengli@tencent.com>
References: <1557401361-3828-1-git-send-email-wanpengli@tencent.com>
MIME-Version: 1.0
Content-Type: text/plain; charset=UTF-8
Sender: kvm-owner@vger.kernel.org
Precedence: bulk
List-ID: <kvm.vger.kernel.org>
X-Mailing-List: kvm@vger.kernel.org
X-Virus-Scanned: ClamAV using ClamSMTP

From: Wanpeng Li <wanpengli@tencent.com>

After commit c3941d9e0 (KVM: lapic: Allow user to disable adaptive tuning of 
timer advancement), '-1' enables adaptive tuning starting from default 
advancment of 1000ns. However, we should expose an int instead of an overflow 
uint module parameter.

Before patch:

/sys/module/kvm/parameters/lapic_timer_advance_ns:4294967295

After patch:

/sys/module/kvm/parameters/lapic_timer_advance_ns:-1

Fixes: c3941d9e0 (KVM: lapic: Allow user to disable adaptive tuning of timer advancement)
Cc: Paolo Bonzini <pbonzini@redhat.com>
Cc: Radim Krčmář <rkrcmar@redhat.com>
Cc: Sean Christopherson <sean.j.christopherson@intel.com>
Cc: Liran Alon <liran.alon@oracle.com>
Signed-off-by: Wanpeng Li <wanpengli@tencent.com>
---
 arch/x86/kvm/x86.c | 2 +-
 1 file changed, 1 insertion(+), 1 deletion(-)

diff --git a/arch/x86/kvm/x86.c b/arch/x86/kvm/x86.c
index d75bb97..1d89cb9 100644
--- a/arch/x86/kvm/x86.c
+++ b/arch/x86/kvm/x86.c
@@ -143,7 +143,7 @@ module_param(tsc_tolerance_ppm, uint, S_IRUGO | S_IWUSR);
  * tuning, i.e. allows priveleged userspace to set an exact advancement time.
  */
 static int __read_mostly lapic_timer_advance_ns = -1;
-module_param(lapic_timer_advance_ns, uint, S_IRUGO | S_IWUSR);
+module_param(lapic_timer_advance_ns, int, S_IRUGO | S_IWUSR);
 
 static bool __read_mostly vector_hashing = true;
 module_param(vector_hashing, bool, S_IRUGO);

From patchwork Thu May  9 11:29:21 2019
Content-Type: text/plain; charset="utf-8"
MIME-Version: 1.0
Content-Transfer-Encoding: 8bit
X-Patchwork-Submitter: Wanpeng Li <kernellwp@gmail.com>
X-Patchwork-Id: 10937037
Return-Path: <kvm-owner@kernel.org>
Received: from mail.wl.linuxfoundation.org (pdx-wl-mail.web.codeaurora.org
 [172.30.200.125])
	by pdx-korg-patchwork-2.web.codeaurora.org (Postfix) with ESMTP id 821FD13AD
	for <patchwork-kvm@patchwork.kernel.org>;
 Thu,  9 May 2019 11:29:39 +0000 (UTC)
Received: from mail.wl.linuxfoundation.org (localhost [127.0.0.1])
	by mail.wl.linuxfoundation.org (Postfix) with ESMTP id 6DF8D283C9
	for <patchwork-kvm@patchwork.kernel.org>;
 Thu,  9 May 2019 11:29:39 +0000 (UTC)
Received: by mail.wl.linuxfoundation.org (Postfix, from userid 486)
	id 6000B28A47; Thu,  9 May 2019 11:29:39 +0000 (UTC)
X-Spam-Checker-Version: SpamAssassin 3.3.1 (2010-03-16) on
	pdx-wl-mail.web.codeaurora.org
X-Spam-Level: 
X-Spam-Status: No, score=-8.0 required=2.0 tests=BAYES_00,DKIM_SIGNED,
	DKIM_VALID,DKIM_VALID_AU,FREEMAIL_FROM,MAILING_LIST_MULTI,RCVD_IN_DNSWL_HI
	autolearn=ham version=3.3.1
Received: from vger.kernel.org (vger.kernel.org [209.132.180.67])
	by mail.wl.linuxfoundation.org (Postfix) with ESMTP id 9C021283C9
	for <patchwork-kvm@patchwork.kernel.org>;
 Thu,  9 May 2019 11:29:38 +0000 (UTC)
Received: (majordomo@vger.kernel.org) by vger.kernel.org via listexpand
        id S1726827AbfEIL3e (ORCPT
        <rfc822;patchwork-kvm@patchwork.kernel.org>);
        Thu, 9 May 2019 07:29:34 -0400
Received: from mail-pf1-f194.google.com ([209.85.210.194]:39264 "EHLO
        mail-pf1-f194.google.com" rhost-flags-OK-OK-OK-OK) by vger.kernel.org
        with ESMTP id S1725869AbfEIL3d (ORCPT <rfc822;kvm@vger.kernel.org>);
        Thu, 9 May 2019 07:29:33 -0400
Received: by mail-pf1-f194.google.com with SMTP id z26so1177356pfg.6;
        Thu, 09 May 2019 04:29:32 -0700 (PDT)
DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/relaxed;
        d=gmail.com; s=20161025;
        h=from:to:cc:subject:date:message-id:in-reply-to:references
         :mime-version:content-transfer-encoding;
        bh=5DvFRZTUWanlthlQLd8mlru8FuUEV3Rf9+IyxekpdVY=;
        b=DqHpG4bIA6azTNVld2ZMnNz0OkMYL/l8sPZtmHj//yuXNiBPIBk2NtTBC7WLkROsaQ
         IteiQnwnXGmx2bhEuJDhNWsLK4hbgAH1/hycdH0CttqkY1NxqKehdtjVfta2wDwwtRHj
         xl9vsLtyuPcur6uYiPLNSVk7tUhrMhoLPH9f8QJv9oGoERqbCDY7KVTc/E4Sa19Cu3rf
         DX48fU0/YMDR4N2qxZ7gklqlMbcSZvfGWz8DgSf8SgzhKTQ151y5VDdmLdKRrawmIa8H
         BHfMdQWHI7aH3e/+dz2m+RhkILcZWUKg1Z1hwKBCZM81FRRFRvgG6SeJ5bjIsI16R3j2
         V/BA==
X-Google-DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/relaxed;
        d=1e100.net; s=20161025;
        h=x-gm-message-state:from:to:cc:subject:date:message-id:in-reply-to
         :references:mime-version:content-transfer-encoding;
        bh=5DvFRZTUWanlthlQLd8mlru8FuUEV3Rf9+IyxekpdVY=;
        b=eIYgAU0HSd/4L46MEtW2gQuVnjiBoMwp/ad2a4c3JR6BEgw5Lu124iz6cNBHpi8jIU
         oVqXo4/D0GDokCAw4Kzpn7CExaSXXNntxFxGoZvqFNE3KM07k6qJZ12wX0E4DR3OxiML
         OL/CS1c6w7ezLWR80tez5gwIZcs2pQW2+W+pthGlmDcghcU01+34+iqNAkVhrnh2oSQ4
         ZugNZSBoj5S4uK1bcyXghBNm2oUMqe9mwiWAQLULwH375B/ND3vCTz2wsXCSnsHGJD+f
         qjGDxkYgn4IRLY7ixwqnjf+W73xedWG0VuUr0o7rE+viOYmWAf4yIDWyav4KHxoJBQ0K
         1a3w==
X-Gm-Message-State: APjAAAUoOIFh4FWN56/6nnO9+DgVXJxy2W8n0Mo3d6jY5/JQQoWN8hC0
        Hlp690upp5ev0Z6M+5klrEws1+cx
X-Google-Smtp-Source: 
 APXvYqwOe6TjA1d4dpOuqWWylbPGLc2MYOiqFaQ5j2XdPW1XzFl5ynVWAH+ExOIbNeJGtSfQlyB8zQ==
X-Received: by 2002:a63:da14:: with SMTP id c20mr4674968pgh.191.1557401372357;
        Thu, 09 May 2019 04:29:32 -0700 (PDT)
Received: from localhost.localdomain ([203.205.141.123])
        by smtp.googlemail.com with ESMTPSA id
 j10sm2762002pfa.37.2019.05.09.04.29.30
        (version=TLS1_2 cipher=ECDHE-RSA-AES128-SHA bits=128/128);
        Thu, 09 May 2019 04:29:31 -0700 (PDT)
From: Wanpeng Li <kernellwp@gmail.com>
X-Google-Original-From: Wanpeng Li <wanpengli@tencent.com>
To: linux-kernel@vger.kernel.org, kvm@vger.kernel.org
Cc: Paolo Bonzini <pbonzini@redhat.com>,
 =?utf-8?b?UmFkaW0gS3LEjW3DocWZ?= <rkrcmar@redhat.com>,
 Sean Christopherson <sean.j.christopherson@intel.com>,
 Liran Alon <liran.alon@oracle.com>
Subject: [PATCH 3/3] KVM: LAPIC: Optimize timer latency further
Date: Thu,  9 May 2019 19:29:21 +0800
Message-Id: <1557401361-3828-4-git-send-email-wanpengli@tencent.com>
X-Mailer: git-send-email 2.7.4
In-Reply-To: <1557401361-3828-1-git-send-email-wanpengli@tencent.com>
References: <1557401361-3828-1-git-send-email-wanpengli@tencent.com>
MIME-Version: 1.0
Content-Type: text/plain; charset=UTF-8
Sender: kvm-owner@vger.kernel.org
Precedence: bulk
List-ID: <kvm.vger.kernel.org>
X-Mailing-List: kvm@vger.kernel.org
X-Virus-Scanned: ClamAV using ClamSMTP

From: Wanpeng Li <wanpengli@tencent.com>

Advance lapic timer tries to hidden the hypervisor overhead between host 
timer fires and the guest awares the timer is fired. However, it just hidden 
the time between apic_timer_fn/handle_preemption_timer -> wait_lapic_expire, 
instead of the real position of vmentry which is mentioned in the orignial 
commit d0659d946be0 ("KVM: x86: add option to advance tscdeadline hrtimer 
expiration"). There is 700+ cpu cycles between the end of wait_lapic_expire 
and before world switch on my haswell desktop, it will be 2400+ cycles if 
vmentry_l1d_flush is tuned to always. 

This patch tries to narrow the last gap, it measures the time between 
the end of wait_lapic_expire and before world switch, we take this 
time into consideration when busy waiting, otherwise, the guest still 
awares the latency between wait_lapic_expire and world switch, we also 
consider this when adaptively tuning the timer advancement. The patch 
can reduce 50% latency (~1600+ cycles to ~800+ cycles on a haswell 
desktop) for kvm-unit-tests/tscdeadline_latency when testing busy waits.

Cc: Paolo Bonzini <pbonzini@redhat.com>
Cc: Radim Krčmář <rkrcmar@redhat.com>
Cc: Sean Christopherson <sean.j.christopherson@intel.com>
Cc: Liran Alon <liran.alon@oracle.com>
Signed-off-by: Wanpeng Li <wanpengli@tencent.com>
---
 arch/x86/kvm/lapic.c   | 23 +++++++++++++++++++++--
 arch/x86/kvm/lapic.h   |  8 ++++++++
 arch/x86/kvm/vmx/vmx.c |  2 ++
 3 files changed, 31 insertions(+), 2 deletions(-)

diff --git a/arch/x86/kvm/lapic.c b/arch/x86/kvm/lapic.c
index e7a0660..01d3a87 100644
--- a/arch/x86/kvm/lapic.c
+++ b/arch/x86/kvm/lapic.c
@@ -1545,13 +1545,19 @@ void wait_lapic_expire(struct kvm_vcpu *vcpu)
 
 	tsc_deadline = apic->lapic_timer.expired_tscdeadline;
 	apic->lapic_timer.expired_tscdeadline = 0;
-	guest_tsc = kvm_read_l1_tsc(vcpu, rdtsc());
+	guest_tsc = kvm_read_l1_tsc(vcpu, (apic->lapic_timer.measure_delay_done == 2) ?
+		rdtsc() + apic->lapic_timer.vmentry_delay : rdtsc());
 	trace_kvm_wait_lapic_expire(vcpu->vcpu_id, guest_tsc - tsc_deadline);
 
 	if (guest_tsc < tsc_deadline)
 		__wait_lapic_expire(vcpu, tsc_deadline - guest_tsc);
 
 	adaptive_tune_timer_advancement(vcpu, guest_tsc, tsc_deadline);
+
+	if (!apic->lapic_timer.measure_delay_done) {
+		apic->lapic_timer.measure_delay_done = 1;
+		apic->lapic_timer.vmentry_delay = rdtsc();
+	}
 }
 
 static void start_sw_tscdeadline(struct kvm_lapic *apic)
@@ -1837,6 +1843,18 @@ static void apic_manage_nmi_watchdog(struct kvm_lapic *apic, u32 lvt0_val)
 	}
 }
 
+void kvm_lapic_measure_vmentry_delay(struct kvm_vcpu *vcpu)
+{
+	struct kvm_timer *ktimer = &vcpu->arch.apic->lapic_timer;
+
+	if (ktimer->measure_delay_done == 1) {
+		ktimer->vmentry_delay = rdtsc() -
+			ktimer->vmentry_delay;
+		ktimer->measure_delay_done = 2;
+	}
+}
+EXPORT_SYMBOL_GPL(kvm_lapic_measure_vmentry_delay);
+
 int kvm_lapic_reg_write(struct kvm_lapic *apic, u32 reg, u32 val)
 {
 	int ret = 0;
@@ -2318,7 +2336,8 @@ int kvm_create_lapic(struct kvm_vcpu *vcpu, int timer_advance_ns)
 		apic->lapic_timer.timer_advance_ns = timer_advance_ns;
 		apic->lapic_timer.timer_advance_adjust_done = true;
 	}
-
+	apic->lapic_timer.vmentry_delay = 0;
+	apic->lapic_timer.measure_delay_done = 0;
 
 	/*
 	 * APIC is created enabled. This will prevent kvm_lapic_set_base from
diff --git a/arch/x86/kvm/lapic.h b/arch/x86/kvm/lapic.h
index d6d049b..f1d037b 100644
--- a/arch/x86/kvm/lapic.h
+++ b/arch/x86/kvm/lapic.h
@@ -35,6 +35,13 @@ struct kvm_timer {
 	atomic_t pending;			/* accumulated triggered timers */
 	bool hv_timer_in_use;
 	bool timer_advance_adjust_done;
+	/**
+	 * 0 unstart measure
+	 * 1 start record
+	 * 2 get delta
+	 */
+	u32 measure_delay_done;
+	u64 vmentry_delay;
 };
 
 struct kvm_lapic {
@@ -230,6 +237,7 @@ void kvm_lapic_switch_to_hv_timer(struct kvm_vcpu *vcpu);
 void kvm_lapic_expired_hv_timer(struct kvm_vcpu *vcpu);
 bool kvm_lapic_hv_timer_in_use(struct kvm_vcpu *vcpu);
 void kvm_lapic_restart_hv_timer(struct kvm_vcpu *vcpu);
+void kvm_lapic_measure_vmentry_delay(struct kvm_vcpu *vcpu);
 
 static inline enum lapic_mode kvm_apic_mode(u64 apic_base)
 {
diff --git a/arch/x86/kvm/vmx/vmx.c b/arch/x86/kvm/vmx/vmx.c
index 9663d41..a939bf5 100644
--- a/arch/x86/kvm/vmx/vmx.c
+++ b/arch/x86/kvm/vmx/vmx.c
@@ -6437,6 +6437,8 @@ static void vmx_vcpu_run(struct kvm_vcpu *vcpu)
 	if (vcpu->arch.cr2 != read_cr2())
 		write_cr2(vcpu->arch.cr2);
 
+	kvm_lapic_measure_vmentry_delay(vcpu);
+
 	vmx->fail = __vmx_vcpu_run(vmx, (unsigned long *)&vcpu->arch.regs,
 				   vmx->loaded_vmcs->launched);
 
