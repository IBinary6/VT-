From patchwork Thu Nov  8 14:42:59 2018
Content-Type: text/plain; charset="utf-8"
MIME-Version: 1.0
Content-Transfer-Encoding: 7bit
X-Patchwork-Submitter: Tianyu Lan <lantianyu1986@gmail.com>
X-Patchwork-Id: 10674407
Return-Path: <kvm-owner@kernel.org>
Received: from mail.wl.linuxfoundation.org (pdx-wl-mail.web.codeaurora.org
 [172.30.200.125])
	by pdx-korg-patchwork-2.web.codeaurora.org (Postfix) with ESMTP id AAEC414BD
	for <patchwork-kvm@patchwork.kernel.org>;
 Thu,  8 Nov 2018 14:43:31 +0000 (UTC)
Received: from mail.wl.linuxfoundation.org (localhost [127.0.0.1])
	by mail.wl.linuxfoundation.org (Postfix) with ESMTP id 98C4F26E97
	for <patchwork-kvm@patchwork.kernel.org>;
 Thu,  8 Nov 2018 14:43:31 +0000 (UTC)
Received: by mail.wl.linuxfoundation.org (Postfix, from userid 486)
	id 8C60D2BAB8; Thu,  8 Nov 2018 14:43:31 +0000 (UTC)
X-Spam-Checker-Version: SpamAssassin 3.3.1 (2010-03-16) on
	pdx-wl-mail.web.codeaurora.org
X-Spam-Level: 
X-Spam-Status: No,
 score=-7.7 required=2.0 tests=BAYES_00,DKIM_ADSP_CUSTOM_MED,
	DKIM_INVALID,DKIM_SIGNED,FREEMAIL_FROM,MAILING_LIST_MULTI,RCVD_IN_DNSWL_HI
	autolearn=ham version=3.3.1
Received: from vger.kernel.org (vger.kernel.org [209.132.180.67])
	by mail.wl.linuxfoundation.org (Postfix) with ESMTP id 157A42BAC1
	for <patchwork-kvm@patchwork.kernel.org>;
 Thu,  8 Nov 2018 14:43:31 +0000 (UTC)
Received: (majordomo@vger.kernel.org) by vger.kernel.org via listexpand
        id S1726801AbeKIATN (ORCPT
        <rfc822;patchwork-kvm@patchwork.kernel.org>);
        Thu, 8 Nov 2018 19:19:13 -0500
Received: from mail-pl1-f194.google.com ([209.85.214.194]:38197 "EHLO
        mail-pl1-f194.google.com" rhost-flags-OK-OK-OK-OK) by vger.kernel.org
        with ESMTP id S1726541AbeKIATN (ORCPT <rfc822;kvm@vger.kernel.org>);
        Thu, 8 Nov 2018 19:19:13 -0500
Received: by mail-pl1-f194.google.com with SMTP id p4-v6so7250288plo.5;
        Thu, 08 Nov 2018 06:43:24 -0800 (PST)
DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/relaxed;
        d=gmail.com; s=20161025;
        h=from:to:cc:subject:date:message-id;
        bh=vxBQF0dRycqPAI+VQ2b6lcauq3UFaNK9t6RBJmGboRo=;
        b=qiMOeM1/SRnEzVb1mu+meJt7JF3I6SihxbCjYz54cN7aYc1GeW9WAG1BcWzdp1k0g5
         U665cC9UHDXeEyUC0FSFYRdRlDWtZy/gXeVtopYcvhNOD709R+KNEDpZmC4wdEFyQKHl
         vSaATeWrsftXGX1/Erf7WeQOWtLn5a1u/A1Pb4rdFeOIee/gOrstDCBsS0cZ3WDtVlSz
         +u/q96UzlBdCFqJ/DX2pUQvtzXkXdqF6qG089Veox6w7Z94K5GfPpvPppN0LdwyGUYDL
         +bLmYnGMybj3EoncTSNIAu8v1auR72MHtoCo1pb1ZMTe37+5dSDLeUpruebW8DT0zsH9
         UM3Q==
X-Google-DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/relaxed;
        d=1e100.net; s=20161025;
        h=x-gm-message-state:from:to:cc:subject:date:message-id;
        bh=vxBQF0dRycqPAI+VQ2b6lcauq3UFaNK9t6RBJmGboRo=;
        b=FUW2bUEB1QriB54yOAKFkeFK1g1AO4Sp6QOegs+C7yfsNFqW+2gRl7KGb8GAj6miAd
         R2MbP+jAzWBDmrRUE2bLjChIIGA76IUkm0qRsJmGIjSD5BCuoEHRNn2r3WziphrMTXBj
         fHJdy295729t2GQrWZUheXgDCYGZkt+80St/XGg/cKR0SxJAZcGUhUkhgs88fNt4xl8x
         6di44GX6+ReIdH1rsh8WOeW8KDRHA503v+RSjs0YoT6X1e2+QbK+JQ+ihptGreTcxZfS
         FpiBDD7buP2Sa0IIu/YgFCIZ8HcXbERedEM3TXGKkKp/dCteI8dI7sSemqPXMTlq1mhp
         tCxw==
X-Gm-Message-State: AGRZ1gIsNuqlQynmBHXTkh0MYzHD4fXvP3uoMD4QoPFjwGJliJdTE8HG
        Nq7ETEQ5ss/V86sIKSnBy90=
X-Google-Smtp-Source: 
 AJdET5exlz1SZ+ZiRFduKTmQ+stN9ujPhv6GOCDd3Pk1/rZFJygsbx+IqcZ1JrQMsjVlfARg3K4wdw==
X-Received: by 2002:a17:902:8689:: with SMTP id
 g9-v6mr4736173plo.44.1541688204606;
        Thu, 08 Nov 2018 06:43:24 -0800 (PST)
Received: from localhost.corp.microsoft.com
 ([2404:f801:9000:18:d9bf:62c6:740b:9fc4])
        by smtp.googlemail.com with ESMTPSA id
 p62-v6sm4053565pfp.111.2018.11.08.06.43.16
        (version=TLS1_2 cipher=ECDHE-RSA-CHACHA20-POLY1305 bits=256/256);
        Thu, 08 Nov 2018 06:43:23 -0800 (PST)
From: lantianyu1986@gmail.com
X-Google-Original-From: Tianyu.Lan@microsoft.com
Cc: Lan Tianyu <Tianyu.Lan@microsoft.com>, benh@kernel.crashing.org,
        bp@alien8.de, catalin.marinas@arm.com, christoffer.dall@arm.com,
        devel@linuxdriverproject.org, haiyangz@microsoft.com,
        hpa@zytor.com, jhogan@kernel.org, kvmarm@lists.cs.columbia.edu,
        kvm-ppc@vger.kernel.org, kvm@vger.kernel.org, kys@microsoft.com,
        linux-arm-kernel@lists.infradead.org, linux@armlinux.org.uk,
        linux-kernel@vger.kernel.org, linux-mips@linux-mips.org,
        linuxppc-dev@lists.ozlabs.org, marc.zyngier@arm.com,
        mingo@redhat.com, mpe@ellerman.id.au, paul.burton@mips.com,
        paulus@ozlabs.org, pbonzini@redhat.com, ralf@linux-mips.org,
        rkrcmar@redhat.com, sthemmin@microsoft.com, tglx@linutronix.de,
        will.deacon@arm.com, x86@kernel.org,
        michael.h.kelley@microsoft.com, vkuznets@redhat.com
Subject: [PATCH V5 00/10] x86/KVM/Hyper-v: Add HV ept tlb range flush
 hypercall support in KVM
Date: Thu,  8 Nov 2018 22:42:59 +0800
Message-Id: <20181108144259.10817-1-Tianyu.Lan@microsoft.com>
X-Mailer: git-send-email 2.14.4
To: unlisted-recipients:; (no To-header on input)
Sender: kvm-owner@vger.kernel.org
Precedence: bulk
List-ID: <kvm.vger.kernel.org>
X-Mailing-List: kvm@vger.kernel.org
X-Virus-Scanned: ClamAV using ClamSMTP

From: Lan Tianyu <Tianyu.Lan@microsoft.com>

Sorry. Some patches was blocked and I try to resend via another account.

For nested memory virtualization, Hyper-v doesn't set write-protect
L1 hypervisor EPT page directory and page table node to track changes 
while it relies on guest to tell it changes via HvFlushGuestAddressLlist
hypercall. HvFlushGuestAddressLlist hypercall provides a way to flush
EPT page table with ranges which are specified by L1 hypervisor.

If L1 hypervisor uses INVEPT or HvFlushGuestAddressSpace hypercall to
flush EPT tlb, Hyper-V will invalidate associated EPT shadow page table
and sync L1's EPT table when next EPT page fault is triggered.
HvFlushGuestAddressLlist hypercall helps to avoid such redundant EPT
page fault and synchronization of shadow page table.

This patchset is rebased on the Linux 4.20-rc1 and Patch "KVM/VMX: Check
ept_pointer before flushing ept tlb".(https://www.mail-archive.com/linux
-kernel@vger.kernel.org/msg1798827.html).

Change since v4:
       1) Split flush address and flush list patches. This patchset only contains
       flush address patches. Will post flush list patches later.
       2) Expose function hyperv_fill_flush_guest_mapping_list()
       out of hyperv file
       3) Adjust parameter of hyperv_flush_guest_mapping_range()
       4) Reorder patchset and move Hyper-V and VMX changes ahead.

Change since v3:
        1) Remove code of updating "tlbs_dirty" in kvm_flush_remote_tlbs_with_range()
        2) Remove directly tlb flush in the kvm_handle_hva_range()
        3) Move tlb flush in kvm_set_pte_rmapp() to kvm_mmu_notifier_change_pte()
        4) Combine Vitaly's "don't pass EPT configuration info to
vmx_hv_remote_flush_tlb()" fix

Change since v2:
       1) Fix comment in the kvm_flush_remote_tlbs_with_range()
       2) Move HV_MAX_FLUSH_PAGES and HV_MAX_FLUSH_REP_COUNT to
        hyperv-tlfs.h.
       3) Calculate HV_MAX_FLUSH_REP_COUNT in the macro definition
       4) Use HV_MAX_FLUSH_REP_COUNT to define length of gpa_list in
        struct hv_guest_mapping_flush_list.

Change since v1:
       1) Convert "end_gfn" of struct kvm_tlb_range to "pages" in order
          to avoid confusion as to whether "end_gfn" is inclusive or exlusive.
       2) Add hyperv tlb range struct and replace kvm tlb range struct
          with new struct in order to avoid using kvm struct in the hyperv
          code directly.


Lan Tianyu (10):
  KVM: Add tlb_remote_flush_with_range callback in kvm_x86_ops
  x86/hyper-v: Add HvFlushGuestAddressList hypercall support
  x86/Hyper-v: Add trace in the
    hyperv_nested_flush_guest_mapping_range()
  KVM/VMX: Add hv tlb range flush support
  KVM/MMU: Add tlb flush with range helper function
  KVM: Replace old tlb flush function with new one to flush a specified
    range.
  KVM: Make kvm_set_spte_hva() return int
  KVM/MMU: Move tlb flush in kvm_set_pte_rmapp() to
    kvm_mmu_notifier_change_pte()
  KVM/MMU: Flush tlb directly in the kvm_set_pte_rmapp()
  KVM/MMU: Flush tlb directly in the kvm_zap_gfn_range()

 arch/arm/include/asm/kvm_host.h     |  2 +-
 arch/arm64/include/asm/kvm_host.h   |  2 +-
 arch/mips/include/asm/kvm_host.h    |  2 +-
 arch/mips/kvm/mmu.c                 |  3 +-
 arch/powerpc/include/asm/kvm_host.h |  2 +-
 arch/powerpc/kvm/book3s.c           |  3 +-
 arch/powerpc/kvm/e500_mmu_host.c    |  3 +-
 arch/x86/hyperv/nested.c            | 80 +++++++++++++++++++++++++++++++
 arch/x86/include/asm/hyperv-tlfs.h  | 32 +++++++++++++
 arch/x86/include/asm/kvm_host.h     |  9 +++-
 arch/x86/include/asm/mshyperv.h     | 15 ++++++
 arch/x86/include/asm/trace/hyperv.h | 14 ++++++
 arch/x86/kvm/mmu.c                  | 96 +++++++++++++++++++++++++++++--------
 arch/x86/kvm/paging_tmpl.h          |  3 +-
 arch/x86/kvm/vmx.c                  | 69 ++++++++++++++++++--------
 virt/kvm/arm/mmu.c                  |  6 ++-
 virt/kvm/kvm_main.c                 |  5 +-
 17 files changed, 295 insertions(+), 51 deletions(-)
