From patchwork Thu Feb 21 02:24:41 2019
Content-Type: text/plain; charset="utf-8"
MIME-Version: 1.0
Content-Transfer-Encoding: 7bit
X-Patchwork-Submitter: Sean Christopherson <sean.j.christopherson@intel.com>
X-Patchwork-Id: 10823065
Return-Path: <kvm-owner@kernel.org>
Received: from mail.wl.linuxfoundation.org (pdx-wl-mail.web.codeaurora.org
 [172.30.200.125])
	by pdx-korg-patchwork-2.web.codeaurora.org (Postfix) with ESMTP id 48C1613A4
	for <patchwork-kvm@patchwork.kernel.org>;
 Thu, 21 Feb 2019 02:24:54 +0000 (UTC)
Received: from mail.wl.linuxfoundation.org (localhost [127.0.0.1])
	by mail.wl.linuxfoundation.org (Postfix) with ESMTP id 355072E54A
	for <patchwork-kvm@patchwork.kernel.org>;
 Thu, 21 Feb 2019 02:24:54 +0000 (UTC)
Received: by mail.wl.linuxfoundation.org (Postfix, from userid 486)
	id 2967C2E66B; Thu, 21 Feb 2019 02:24:54 +0000 (UTC)
X-Spam-Checker-Version: SpamAssassin 3.3.1 (2010-03-16) on
	pdx-wl-mail.web.codeaurora.org
X-Spam-Level: 
X-Spam-Status: No, score=-7.9 required=2.0 tests=BAYES_00,MAILING_LIST_MULTI,
	RCVD_IN_DNSWL_HI autolearn=ham version=3.3.1
Received: from vger.kernel.org (vger.kernel.org [209.132.180.67])
	by mail.wl.linuxfoundation.org (Postfix) with ESMTP id BB9C82E657
	for <patchwork-kvm@patchwork.kernel.org>;
 Thu, 21 Feb 2019 02:24:53 +0000 (UTC)
Received: (majordomo@vger.kernel.org) by vger.kernel.org via listexpand
        id S1727039AbfBUCYw (ORCPT
        <rfc822;patchwork-kvm@patchwork.kernel.org>);
        Wed, 20 Feb 2019 21:24:52 -0500
Received: from mga05.intel.com ([192.55.52.43]:13194 "EHLO mga05.intel.com"
        rhost-flags-OK-OK-OK-OK) by vger.kernel.org with ESMTP
        id S1726009AbfBUCYw (ORCPT <rfc822;kvm@vger.kernel.org>);
        Wed, 20 Feb 2019 21:24:52 -0500
X-Amp-Result: SKIPPED(no attachment in message)
X-Amp-File-Uploaded: False
Received: from orsmga004.jf.intel.com ([10.7.209.38])
  by fmsmga105.fm.intel.com with ESMTP/TLS/DHE-RSA-AES256-GCM-SHA384;
 20 Feb 2019 18:24:51 -0800
X-ExtLoop1: 1
X-IronPort-AV: E=Sophos;i="5.58,393,1544515200";
   d="scan'208";a="276642748"
Received: from sjchrist-coffee.jf.intel.com ([10.54.74.181])
  by orsmga004.jf.intel.com with ESMTP; 20 Feb 2019 18:24:51 -0800
From: Sean Christopherson <sean.j.christopherson@intel.com>
To: Paolo Bonzini <pbonzini@redhat.com>,
 =?utf-8?b?UmFkaW0gS3LEjW3DocWZ?= <rkrcmar@redhat.com>
Cc: kvm@vger.kernel.org, Marc Orr <marcorr@google.com>,
        Krish Sadhukhan <krish.sadhukhan@oracle.com>
Subject: [kvm-unit-tests PATCH 1/5] x86: nVMX: Check the return value of
 setup_eptp() in setup_ept()
Date: Wed, 20 Feb 2019 18:24:41 -0800
Message-Id: <20190221022445.3873-2-sean.j.christopherson@intel.com>
X-Mailer: git-send-email 2.20.1
In-Reply-To: <20190221022445.3873-1-sean.j.christopherson@intel.com>
References: <20190221022445.3873-1-sean.j.christopherson@intel.com>
MIME-Version: 1.0
Sender: kvm-owner@vger.kernel.org
Precedence: bulk
List-ID: <kvm.vger.kernel.org>
X-Mailing-List: kvm@vger.kernel.org
X-Virus-Scanned: ClamAV using ClamSMTP

A recent patch neglected to check the return value of the helper
function it factored out of setup_ept().

Fixes: d065566f60288 ("KVM: nVMX: Add enable_ept() helper to configure legal EPTP")
Reported-by: Marc Orr <marcorr@google.com>
Signed-off-by: Sean Christopherson <sean.j.christopherson@intel.com>
Reviewed-by: Marc Orr <marcorr@google.com>
---
 x86/vmx_tests.c | 3 ++-
 1 file changed, 2 insertions(+), 1 deletion(-)

diff --git a/x86/vmx_tests.c b/x86/vmx_tests.c
index 26edbbb..66fde33 100644
--- a/x86/vmx_tests.c
+++ b/x86/vmx_tests.c
@@ -1046,7 +1046,8 @@ static int setup_ept(bool enable_ad)
 
 	pml4 = alloc_page();
 
-	setup_eptp(virt_to_phys(pml4), enable_ad);
+	if (setup_eptp(virt_to_phys(pml4), enable_ad))
+		return 1;
 
 	memset(pml4, 0, PAGE_SIZE);
 

From patchwork Thu Feb 21 02:24:42 2019
Content-Type: text/plain; charset="utf-8"
MIME-Version: 1.0
Content-Transfer-Encoding: 7bit
X-Patchwork-Submitter: Sean Christopherson <sean.j.christopherson@intel.com>
X-Patchwork-Id: 10823071
Return-Path: <kvm-owner@kernel.org>
Received: from mail.wl.linuxfoundation.org (pdx-wl-mail.web.codeaurora.org
 [172.30.200.125])
	by pdx-korg-patchwork-2.web.codeaurora.org (Postfix) with ESMTP id 376071390
	for <patchwork-kvm@patchwork.kernel.org>;
 Thu, 21 Feb 2019 02:24:58 +0000 (UTC)
Received: from mail.wl.linuxfoundation.org (localhost [127.0.0.1])
	by mail.wl.linuxfoundation.org (Postfix) with ESMTP id 274BB2E66B
	for <patchwork-kvm@patchwork.kernel.org>;
 Thu, 21 Feb 2019 02:24:58 +0000 (UTC)
Received: by mail.wl.linuxfoundation.org (Postfix, from userid 486)
	id 1B79F2E673; Thu, 21 Feb 2019 02:24:58 +0000 (UTC)
X-Spam-Checker-Version: SpamAssassin 3.3.1 (2010-03-16) on
	pdx-wl-mail.web.codeaurora.org
X-Spam-Level: 
X-Spam-Status: No, score=-7.9 required=2.0 tests=BAYES_00,MAILING_LIST_MULTI,
	RCVD_IN_DNSWL_HI autolearn=ham version=3.3.1
Received: from vger.kernel.org (vger.kernel.org [209.132.180.67])
	by mail.wl.linuxfoundation.org (Postfix) with ESMTP id A644A2E66B
	for <patchwork-kvm@patchwork.kernel.org>;
 Thu, 21 Feb 2019 02:24:57 +0000 (UTC)
Received: (majordomo@vger.kernel.org) by vger.kernel.org via listexpand
        id S1727032AbfBUCYw (ORCPT
        <rfc822;patchwork-kvm@patchwork.kernel.org>);
        Wed, 20 Feb 2019 21:24:52 -0500
Received: from mga05.intel.com ([192.55.52.43]:13194 "EHLO mga05.intel.com"
        rhost-flags-OK-OK-OK-OK) by vger.kernel.org with ESMTP
        id S1726016AbfBUCYw (ORCPT <rfc822;kvm@vger.kernel.org>);
        Wed, 20 Feb 2019 21:24:52 -0500
X-Amp-Result: SKIPPED(no attachment in message)
X-Amp-File-Uploaded: False
Received: from orsmga004.jf.intel.com ([10.7.209.38])
  by fmsmga105.fm.intel.com with ESMTP/TLS/DHE-RSA-AES256-GCM-SHA384;
 20 Feb 2019 18:24:51 -0800
X-ExtLoop1: 1
X-IronPort-AV: E=Sophos;i="5.58,393,1544515200";
   d="scan'208";a="276642749"
Received: from sjchrist-coffee.jf.intel.com ([10.54.74.181])
  by orsmga004.jf.intel.com with ESMTP; 20 Feb 2019 18:24:51 -0800
From: Sean Christopherson <sean.j.christopherson@intel.com>
To: Paolo Bonzini <pbonzini@redhat.com>,
 =?utf-8?b?UmFkaW0gS3LEjW3DocWZ?= <rkrcmar@redhat.com>
Cc: kvm@vger.kernel.org, Marc Orr <marcorr@google.com>,
        Krish Sadhukhan <krish.sadhukhan@oracle.com>
Subject: [kvm-unit-tests PATCH 2/5] x86: nVMX: Pre-check EPT requirement for
 unrestricted guest
Date: Wed, 20 Feb 2019 18:24:42 -0800
Message-Id: <20190221022445.3873-3-sean.j.christopherson@intel.com>
X-Mailer: git-send-email 2.20.1
In-Reply-To: <20190221022445.3873-1-sean.j.christopherson@intel.com>
References: <20190221022445.3873-1-sean.j.christopherson@intel.com>
MIME-Version: 1.0
Sender: kvm-owner@vger.kernel.org
Precedence: bulk
List-ID: <kvm.vger.kernel.org>
X-Mailing-List: kvm@vger.kernel.org
X-Virus-Scanned: ClamAV using ClamSMTP

...and abort the test if configuring a dummy EPT fails now that all
users pre-check EPT support.  There are additional checks in the common
EPT setup code, e.g. for EPT memtype compatibility, but the checks in
question should never fail because they query capabilities that KVM
always bundles with EPT, hence the abort.

Cc: Marc Orr <marcorr@google.com>
Signed-off-by: Sean Christopherson <sean.j.christopherson@intel.com>
Reviewed-by: Marc Orr <marcorr@google.com>
---
 x86/vmx_tests.c | 11 ++++++-----
 1 file changed, 6 insertions(+), 5 deletions(-)

diff --git a/x86/vmx_tests.c b/x86/vmx_tests.c
index 66fde33..bd17088 100644
--- a/x86/vmx_tests.c
+++ b/x86/vmx_tests.c
@@ -1063,19 +1063,20 @@ static int setup_ept(bool enable_ad)
 	return 0;
 }
 
-static int enable_ept(void)
+static void enable_ept(void)
 {
-	return setup_eptp(0, false);
+	if (setup_eptp(0, false))
+		report_abort("EPT setup unexpectedly failed");
 }
 
 static int enable_unrestricted_guest(void)
 {
 	if (!(ctrl_cpu_rev[0].clr & CPU_SECONDARY) ||
-	    !(ctrl_cpu_rev[1].clr & CPU_URG))
+	    !(ctrl_cpu_rev[1].clr & CPU_URG) ||
+	    !(ctrl_cpu_rev[1].clr & CPU_EPT))
 		return 1;
 
-	if (enable_ept())
-		return 1;
+	enable_ept();
 
 	vmcs_write(CPU_EXEC_CTRL0, vmcs_read(CPU_EXEC_CTRL0) | CPU_SECONDARY);
 	vmcs_write(CPU_EXEC_CTRL1, vmcs_read(CPU_EXEC_CTRL1) | CPU_URG);

From patchwork Thu Feb 21 02:24:43 2019
Content-Type: text/plain; charset="utf-8"
MIME-Version: 1.0
Content-Transfer-Encoding: 7bit
X-Patchwork-Submitter: Sean Christopherson <sean.j.christopherson@intel.com>
X-Patchwork-Id: 10823069
Return-Path: <kvm-owner@kernel.org>
Received: from mail.wl.linuxfoundation.org (pdx-wl-mail.web.codeaurora.org
 [172.30.200.125])
	by pdx-korg-patchwork-2.web.codeaurora.org (Postfix) with ESMTP id E572813A4
	for <patchwork-kvm@patchwork.kernel.org>;
 Thu, 21 Feb 2019 02:24:56 +0000 (UTC)
Received: from mail.wl.linuxfoundation.org (localhost [127.0.0.1])
	by mail.wl.linuxfoundation.org (Postfix) with ESMTP id D328A2E66B
	for <patchwork-kvm@patchwork.kernel.org>;
 Thu, 21 Feb 2019 02:24:56 +0000 (UTC)
Received: by mail.wl.linuxfoundation.org (Postfix, from userid 486)
	id C6DAF2E673; Thu, 21 Feb 2019 02:24:56 +0000 (UTC)
X-Spam-Checker-Version: SpamAssassin 3.3.1 (2010-03-16) on
	pdx-wl-mail.web.codeaurora.org
X-Spam-Level: 
X-Spam-Status: No, score=-7.9 required=2.0 tests=BAYES_00,MAILING_LIST_MULTI,
	RCVD_IN_DNSWL_HI autolearn=ham version=3.3.1
Received: from vger.kernel.org (vger.kernel.org [209.132.180.67])
	by mail.wl.linuxfoundation.org (Postfix) with ESMTP id 682C72E66B
	for <patchwork-kvm@patchwork.kernel.org>;
 Thu, 21 Feb 2019 02:24:56 +0000 (UTC)
Received: (majordomo@vger.kernel.org) by vger.kernel.org via listexpand
        id S1727083AbfBUCYy (ORCPT
        <rfc822;patchwork-kvm@patchwork.kernel.org>);
        Wed, 20 Feb 2019 21:24:54 -0500
Received: from mga05.intel.com ([192.55.52.43]:13194 "EHLO mga05.intel.com"
        rhost-flags-OK-OK-OK-OK) by vger.kernel.org with ESMTP
        id S1726986AbfBUCYx (ORCPT <rfc822;kvm@vger.kernel.org>);
        Wed, 20 Feb 2019 21:24:53 -0500
X-Amp-Result: SKIPPED(no attachment in message)
X-Amp-File-Uploaded: False
Received: from orsmga004.jf.intel.com ([10.7.209.38])
  by fmsmga105.fm.intel.com with ESMTP/TLS/DHE-RSA-AES256-GCM-SHA384;
 20 Feb 2019 18:24:52 -0800
X-ExtLoop1: 1
X-IronPort-AV: E=Sophos;i="5.58,393,1544515200";
   d="scan'208";a="276642750"
Received: from sjchrist-coffee.jf.intel.com ([10.54.74.181])
  by orsmga004.jf.intel.com with ESMTP; 20 Feb 2019 18:24:51 -0800
From: Sean Christopherson <sean.j.christopherson@intel.com>
To: Paolo Bonzini <pbonzini@redhat.com>,
 =?utf-8?b?UmFkaW0gS3LEjW3DocWZ?= <rkrcmar@redhat.com>
Cc: kvm@vger.kernel.org, Marc Orr <marcorr@google.com>,
        Krish Sadhukhan <krish.sadhukhan@oracle.com>
Subject: [kvm-unit-tests PATCH 3/5] x86: nVMX: Require WB for the EPT walks
 when possible
Date: Wed, 20 Feb 2019 18:24:43 -0800
Message-Id: <20190221022445.3873-4-sean.j.christopherson@intel.com>
X-Mailer: git-send-email 2.20.1
In-Reply-To: <20190221022445.3873-1-sean.j.christopherson@intel.com>
References: <20190221022445.3873-1-sean.j.christopherson@intel.com>
MIME-Version: 1.0
Sender: kvm-owner@vger.kernel.org
Precedence: bulk
List-ID: <kvm.vger.kernel.org>
X-Mailing-List: kvm@vger.kernel.org
X-Virus-Scanned: ClamAV using ClamSMTP

The memtype used by hardware when walking EPT tables is specified by
software via an encoding in the EPTP.  Ignoring the fact that no sane
VMM would default to UC for page table walks, KVM only supports WB,
and has only ever supported WB (added in commit ca72d970ff9a, "KVM:
nEPT: Advertise WB type EPTP").

Require WB and remove the UC handling altogether.  Eliminating what is
effectively dead code also removes the confusing error message (that
never fires) regarding memtype, e.g. "EPT paging-structure memory type
UC&WB are not supported" may be interpreted as stating that KVM unit
tests require WC *and* WB.

Cc: Marc Orr <marcorr@google.com>
Signed-off-by: Sean Christopherson <sean.j.christopherson@intel.com>
Reviewed-by: Marc Orr <marcorr@google.com>
---
 x86/vmx_tests.c | 12 +++---------
 1 file changed, 3 insertions(+), 9 deletions(-)

diff --git a/x86/vmx_tests.c b/x86/vmx_tests.c
index bd17088..c9cea0e 100644
--- a/x86/vmx_tests.c
+++ b/x86/vmx_tests.c
@@ -1011,11 +1011,8 @@ static int setup_eptp(u64 hpa, bool enable_ad)
 		printf("\tEPT is not supported");
 		return 1;
 	}
-
-	if (!(ept_vpid.val & EPT_CAP_UC) &&
-			!(ept_vpid.val & EPT_CAP_WB)) {
-		printf("\tEPT paging-structure memory type "
-				"UC&WB are not supported\n");
+	if (!(ept_vpid.val & EPT_CAP_WB)) {
+		printf("WB memtype for EPT walks not supported\n");
 		return 1;
 	}
 	if (!(ept_vpid.val & EPT_CAP_PWL4)) {
@@ -1023,10 +1020,7 @@ static int setup_eptp(u64 hpa, bool enable_ad)
 		return 1;
 	}
 
-	if (ept_vpid.val & EPT_CAP_UC)
-		eptp = EPT_MEM_TYPE_UC;
-	else
-		eptp = EPT_MEM_TYPE_WB;
+	eptp = EPT_MEM_TYPE_WB;
 	eptp |= (3 << EPTP_PG_WALK_LEN_SHIFT);
 	eptp |= hpa;
 	if (enable_ad)

From patchwork Thu Feb 21 02:24:44 2019
Content-Type: text/plain; charset="utf-8"
MIME-Version: 1.0
Content-Transfer-Encoding: 7bit
X-Patchwork-Submitter: Sean Christopherson <sean.j.christopherson@intel.com>
X-Patchwork-Id: 10823067
Return-Path: <kvm-owner@kernel.org>
Received: from mail.wl.linuxfoundation.org (pdx-wl-mail.web.codeaurora.org
 [172.30.200.125])
	by pdx-korg-patchwork-2.web.codeaurora.org (Postfix) with ESMTP id 5EC0A13A4
	for <patchwork-kvm@patchwork.kernel.org>;
 Thu, 21 Feb 2019 02:24:55 +0000 (UTC)
Received: from mail.wl.linuxfoundation.org (localhost [127.0.0.1])
	by mail.wl.linuxfoundation.org (Postfix) with ESMTP id 4EE132E54A
	for <patchwork-kvm@patchwork.kernel.org>;
 Thu, 21 Feb 2019 02:24:55 +0000 (UTC)
Received: by mail.wl.linuxfoundation.org (Postfix, from userid 486)
	id 430622E66B; Thu, 21 Feb 2019 02:24:55 +0000 (UTC)
X-Spam-Checker-Version: SpamAssassin 3.3.1 (2010-03-16) on
	pdx-wl-mail.web.codeaurora.org
X-Spam-Level: 
X-Spam-Status: No, score=-7.9 required=2.0 tests=BAYES_00,MAILING_LIST_MULTI,
	RCVD_IN_DNSWL_HI autolearn=ham version=3.3.1
Received: from vger.kernel.org (vger.kernel.org [209.132.180.67])
	by mail.wl.linuxfoundation.org (Postfix) with ESMTP id D59882E54A
	for <patchwork-kvm@patchwork.kernel.org>;
 Thu, 21 Feb 2019 02:24:54 +0000 (UTC)
Received: (majordomo@vger.kernel.org) by vger.kernel.org via listexpand
        id S1727054AbfBUCYy (ORCPT
        <rfc822;patchwork-kvm@patchwork.kernel.org>);
        Wed, 20 Feb 2019 21:24:54 -0500
Received: from mga05.intel.com ([192.55.52.43]:13194 "EHLO mga05.intel.com"
        rhost-flags-OK-OK-OK-OK) by vger.kernel.org with ESMTP
        id S1726009AbfBUCYx (ORCPT <rfc822;kvm@vger.kernel.org>);
        Wed, 20 Feb 2019 21:24:53 -0500
X-Amp-Result: SKIPPED(no attachment in message)
X-Amp-File-Uploaded: False
Received: from orsmga004.jf.intel.com ([10.7.209.38])
  by fmsmga105.fm.intel.com with ESMTP/TLS/DHE-RSA-AES256-GCM-SHA384;
 20 Feb 2019 18:24:52 -0800
X-ExtLoop1: 1
X-IronPort-AV: E=Sophos;i="5.58,393,1544515200";
   d="scan'208";a="276642751"
Received: from sjchrist-coffee.jf.intel.com ([10.54.74.181])
  by orsmga004.jf.intel.com with ESMTP; 20 Feb 2019 18:24:51 -0800
From: Sean Christopherson <sean.j.christopherson@intel.com>
To: Paolo Bonzini <pbonzini@redhat.com>,
 =?utf-8?b?UmFkaW0gS3LEjW3DocWZ?= <rkrcmar@redhat.com>
Cc: kvm@vger.kernel.org, Marc Orr <marcorr@google.com>,
        Krish Sadhukhan <krish.sadhukhan@oracle.com>
Subject: [kvm-unit-tests PATCH 4/5] x86: nVMX: Rename EPT setup functions to
 better convey their scope
Date: Wed, 20 Feb 2019 18:24:44 -0800
Message-Id: <20190221022445.3873-5-sean.j.christopherson@intel.com>
X-Mailer: git-send-email 2.20.1
In-Reply-To: <20190221022445.3873-1-sean.j.christopherson@intel.com>
References: <20190221022445.3873-1-sean.j.christopherson@intel.com>
MIME-Version: 1.0
Sender: kvm-owner@vger.kernel.org
Precedence: bulk
List-ID: <kvm.vger.kernel.org>
X-Mailing-List: kvm@vger.kernel.org
X-Virus-Scanned: ClamAV using ClamSMTP

Krish pointed out that enable_ept() does a lot more than simply set the
EPT bit in secondary execution controls, and setup_eptp() does more than
configure the EPTP field.

Cc: Krish Sadhukhan <krish.sadhukhan@oracle.com>
Signed-off-by: Sean Christopherson <sean.j.christopherson@intel.com>
Reviewed-by: Marc Orr <marcorr@google.com>
---
 x86/vmx_tests.c | 14 +++++++-------
 1 file changed, 7 insertions(+), 7 deletions(-)

diff --git a/x86/vmx_tests.c b/x86/vmx_tests.c
index c9cea0e..9db2f2f 100644
--- a/x86/vmx_tests.c
+++ b/x86/vmx_tests.c
@@ -1004,7 +1004,7 @@ static int insn_intercept_exit_handler(void)
 	return VMX_TEST_RESUME;
 }
 
-static int setup_eptp(u64 hpa, bool enable_ad)
+static int __setup_ept(u64 hpa, bool enable_ad)
 {
 	if (!(ctrl_cpu_rev[0].clr & CPU_SECONDARY) ||
 	    !(ctrl_cpu_rev[1].clr & CPU_EPT)) {
@@ -1040,7 +1040,7 @@ static int setup_ept(bool enable_ad)
 
 	pml4 = alloc_page();
 
-	if (setup_eptp(virt_to_phys(pml4), enable_ad))
+	if (__setup_ept(virt_to_phys(pml4), enable_ad))
 		return 1;
 
 	memset(pml4, 0, PAGE_SIZE);
@@ -1057,9 +1057,9 @@ static int setup_ept(bool enable_ad)
 	return 0;
 }
 
-static void enable_ept(void)
+static void setup_dummy_ept(void)
 {
-	if (setup_eptp(0, false))
+	if (__setup_ept(0, false))
 		report_abort("EPT setup unexpectedly failed");
 }
 
@@ -1070,7 +1070,7 @@ static int enable_unrestricted_guest(void)
 	    !(ctrl_cpu_rev[1].clr & CPU_EPT))
 		return 1;
 
-	enable_ept();
+	setup_dummy_ept();
 
 	vmcs_write(CPU_EXEC_CTRL0, vmcs_read(CPU_EXEC_CTRL0) | CPU_SECONDARY);
 	vmcs_write(CPU_EXEC_CTRL1, vmcs_read(CPU_EXEC_CTRL1) | CPU_URG);
@@ -4715,7 +4715,7 @@ static void test_ept_eptp(void)
 	report_prefix_pop();
 
 	secondary |= CPU_EPT;
-	enable_ept();
+	setup_dummy_ept();
 	report_prefix_pushf("Enable-EPT enabled, unrestricted-guest enabled");
 	test_vmx_controls(true, false);
 	report_prefix_pop();
@@ -4770,7 +4770,7 @@ static void test_pml(void)
 	report_prefix_pop();
 
 	secondary |= CPU_EPT;
-	enable_ept();
+	setup_dummy_ept();
 	report_prefix_pushf("enable-PML enabled, enable-EPT enabled");
 	test_vmx_controls(true, false);
 	report_prefix_pop();

From patchwork Thu Feb 21 02:24:45 2019
Content-Type: text/plain; charset="utf-8"
MIME-Version: 1.0
Content-Transfer-Encoding: 7bit
X-Patchwork-Submitter: Sean Christopherson <sean.j.christopherson@intel.com>
X-Patchwork-Id: 10823073
Return-Path: <kvm-owner@kernel.org>
Received: from mail.wl.linuxfoundation.org (pdx-wl-mail.web.codeaurora.org
 [172.30.200.125])
	by pdx-korg-patchwork-2.web.codeaurora.org (Postfix) with ESMTP id 7718913A4
	for <patchwork-kvm@patchwork.kernel.org>;
 Thu, 21 Feb 2019 02:24:59 +0000 (UTC)
Received: from mail.wl.linuxfoundation.org (localhost [127.0.0.1])
	by mail.wl.linuxfoundation.org (Postfix) with ESMTP id 652622E54A
	for <patchwork-kvm@patchwork.kernel.org>;
 Thu, 21 Feb 2019 02:24:59 +0000 (UTC)
Received: by mail.wl.linuxfoundation.org (Postfix, from userid 486)
	id 5905A2E66B; Thu, 21 Feb 2019 02:24:59 +0000 (UTC)
X-Spam-Checker-Version: SpamAssassin 3.3.1 (2010-03-16) on
	pdx-wl-mail.web.codeaurora.org
X-Spam-Level: 
X-Spam-Status: No, score=-7.9 required=2.0 tests=BAYES_00,MAILING_LIST_MULTI,
	RCVD_IN_DNSWL_HI autolearn=ham version=3.3.1
Received: from vger.kernel.org (vger.kernel.org [209.132.180.67])
	by mail.wl.linuxfoundation.org (Postfix) with ESMTP id F13F42E54A
	for <patchwork-kvm@patchwork.kernel.org>;
 Thu, 21 Feb 2019 02:24:58 +0000 (UTC)
Received: (majordomo@vger.kernel.org) by vger.kernel.org via listexpand
        id S1727113AbfBUCY6 (ORCPT
        <rfc822;patchwork-kvm@patchwork.kernel.org>);
        Wed, 20 Feb 2019 21:24:58 -0500
Received: from mga06.intel.com ([134.134.136.31]:19737 "EHLO mga06.intel.com"
        rhost-flags-OK-OK-OK-OK) by vger.kernel.org with ESMTP
        id S1726978AbfBUCYw (ORCPT <rfc822;kvm@vger.kernel.org>);
        Wed, 20 Feb 2019 21:24:52 -0500
X-Amp-Result: SKIPPED(no attachment in message)
X-Amp-File-Uploaded: False
Received: from orsmga004.jf.intel.com ([10.7.209.38])
  by orsmga104.jf.intel.com with ESMTP/TLS/DHE-RSA-AES256-GCM-SHA384;
 20 Feb 2019 18:24:52 -0800
X-ExtLoop1: 1
X-IronPort-AV: E=Sophos;i="5.58,393,1544515200";
   d="scan'208";a="276642752"
Received: from sjchrist-coffee.jf.intel.com ([10.54.74.181])
  by orsmga004.jf.intel.com with ESMTP; 20 Feb 2019 18:24:51 -0800
From: Sean Christopherson <sean.j.christopherson@intel.com>
To: Paolo Bonzini <pbonzini@redhat.com>,
 =?utf-8?b?UmFkaW0gS3LEjW3DocWZ?= <rkrcmar@redhat.com>
Cc: kvm@vger.kernel.org, Marc Orr <marcorr@google.com>,
        Krish Sadhukhan <krish.sadhukhan@oracle.com>
Subject: [kvm-unit-tests PATCH 5/5] x86: nVMX: Add comments to the EPT helper
 functions
Date: Wed, 20 Feb 2019 18:24:45 -0800
Message-Id: <20190221022445.3873-6-sean.j.christopherson@intel.com>
X-Mailer: git-send-email 2.20.1
In-Reply-To: <20190221022445.3873-1-sean.j.christopherson@intel.com>
References: <20190221022445.3873-1-sean.j.christopherson@intel.com>
MIME-Version: 1.0
Sender: kvm-owner@vger.kernel.org
Precedence: bulk
List-ID: <kvm.vger.kernel.org>
X-Mailing-List: kvm@vger.kernel.org
X-Virus-Scanned: ClamAV using ClamSMTP

...to document why there are two variations of "setup EPT" and when to
employ each variant.

Suggested-by: Marc Orr <marcorr@google.com>
Signed-off-by: Sean Christopherson <sean.j.christopherson@intel.com>
Reviewed-by: Marc Orr <marcorr@google.com>
---
 x86/vmx_tests.c | 29 ++++++++++++++++++++++++++++-
 1 file changed, 28 insertions(+), 1 deletion(-)

diff --git a/x86/vmx_tests.c b/x86/vmx_tests.c
index 9db2f2f..d800647 100644
--- a/x86/vmx_tests.c
+++ b/x86/vmx_tests.c
@@ -1004,6 +1004,17 @@ static int insn_intercept_exit_handler(void)
 	return VMX_TEST_RESUME;
 }
 
+/**
+ * __setup_ept - Setup the VMCS fields to enable Extended Page Tables (EPT)
+ * @hpa:	Host physical address of the top-level, a.k.a. root, EPT table
+ * @enable_ad:	Whether or not to enable Access/Dirty bits for EPT entries
+ *
+ * Returns 0 on success, 1 on failure.
+ *
+ * Note that @hpa doesn't need to point at actual memory if VM-Launch is
+ * expected to fail, e.g. setup_dummy_ept() arbitrarily passes '0' to satisfy
+ * the various EPTP consistency checks, but doesn't ensure backing for HPA '0'.
+ */
 static int __setup_ept(u64 hpa, bool enable_ad)
 {
 	if (!(ctrl_cpu_rev[0].clr & CPU_SECONDARY) ||
@@ -1033,7 +1044,15 @@ static int __setup_ept(u64 hpa, bool enable_ad)
 	return 0;
 }
 
-/* Enables EPT and sets up the identity map. */
+/**
+ * setup_ept - Enable Extended Page Tables (EPT) and setup an identity map
+ * @enable_ad:	Whether or not to enable Access/Dirty bits for EPT entries
+ *
+ * Returns 0 on success, 1 on failure.
+ *
+ * This is the "real" function for setting up EPT tables, i.e. use this for
+ * tests that need to run code in the guest with EPT enabled.
+ */
 static int setup_ept(bool enable_ad)
 {
 	unsigned long end_of_memory;
@@ -1057,6 +1076,14 @@ static int setup_ept(bool enable_ad)
 	return 0;
 }
 
+/**
+ * setup_dummy_ept - Enable Extended Page Tables (EPT) with a dummy root HPA
+ *
+ * Setup EPT using a semi-arbitrary dummy root HPA.  This function is intended
+ * for use by tests that need EPT enabled to verify dependent VMCS controls
+ * but never expect to fully enter the guest, i.e. don't need setup the actual
+ * EPT tables.
+ */
 static void setup_dummy_ept(void)
 {
 	if (__setup_ept(0, false))
