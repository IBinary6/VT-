From patchwork Sat Sep 15 23:08:02 2018
Content-Type: text/plain; charset="utf-8"
MIME-Version: 1.0
Content-Transfer-Encoding: 7bit
X-Patchwork-Submitter: Johannes Erdfelt <johannes@erdfelt.com>
X-Patchwork-Id: 10601599
Return-Path: <kvm-owner@kernel.org>
Received: from mail.wl.linuxfoundation.org (pdx-wl-mail.web.codeaurora.org
 [172.30.200.125])
	by pdx-korg-patchwork-2.web.codeaurora.org (Postfix) with ESMTP id B5ACA14D6
	for <patchwork-kvm@patchwork.kernel.org>;
 Sat, 15 Sep 2018 23:15:17 +0000 (UTC)
Received: from mail.wl.linuxfoundation.org (localhost [127.0.0.1])
	by mail.wl.linuxfoundation.org (Postfix) with ESMTP id 952032A60B
	for <patchwork-kvm@patchwork.kernel.org>;
 Sat, 15 Sep 2018 23:15:17 +0000 (UTC)
Received: by mail.wl.linuxfoundation.org (Postfix, from userid 486)
	id 85EDC2A660; Sat, 15 Sep 2018 23:15:17 +0000 (UTC)
X-Spam-Checker-Version: SpamAssassin 3.3.1 (2010-03-16) on
	pdx-wl-mail.web.codeaurora.org
X-Spam-Level: 
X-Spam-Status: No, score=-8.0 required=2.0 tests=BAYES_00,DKIM_SIGNED,
	DKIM_VALID,DKIM_VALID_AU,MAILING_LIST_MULTI,RCVD_IN_DNSWL_HI autolearn=ham
	version=3.3.1
Received: from vger.kernel.org (vger.kernel.org [209.132.180.67])
	by mail.wl.linuxfoundation.org (Postfix) with ESMTP id 27D182A60B
	for <patchwork-kvm@patchwork.kernel.org>;
 Sat, 15 Sep 2018 23:15:17 +0000 (UTC)
Received: (majordomo@vger.kernel.org) by vger.kernel.org via listexpand
        id S1726140AbeIPEfP (ORCPT
        <rfc822;patchwork-kvm@patchwork.kernel.org>);
        Sun, 16 Sep 2018 00:35:15 -0400
Received: from out.bound.email ([141.193.244.10]:42462 "EHLO out.bound.email"
        rhost-flags-OK-OK-OK-OK) by vger.kernel.org with ESMTP
        id S1725799AbeIPEfP (ORCPT <rfc822;kvm@vger.kernel.org>);
        Sun, 16 Sep 2018 00:35:15 -0400
X-Greylist: delayed 390 seconds by postgrey-1.27 at vger.kernel.org;
 Sun, 16 Sep 2018 00:35:14 EDT
Received: from mail.sventech.com (localhost [127.0.0.1])
        by out.bound.email (Postfix) with ESMTP id 7D3FB8A3381
        for <kvm@vger.kernel.org>; Sat, 15 Sep 2018 16:08:02 -0700 (PDT)
Received: by mail.sventech.com (Postfix, from userid 1000)
        id 57A56160042F; Sat, 15 Sep 2018 16:08:02 -0700 (PDT)
DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/relaxed; d=erdfelt.com;
        s=default; t=1537052882;
        bh=gNu3LZA8SrqztSNo3nNhT4qU8alMAj9u5wylm3pQayo=;
        h=Date:From:To:Subject:From;
        b=CTL0D/pcQ5Nezjf3IqmZdgrdMckek5iY5aXnwTz3iBZGHsc9cRI8JjB9UEEMFzYMf
         7HSH8MVXOKKEJL2e5Ab0iSLccj0Mckh/dSWCdZ9C7LpUtnGuduNO6nbY4o/LvbVroa
         wzQ3ul3aRBZAizbri0iBPRCEijD8QNnv9/e9zYic=
Date: Sat, 15 Sep 2018 16:08:02 -0700
From: Johannes Erdfelt <johannes@erdfelt.com>
To: kvm@vger.kernel.org
Subject: [PATCH] KVM: VMX: Compare against correct size of __launched member
Message-ID: <20180915230802.GD8622@sventech.com>
MIME-Version: 1.0
Content-Type: text/plain; charset=us-ascii
Content-Disposition: inline
User-Agent: Mutt/1.5.21 (2010-09-15)
Sender: kvm-owner@vger.kernel.org
Precedence: bulk
List-ID: <kvm.vger.kernel.org>
X-Mailing-List: kvm@vger.kernel.org
X-Virus-Scanned: ClamAV using ClamSMTP

The bool type is 8-bits, but some assembly code in vmx_vcpu_run
compares the __launched member as 32-bits. While the current layout
of the structure leaves 24-bits of padding after __launched, adding
members with small types after __launched or rearranging members could
result in a "KVM: entry failed, hardware error 0x5" error.

Signed-off-by: Johannes Erdfelt <johannes@erdfelt.com>
Reviewed-by: Liran Alon <liran.alon@oracle.com>
Reviewed-by: Krish Sadhukhan <krish.sadhukhan@oracle.com>
---
 arch/x86/kvm/vmx.c | 2 +-
 1 file changed, 1 insertion(+), 1 deletion(-)

diff --git a/arch/x86/kvm/vmx.c b/arch/x86/kvm/vmx.c
index 1d26f3c..c802b25 100644
--- a/arch/x86/kvm/vmx.c
+++ b/arch/x86/kvm/vmx.c
@@ -10714,7 +10714,7 @@ static void __noclone vmx_vcpu_run(struct kvm_vcpu *vcpu)
 		"mov %%" _ASM_AX", %%cr2 \n\t"
 		"3: \n\t"
 		/* Check if vmlaunch of vmresume is needed */
-		"cmpl $0, %c[launched](%0) \n\t"
+		"cmpb $0, %c[launched](%0) \n\t"
 		/* Load guest registers.  Don't clobber flags. */
 		"mov %c[rax](%0), %%" _ASM_AX " \n\t"
 		"mov %c[rbx](%0), %%" _ASM_BX " \n\t"
