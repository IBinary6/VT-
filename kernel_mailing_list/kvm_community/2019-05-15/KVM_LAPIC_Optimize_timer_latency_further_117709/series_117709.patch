From patchwork Wed May 15 04:11:51 2019
Content-Type: text/plain; charset="utf-8"
MIME-Version: 1.0
Content-Transfer-Encoding: 8bit
X-Patchwork-Submitter: Wanpeng Li <kernellwp@gmail.com>
X-Patchwork-Id: 10944239
Return-Path: <kvm-owner@kernel.org>
Received: from mail.wl.linuxfoundation.org (pdx-wl-mail.web.codeaurora.org
 [172.30.200.125])
	by pdx-korg-patchwork-2.web.codeaurora.org (Postfix) with ESMTP id F15C36C5
	for <patchwork-kvm@patchwork.kernel.org>;
 Wed, 15 May 2019 04:12:26 +0000 (UTC)
Received: from mail.wl.linuxfoundation.org (localhost [127.0.0.1])
	by mail.wl.linuxfoundation.org (Postfix) with ESMTP id E05EB28971
	for <patchwork-kvm@patchwork.kernel.org>;
 Wed, 15 May 2019 04:12:26 +0000 (UTC)
Received: by mail.wl.linuxfoundation.org (Postfix, from userid 486)
	id D4A5E28998; Wed, 15 May 2019 04:12:26 +0000 (UTC)
X-Spam-Checker-Version: SpamAssassin 3.3.1 (2010-03-16) on
	pdx-wl-mail.web.codeaurora.org
X-Spam-Level: 
X-Spam-Status: No, score=-8.0 required=2.0 tests=BAYES_00,DKIM_SIGNED,
	DKIM_VALID,DKIM_VALID_AU,FREEMAIL_FROM,MAILING_LIST_MULTI,RCVD_IN_DNSWL_HI
	autolearn=ham version=3.3.1
Received: from vger.kernel.org (vger.kernel.org [209.132.180.67])
	by mail.wl.linuxfoundation.org (Postfix) with ESMTP id 6A34128971
	for <patchwork-kvm@patchwork.kernel.org>;
 Wed, 15 May 2019 04:12:26 +0000 (UTC)
Received: (majordomo@vger.kernel.org) by vger.kernel.org via listexpand
        id S1726717AbfEOEMD (ORCPT
        <rfc822;patchwork-kvm@patchwork.kernel.org>);
        Wed, 15 May 2019 00:12:03 -0400
Received: from mail-pf1-f193.google.com ([209.85.210.193]:33187 "EHLO
        mail-pf1-f193.google.com" rhost-flags-OK-OK-OK-OK) by vger.kernel.org
        with ESMTP id S1725876AbfEOEMB (ORCPT <rfc822;kvm@vger.kernel.org>);
        Wed, 15 May 2019 00:12:01 -0400
Received: by mail-pf1-f193.google.com with SMTP id z28so657411pfk.0;
        Tue, 14 May 2019 21:12:01 -0700 (PDT)
DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/relaxed;
        d=gmail.com; s=20161025;
        h=from:to:cc:subject:date:message-id:in-reply-to:references
         :mime-version:content-transfer-encoding;
        bh=88lmluIaE7kKZILXvo6NHqb4oRYbdykbJ9/sXwZnO1M=;
        b=VEKD1RihQsjByTZaFKgrBFq7YnLekfq/6ZbnVEPhLWHToM3Fecybghl7GfXoarZ8KV
         FOhflvVi7klC5v4H2/eb6vraz4PjAclv2p8He48ifljEcNfUOU3kS0JelXoZtlPnaxsL
         Sv3Aa4ctKY3YmDweoZLbfqCEPqWlrzVsjw2NXp4ynDmFMpNnEZtuBjEorjK0yAuSbxGe
         myDqOlAI6oD4LC+GtKDpDu5XIZCn8u4QRKfs1GniCHxW09payuT16VvsJh6jrT1XYXAa
         KNY2SKvaHDb9DYFkyokGOJwDL4P3sSBEHGupj1e0+vyVyIHhtw6U0j7qomtEx+ocXAmm
         X+qw==
X-Google-DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/relaxed;
        d=1e100.net; s=20161025;
        h=x-gm-message-state:from:to:cc:subject:date:message-id:in-reply-to
         :references:mime-version:content-transfer-encoding;
        bh=88lmluIaE7kKZILXvo6NHqb4oRYbdykbJ9/sXwZnO1M=;
        b=lg5e1lLG3jKyv3t9zaXvevREinlOblodghjyaJqv0sHMnDAEhqhCJ73YlaB6VqcbIx
         iZFul3oVHsMd59hHypzHrDyTMtX+w60mjbJb2qYK/0N60bQeF2KDaBzYfUJHQt4B/PDL
         33yg11VTAc+KyElVXYUCqeHlpJKSJl230O+KdtLrvEubPY7ZujUS/JwIcXSyYiy3pEHZ
         Za/rr6YEqD2u9lRK+6Egge8LmKEkG6JDHbsYtj3dh2EMbOSn11YvEZ4D4e9ip2j8KJ98
         6DZSU0HbR4PICgWmJSu1uoLCTtIyRTkkMK5YU5/fbXkXjnhCB44oa+xX/jg9CJybura4
         wEuA==
X-Gm-Message-State: APjAAAWSal6Lzc5G31dxVYF5cHH1vAz/jAl9NvJP2+caj+yFIipoCrub
        McXHuHX9f3eDPK+mL5mwhCc69QSC
X-Google-Smtp-Source: 
 APXvYqxgkv0gpmM3wx6cDOWZdp3F6HzS05wnnxx11adiI92NmO1+TDTJv3P0qsaIFwe3lniTp5Gqjg==
X-Received: by 2002:a63:4346:: with SMTP id
 q67mr41809012pga.241.1557893520902;
        Tue, 14 May 2019 21:12:00 -0700 (PDT)
Received: from localhost.localdomain ([203.205.141.123])
        by smtp.googlemail.com with ESMTPSA id
 z187sm886788pfb.132.2019.05.14.21.11.58
        (version=TLS1_2 cipher=ECDHE-RSA-AES128-SHA bits=128/128);
        Tue, 14 May 2019 21:12:00 -0700 (PDT)
From: Wanpeng Li <kernellwp@gmail.com>
X-Google-Original-From: Wanpeng Li <wanpengli@tencent.com>
To: linux-kernel@vger.kernel.org, kvm@vger.kernel.org
Cc: Paolo Bonzini <pbonzini@redhat.com>,
 =?utf-8?b?UmFkaW0gS3LEjW3DocWZ?= <rkrcmar@redhat.com>,
 Sean Christopherson <sean.j.christopherson@intel.com>,
 Liran Alon <liran.alon@oracle.com>
Subject: [PATCH v2 1/4] KVM: LAPIC: Extract adaptive tune timer advancement
 logic
Date: Wed, 15 May 2019 12:11:51 +0800
Message-Id: <1557893514-5815-2-git-send-email-wanpengli@tencent.com>
X-Mailer: git-send-email 2.7.4
In-Reply-To: <1557893514-5815-1-git-send-email-wanpengli@tencent.com>
References: <1557893514-5815-1-git-send-email-wanpengli@tencent.com>
MIME-Version: 1.0
Content-Type: text/plain; charset=UTF-8
Sender: kvm-owner@vger.kernel.org
Precedence: bulk
List-ID: <kvm.vger.kernel.org>
X-Mailing-List: kvm@vger.kernel.org
X-Virus-Scanned: ClamAV using ClamSMTP

From: Wanpeng Li <wanpengli@tencent.com>

Extract adaptive tune timer advancement logic to a single function.

Cc: Paolo Bonzini <pbonzini@redhat.com>
Cc: Radim Krčmář <rkrcmar@redhat.com>
Cc: Sean Christopherson <sean.j.christopherson@intel.com>
Cc: Liran Alon <liran.alon@oracle.com>
Signed-off-by: Wanpeng Li <wanpengli@tencent.com>
---
 arch/x86/kvm/lapic.c | 57 ++++++++++++++++++++++++++++++----------------------
 1 file changed, 33 insertions(+), 24 deletions(-)

diff --git a/arch/x86/kvm/lapic.c b/arch/x86/kvm/lapic.c
index bd13fdd..2f364fe 100644
--- a/arch/x86/kvm/lapic.c
+++ b/arch/x86/kvm/lapic.c
@@ -1501,11 +1501,40 @@ static inline void __wait_lapic_expire(struct kvm_vcpu *vcpu, u64 guest_cycles)
 	}
 }
 
-void wait_lapic_expire(struct kvm_vcpu *vcpu)
+static inline void adaptive_tune_timer_advancement(struct kvm_vcpu *vcpu,
+				u64 guest_tsc, u64 tsc_deadline)
 {
 	struct kvm_lapic *apic = vcpu->arch.apic;
 	u32 timer_advance_ns = apic->lapic_timer.timer_advance_ns;
-	u64 guest_tsc, tsc_deadline, ns;
+	u64 ns;
+
+	/* too early */
+	if (guest_tsc < tsc_deadline) {
+		ns = (tsc_deadline - guest_tsc) * 1000000ULL;
+		do_div(ns, vcpu->arch.virtual_tsc_khz);
+		timer_advance_ns -= min((u32)ns,
+			timer_advance_ns / LAPIC_TIMER_ADVANCE_ADJUST_STEP);
+	} else {
+	/* too late */
+		ns = (guest_tsc - tsc_deadline) * 1000000ULL;
+		do_div(ns, vcpu->arch.virtual_tsc_khz);
+		timer_advance_ns += min((u32)ns,
+			timer_advance_ns / LAPIC_TIMER_ADVANCE_ADJUST_STEP);
+	}
+
+	if (abs(guest_tsc - tsc_deadline) < LAPIC_TIMER_ADVANCE_ADJUST_DONE)
+		apic->lapic_timer.timer_advance_adjust_done = true;
+	if (unlikely(timer_advance_ns > 5000)) {
+		timer_advance_ns = 0;
+		apic->lapic_timer.timer_advance_adjust_done = true;
+	}
+	apic->lapic_timer.timer_advance_ns = timer_advance_ns;
+}
+
+void wait_lapic_expire(struct kvm_vcpu *vcpu)
+{
+	struct kvm_lapic *apic = vcpu->arch.apic;
+	u64 guest_tsc, tsc_deadline;
 
 	if (apic->lapic_timer.expired_tscdeadline == 0)
 		return;
@@ -1521,28 +1550,8 @@ void wait_lapic_expire(struct kvm_vcpu *vcpu)
 	if (guest_tsc < tsc_deadline)
 		__wait_lapic_expire(vcpu, tsc_deadline - guest_tsc);
 
-	if (!apic->lapic_timer.timer_advance_adjust_done) {
-		/* too early */
-		if (guest_tsc < tsc_deadline) {
-			ns = (tsc_deadline - guest_tsc) * 1000000ULL;
-			do_div(ns, vcpu->arch.virtual_tsc_khz);
-			timer_advance_ns -= min((u32)ns,
-				timer_advance_ns / LAPIC_TIMER_ADVANCE_ADJUST_STEP);
-		} else {
-		/* too late */
-			ns = (guest_tsc - tsc_deadline) * 1000000ULL;
-			do_div(ns, vcpu->arch.virtual_tsc_khz);
-			timer_advance_ns += min((u32)ns,
-				timer_advance_ns / LAPIC_TIMER_ADVANCE_ADJUST_STEP);
-		}
-		if (abs(guest_tsc - tsc_deadline) < LAPIC_TIMER_ADVANCE_ADJUST_DONE)
-			apic->lapic_timer.timer_advance_adjust_done = true;
-		if (unlikely(timer_advance_ns > 5000)) {
-			timer_advance_ns = 0;
-			apic->lapic_timer.timer_advance_adjust_done = true;
-		}
-		apic->lapic_timer.timer_advance_ns = timer_advance_ns;
-	}
+	if (unlikely(!apic->lapic_timer.timer_advance_adjust_done))
+		adaptive_tune_timer_advancement(vcpu, guest_tsc, tsc_deadline);
 }
 
 static void start_sw_tscdeadline(struct kvm_lapic *apic)

From patchwork Wed May 15 04:11:52 2019
Content-Type: text/plain; charset="utf-8"
MIME-Version: 1.0
Content-Transfer-Encoding: 8bit
X-Patchwork-Submitter: Wanpeng Li <kernellwp@gmail.com>
X-Patchwork-Id: 10944233
Return-Path: <kvm-owner@kernel.org>
Received: from mail.wl.linuxfoundation.org (pdx-wl-mail.web.codeaurora.org
 [172.30.200.125])
	by pdx-korg-patchwork-2.web.codeaurora.org (Postfix) with ESMTP id 15D9B6C5
	for <patchwork-kvm@patchwork.kernel.org>;
 Wed, 15 May 2019 04:12:07 +0000 (UTC)
Received: from mail.wl.linuxfoundation.org (localhost [127.0.0.1])
	by mail.wl.linuxfoundation.org (Postfix) with ESMTP id 026AB28971
	for <patchwork-kvm@patchwork.kernel.org>;
 Wed, 15 May 2019 04:12:07 +0000 (UTC)
Received: by mail.wl.linuxfoundation.org (Postfix, from userid 486)
	id E84F728998; Wed, 15 May 2019 04:12:06 +0000 (UTC)
X-Spam-Checker-Version: SpamAssassin 3.3.1 (2010-03-16) on
	pdx-wl-mail.web.codeaurora.org
X-Spam-Level: 
X-Spam-Status: No, score=-8.0 required=2.0 tests=BAYES_00,DKIM_SIGNED,
	DKIM_VALID,DKIM_VALID_AU,FREEMAIL_FROM,MAILING_LIST_MULTI,RCVD_IN_DNSWL_HI
	autolearn=ham version=3.3.1
Received: from vger.kernel.org (vger.kernel.org [209.132.180.67])
	by mail.wl.linuxfoundation.org (Postfix) with ESMTP id 24ECA28971
	for <patchwork-kvm@patchwork.kernel.org>;
 Wed, 15 May 2019 04:12:06 +0000 (UTC)
Received: (majordomo@vger.kernel.org) by vger.kernel.org via listexpand
        id S1726748AbfEOEME (ORCPT
        <rfc822;patchwork-kvm@patchwork.kernel.org>);
        Wed, 15 May 2019 00:12:04 -0400
Received: from mail-pf1-f196.google.com ([209.85.210.196]:39237 "EHLO
        mail-pf1-f196.google.com" rhost-flags-OK-OK-OK-OK) by vger.kernel.org
        with ESMTP id S1726733AbfEOEMD (ORCPT <rfc822;kvm@vger.kernel.org>);
        Wed, 15 May 2019 00:12:03 -0400
Received: by mail-pf1-f196.google.com with SMTP id z26so642541pfg.6;
        Tue, 14 May 2019 21:12:03 -0700 (PDT)
DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/relaxed;
        d=gmail.com; s=20161025;
        h=from:to:cc:subject:date:message-id:in-reply-to:references
         :mime-version:content-transfer-encoding;
        bh=TmNr7NWRvuB1H22Y/bVjw8p/e3VenEqeZUhq8ds/kPA=;
        b=YdacPIkmRSlzvydmLfdim/JPX2BB7BBYeZ9MzBAcO7KITTKTyE16YNG2UUemGo81Mp
         KhiZ0fr6da+k1VFJDlZbMRO++X+vbtWXAf5/Ii6V/nAsGyNQiiwVc0fYqV8xqRRgAYdP
         LH0YFhYe4BRZHq71BQgy08e6cmAp5augm+QIsBDCOTou+fPQ82eBcvmUnaz9bOoe4WXv
         IDAo2msCyrAROIudRoowmXOuBcI23b7jqrIDkl6icYjyWn1NkawDc4LqVIsZsskV/GvF
         p4Qq1Yb5yCKCFAU45ISqoxTWHGk36/zzw+a4I2UICV7QNyGMznfPQxVbwHnFK+4a6qyL
         zt7w==
X-Google-DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/relaxed;
        d=1e100.net; s=20161025;
        h=x-gm-message-state:from:to:cc:subject:date:message-id:in-reply-to
         :references:mime-version:content-transfer-encoding;
        bh=TmNr7NWRvuB1H22Y/bVjw8p/e3VenEqeZUhq8ds/kPA=;
        b=JhlwSx5UHGEfj43wgKt15QcRh5rwE2XLOwxS6a60++CpQFiz2FoyS2OGhGMUcev+QW
         tAl6l8SbPV8g+FEL5CI1bzpHvfwtapZBJ8akR6MKnZaLv33keaCkk375+ipXDTwVlw7+
         MhgntNy8PS0tuKkZbxUS/Kr+KLAVdaY/jTHFfXnq3OLgFvzn4xk7kDUDIhfaLW/02Qkt
         SECIirCjEaybk2foGeJHesurQk3HEsEUvqi4mX52UgvTWb6tKzIza3kvsybv8HZEYz6c
         RmRJstbYSmGoj46xAaJ2nkBO7+cWWqeo/DvenVKw5sQuwHzDkONRrTFRMzG4yDvXU+3z
         3jJA==
X-Gm-Message-State: APjAAAVapV8ERYt0ESQQyR7OrIjmNHzCOqQqvT5r0MA02RgSGoJEUnxV
        v9XaHhCkfC4j8nhTrSIMK069JMu0
X-Google-Smtp-Source: 
 APXvYqy3Ywx1h5Ok3xrAAusgAnoyQs6hquQVqMcdmyQ0uIfULMecOYX1DBv4lXQoAT8MO1rpFrZqrg==
X-Received: by 2002:a63:6dca:: with SMTP id
 i193mr40442990pgc.353.1557893523064;
        Tue, 14 May 2019 21:12:03 -0700 (PDT)
Received: from localhost.localdomain ([203.205.141.123])
        by smtp.googlemail.com with ESMTPSA id
 z187sm886788pfb.132.2019.05.14.21.12.01
        (version=TLS1_2 cipher=ECDHE-RSA-AES128-SHA bits=128/128);
        Tue, 14 May 2019 21:12:02 -0700 (PDT)
From: Wanpeng Li <kernellwp@gmail.com>
X-Google-Original-From: Wanpeng Li <wanpengli@tencent.com>
To: linux-kernel@vger.kernel.org, kvm@vger.kernel.org
Cc: Paolo Bonzini <pbonzini@redhat.com>,
 =?utf-8?b?UmFkaW0gS3LEjW3DocWZ?= <rkrcmar@redhat.com>,
 Sean Christopherson <sean.j.christopherson@intel.com>,
 Liran Alon <liran.alon@oracle.com>
Subject: [PATCH v2 2/4] KVM: LAPIC: Fix lapic_timer_advance_ns parameter
 overflow
Date: Wed, 15 May 2019 12:11:52 +0800
Message-Id: <1557893514-5815-3-git-send-email-wanpengli@tencent.com>
X-Mailer: git-send-email 2.7.4
In-Reply-To: <1557893514-5815-1-git-send-email-wanpengli@tencent.com>
References: <1557893514-5815-1-git-send-email-wanpengli@tencent.com>
MIME-Version: 1.0
Content-Type: text/plain; charset=UTF-8
Sender: kvm-owner@vger.kernel.org
Precedence: bulk
List-ID: <kvm.vger.kernel.org>
X-Mailing-List: kvm@vger.kernel.org
X-Virus-Scanned: ClamAV using ClamSMTP

From: Wanpeng Li <wanpengli@tencent.com>

After commit c3941d9e0 (KVM: lapic: Allow user to disable adaptive tuning of
timer advancement), '-1' enables adaptive tuning starting from default
advancment of 1000ns. However, we should expose an int instead of an overflow
uint module parameter.

Before patch:

/sys/module/kvm/parameters/lapic_timer_advance_ns:4294967295

After patch:

/sys/module/kvm/parameters/lapic_timer_advance_ns:-1

Fixes: c3941d9e0 (KVM: lapic: Allow user to disable adaptive tuning of timer advancement)
Cc: Paolo Bonzini <pbonzini@redhat.com>
Cc: Radim Krčmář <rkrcmar@redhat.com>
Cc: Sean Christopherson <sean.j.christopherson@intel.com>
Cc: Liran Alon <liran.alon@oracle.com>
Reviewed-by: Sean Christopherson <sean.j.christopherson@intel.com>
Signed-off-by: Wanpeng Li <wanpengli@tencent.com>
---
 arch/x86/kvm/x86.c | 2 +-
 1 file changed, 1 insertion(+), 1 deletion(-)

diff --git a/arch/x86/kvm/x86.c b/arch/x86/kvm/x86.c
index d75bb97..1d89cb9 100644
--- a/arch/x86/kvm/x86.c
+++ b/arch/x86/kvm/x86.c
@@ -143,7 +143,7 @@ module_param(tsc_tolerance_ppm, uint, S_IRUGO | S_IWUSR);
  * tuning, i.e. allows priveleged userspace to set an exact advancement time.
  */
 static int __read_mostly lapic_timer_advance_ns = -1;
-module_param(lapic_timer_advance_ns, uint, S_IRUGO | S_IWUSR);
+module_param(lapic_timer_advance_ns, int, S_IRUGO | S_IWUSR);
 
 static bool __read_mostly vector_hashing = true;
 module_param(vector_hashing, bool, S_IRUGO);

From patchwork Wed May 15 04:11:53 2019
Content-Type: text/plain; charset="utf-8"
MIME-Version: 1.0
Content-Transfer-Encoding: 8bit
X-Patchwork-Submitter: Wanpeng Li <kernellwp@gmail.com>
X-Patchwork-Id: 10944237
Return-Path: <kvm-owner@kernel.org>
Received: from mail.wl.linuxfoundation.org (pdx-wl-mail.web.codeaurora.org
 [172.30.200.125])
	by pdx-korg-patchwork-2.web.codeaurora.org (Postfix) with ESMTP id 2FF1F6C5
	for <patchwork-kvm@patchwork.kernel.org>;
 Wed, 15 May 2019 04:12:21 +0000 (UTC)
Received: from mail.wl.linuxfoundation.org (localhost [127.0.0.1])
	by mail.wl.linuxfoundation.org (Postfix) with ESMTP id 1E07F28971
	for <patchwork-kvm@patchwork.kernel.org>;
 Wed, 15 May 2019 04:12:21 +0000 (UTC)
Received: by mail.wl.linuxfoundation.org (Postfix, from userid 486)
	id 123F228998; Wed, 15 May 2019 04:12:21 +0000 (UTC)
X-Spam-Checker-Version: SpamAssassin 3.3.1 (2010-03-16) on
	pdx-wl-mail.web.codeaurora.org
X-Spam-Level: 
X-Spam-Status: No, score=-8.0 required=2.0 tests=BAYES_00,DKIM_SIGNED,
	DKIM_VALID,DKIM_VALID_AU,FREEMAIL_FROM,MAILING_LIST_MULTI,RCVD_IN_DNSWL_HI
	autolearn=ham version=3.3.1
Received: from vger.kernel.org (vger.kernel.org [209.132.180.67])
	by mail.wl.linuxfoundation.org (Postfix) with ESMTP id 71C9A28971
	for <patchwork-kvm@patchwork.kernel.org>;
 Wed, 15 May 2019 04:12:20 +0000 (UTC)
Received: (majordomo@vger.kernel.org) by vger.kernel.org via listexpand
        id S1726785AbfEOEMJ (ORCPT
        <rfc822;patchwork-kvm@patchwork.kernel.org>);
        Wed, 15 May 2019 00:12:09 -0400
Received: from mail-pf1-f193.google.com ([209.85.210.193]:39238 "EHLO
        mail-pf1-f193.google.com" rhost-flags-OK-OK-OK-OK) by vger.kernel.org
        with ESMTP id S1726757AbfEOEMG (ORCPT <rfc822;kvm@vger.kernel.org>);
        Wed, 15 May 2019 00:12:06 -0400
Received: by mail-pf1-f193.google.com with SMTP id z26so642582pfg.6;
        Tue, 14 May 2019 21:12:05 -0700 (PDT)
DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/relaxed;
        d=gmail.com; s=20161025;
        h=from:to:cc:subject:date:message-id:in-reply-to:references
         :mime-version:content-transfer-encoding;
        bh=FRhCay0gyIZMyq2UxiW86hyINdu7rUa3vMrWeCWaFDM=;
        b=O5DmFBxInL1znEntSZUdWv14ySAL1DedU+4BXCp3nCmh+agvC49VoGi03K6JvF0sBb
         JiUEOGVORhmrXFp3oF1xVqB5qOI1yIUMOjpHyIUtjKJp+1cy9NbjD5mViQQBmCmY0Ege
         bfmWLkm4FUYA6+Gh6ZscewV9A1Pnj11IOZvyinsEtnvt9VPeskeFqH2LELa0pk0gc2RV
         JT+U5E/MnplEmfDwxGfMLTfm5QSi6SjL6KRPMX5WXLgUDRwJ/49uowQ+xzoD4xNV3xsO
         m7qkupDGHWNsdAiG65MGjGmY5WVwpczTwYKEKM+T+L3JI/xMjAOyHFuhaocIIk1il4tW
         frGg==
X-Google-DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/relaxed;
        d=1e100.net; s=20161025;
        h=x-gm-message-state:from:to:cc:subject:date:message-id:in-reply-to
         :references:mime-version:content-transfer-encoding;
        bh=FRhCay0gyIZMyq2UxiW86hyINdu7rUa3vMrWeCWaFDM=;
        b=Dug4m+gDsHPzBs8UYHRvEeEVVBi/J8vxC+KoKlO03uWAmqm+bSUps49UG2gtxXlxO+
         3WyNWAYk3tvvHROw4HbW0XGMNDo+FERQ6KuP1wWtwTyJsgX07XUfMZbyoyrfu8qbr6gF
         D9t6GoiUFdHA1l3XH++bbnxQ3kQ60SmdcFRaxFVSKAeKHo+J1JweA5AhtYdTb9+vkQX+
         g14iAKdSR8w88zOsHSRvFMhS4I+MeNBYUuXJN5u+Rxlsr+cIx2COHCZzdS5ma/cRdwWT
         eDI9I/t5lbKlqAecORLIJzpenTupoOdVKW8EB8Zw+y1R8kxZNnlM/vB20oUiXvWvZ81d
         M9ew==
X-Gm-Message-State: APjAAAUnJFEAFr7irI3Zm+Pdl5ETmvjE4g2Zt7K0Fx2g4QE3FxDTkUBs
        ZSnqxCN4t+7XkajL0bQdOZ/Wl8wD
X-Google-Smtp-Source: 
 APXvYqzhqFk7NcnrFTbfIPAe1Jjma/LpjFuu7hN++1aib1F5Qvbomku1fp0U4AMcJLhB8/96lJdinw==
X-Received: by 2002:a65:5304:: with SMTP id m4mr21540788pgq.126.1557893525249;
        Tue, 14 May 2019 21:12:05 -0700 (PDT)
Received: from localhost.localdomain ([203.205.141.123])
        by smtp.googlemail.com with ESMTPSA id
 z187sm886788pfb.132.2019.05.14.21.12.03
        (version=TLS1_2 cipher=ECDHE-RSA-AES128-SHA bits=128/128);
        Tue, 14 May 2019 21:12:04 -0700 (PDT)
From: Wanpeng Li <kernellwp@gmail.com>
X-Google-Original-From: Wanpeng Li <wanpengli@tencent.com>
To: linux-kernel@vger.kernel.org, kvm@vger.kernel.org
Cc: Paolo Bonzini <pbonzini@redhat.com>,
 =?utf-8?b?UmFkaW0gS3LEjW3DocWZ?= <rkrcmar@redhat.com>,
 Sean Christopherson <sean.j.christopherson@intel.com>,
 Liran Alon <liran.alon@oracle.com>
Subject: [PATCH v2 3/4] KVM: LAPIC: Expose per-vCPU timer adavance information
 to userspace
Date: Wed, 15 May 2019 12:11:53 +0800
Message-Id: <1557893514-5815-4-git-send-email-wanpengli@tencent.com>
X-Mailer: git-send-email 2.7.4
In-Reply-To: <1557893514-5815-1-git-send-email-wanpengli@tencent.com>
References: <1557893514-5815-1-git-send-email-wanpengli@tencent.com>
MIME-Version: 1.0
Content-Type: text/plain; charset=UTF-8
Sender: kvm-owner@vger.kernel.org
Precedence: bulk
List-ID: <kvm.vger.kernel.org>
X-Mailing-List: kvm@vger.kernel.org
X-Virus-Scanned: ClamAV using ClamSMTP

From: Wanpeng Li <wanpengli@tencent.com>

Expose the per-vCPU advancement information to the user via per-vCPU debugfs 
entry. wait_lapic_expire() call was moved above guest_enter_irqoff() because 
of its tracepoint, which violated the RCU extended quiescent state invoked 
by guest_enter_irqoff()[1][2]. This patch simply removes the tracepoint, 
which would allow moving wait_lapic_expire(). Sean pointed out:

| Now that the advancement time is tracked per-vCPU, realizing a change 
| in the advancement time requires creating a new VM. For all intents 
| and purposes this makes it impractical to hand tune the advancement 
| in real time using the tracepoint as the feedback mechanism.

[1] Commit 8b89fe1f6c43 ("kvm: x86: move tracepoints outside extended quiescent state")
[2] https://patchwork.kernel.org/patch/7821111/

Cc: Paolo Bonzini <pbonzini@redhat.com>
Cc: Radim Krčmář <rkrcmar@redhat.com>
Cc: Sean Christopherson <sean.j.christopherson@intel.com>
Cc: Liran Alon <liran.alon@oracle.com>
Signed-off-by: Wanpeng Li <wanpengli@tencent.com>
---
 arch/x86/kvm/debugfs.c | 16 ++++++++++++++++
 arch/x86/kvm/lapic.c   | 16 ++++++++--------
 arch/x86/kvm/lapic.h   |  1 +
 arch/x86/kvm/trace.h   | 20 --------------------
 4 files changed, 25 insertions(+), 28 deletions(-)

diff --git a/arch/x86/kvm/debugfs.c b/arch/x86/kvm/debugfs.c
index c19c7ed..8cf542e 100644
--- a/arch/x86/kvm/debugfs.c
+++ b/arch/x86/kvm/debugfs.c
@@ -9,12 +9,22 @@
  */
 #include <linux/kvm_host.h>
 #include <linux/debugfs.h>
+#include "lapic.h"
 
 bool kvm_arch_has_vcpu_debugfs(void)
 {
 	return true;
 }
 
+static int vcpu_get_timer_expire_delta(void *data, u64 *val)
+{
+	struct kvm_vcpu *vcpu = (struct kvm_vcpu *) data;
+	*val = vcpu->arch.apic->lapic_timer.advance_expire_delta;
+	return 0;
+}
+
+DEFINE_SIMPLE_ATTRIBUTE(vcpu_timer_expire_delta_fops, vcpu_get_timer_expire_delta, NULL, "%lld\n");
+
 static int vcpu_get_tsc_offset(void *data, u64 *val)
 {
 	struct kvm_vcpu *vcpu = (struct kvm_vcpu *) data;
@@ -51,6 +61,12 @@ int kvm_arch_create_vcpu_debugfs(struct kvm_vcpu *vcpu)
 	if (!ret)
 		return -ENOMEM;
 
+	ret = debugfs_create_file("advance_expire_delta", 0444,
+							vcpu->debugfs_dentry,
+							vcpu, &vcpu_timer_expire_delta_fops);
+	if (!ret)
+		return -ENOMEM;
+
 	if (kvm_has_tsc_control) {
 		ret = debugfs_create_file("tsc-scaling-ratio", 0444,
 							vcpu->debugfs_dentry,
diff --git a/arch/x86/kvm/lapic.c b/arch/x86/kvm/lapic.c
index 2f364fe..af38ece 100644
--- a/arch/x86/kvm/lapic.c
+++ b/arch/x86/kvm/lapic.c
@@ -1502,27 +1502,27 @@ static inline void __wait_lapic_expire(struct kvm_vcpu *vcpu, u64 guest_cycles)
 }
 
 static inline void adaptive_tune_timer_advancement(struct kvm_vcpu *vcpu,
-				u64 guest_tsc, u64 tsc_deadline)
+				s64 advance_expire_delta)
 {
 	struct kvm_lapic *apic = vcpu->arch.apic;
 	u32 timer_advance_ns = apic->lapic_timer.timer_advance_ns;
 	u64 ns;
 
 	/* too early */
-	if (guest_tsc < tsc_deadline) {
-		ns = (tsc_deadline - guest_tsc) * 1000000ULL;
+	if (advance_expire_delta < 0) {
+		ns = -advance_expire_delta * 1000000ULL;
 		do_div(ns, vcpu->arch.virtual_tsc_khz);
 		timer_advance_ns -= min((u32)ns,
 			timer_advance_ns / LAPIC_TIMER_ADVANCE_ADJUST_STEP);
 	} else {
 	/* too late */
-		ns = (guest_tsc - tsc_deadline) * 1000000ULL;
+		ns = advance_expire_delta * 1000000ULL;
 		do_div(ns, vcpu->arch.virtual_tsc_khz);
 		timer_advance_ns += min((u32)ns,
 			timer_advance_ns / LAPIC_TIMER_ADVANCE_ADJUST_STEP);
 	}
 
-	if (abs(guest_tsc - tsc_deadline) < LAPIC_TIMER_ADVANCE_ADJUST_DONE)
+	if (abs(advance_expire_delta) < LAPIC_TIMER_ADVANCE_ADJUST_DONE)
 		apic->lapic_timer.timer_advance_adjust_done = true;
 	if (unlikely(timer_advance_ns > 5000)) {
 		timer_advance_ns = 0;
@@ -1545,13 +1545,13 @@ void wait_lapic_expire(struct kvm_vcpu *vcpu)
 	tsc_deadline = apic->lapic_timer.expired_tscdeadline;
 	apic->lapic_timer.expired_tscdeadline = 0;
 	guest_tsc = kvm_read_l1_tsc(vcpu, rdtsc());
-	trace_kvm_wait_lapic_expire(vcpu->vcpu_id, guest_tsc - tsc_deadline);
+	apic->lapic_timer.advance_expire_delta = guest_tsc - tsc_deadline;
 
-	if (guest_tsc < tsc_deadline)
+	if (apic->lapic_timer.advance_expire_delta < 0)
 		__wait_lapic_expire(vcpu, tsc_deadline - guest_tsc);
 
 	if (unlikely(!apic->lapic_timer.timer_advance_adjust_done))
-		adaptive_tune_timer_advancement(vcpu, guest_tsc, tsc_deadline);
+		adaptive_tune_timer_advancement(vcpu, apic->lapic_timer.advance_expire_delta);
 }
 
 static void start_sw_tscdeadline(struct kvm_lapic *apic)
diff --git a/arch/x86/kvm/lapic.h b/arch/x86/kvm/lapic.h
index d6d049b..3e72a25 100644
--- a/arch/x86/kvm/lapic.h
+++ b/arch/x86/kvm/lapic.h
@@ -32,6 +32,7 @@ struct kvm_timer {
 	u64 tscdeadline;
 	u64 expired_tscdeadline;
 	u32 timer_advance_ns;
+	s64 advance_expire_delta;
 	atomic_t pending;			/* accumulated triggered timers */
 	bool hv_timer_in_use;
 	bool timer_advance_adjust_done;
diff --git a/arch/x86/kvm/trace.h b/arch/x86/kvm/trace.h
index 4d47a26..3f9bc62 100644
--- a/arch/x86/kvm/trace.h
+++ b/arch/x86/kvm/trace.h
@@ -953,26 +953,6 @@ TRACE_EVENT(kvm_pvclock_update,
 		  __entry->flags)
 );
 
-TRACE_EVENT(kvm_wait_lapic_expire,
-	TP_PROTO(unsigned int vcpu_id, s64 delta),
-	TP_ARGS(vcpu_id, delta),
-
-	TP_STRUCT__entry(
-		__field(	unsigned int,	vcpu_id		)
-		__field(	s64,		delta		)
-	),
-
-	TP_fast_assign(
-		__entry->vcpu_id	   = vcpu_id;
-		__entry->delta             = delta;
-	),
-
-	TP_printk("vcpu %u: delta %lld (%s)",
-		  __entry->vcpu_id,
-		  __entry->delta,
-		  __entry->delta < 0 ? "early" : "late")
-);
-
 TRACE_EVENT(kvm_enter_smm,
 	TP_PROTO(unsigned int vcpu_id, u64 smbase, bool entering),
 	TP_ARGS(vcpu_id, smbase, entering),

From patchwork Wed May 15 04:11:54 2019
Content-Type: text/plain; charset="utf-8"
MIME-Version: 1.0
Content-Transfer-Encoding: 8bit
X-Patchwork-Submitter: Wanpeng Li <kernellwp@gmail.com>
X-Patchwork-Id: 10944235
Return-Path: <kvm-owner@kernel.org>
Received: from mail.wl.linuxfoundation.org (pdx-wl-mail.web.codeaurora.org
 [172.30.200.125])
	by pdx-korg-patchwork-2.web.codeaurora.org (Postfix) with ESMTP id 5C16D1395
	for <patchwork-kvm@patchwork.kernel.org>;
 Wed, 15 May 2019 04:12:19 +0000 (UTC)
Received: from mail.wl.linuxfoundation.org (localhost [127.0.0.1])
	by mail.wl.linuxfoundation.org (Postfix) with ESMTP id 49BF828971
	for <patchwork-kvm@patchwork.kernel.org>;
 Wed, 15 May 2019 04:12:19 +0000 (UTC)
Received: by mail.wl.linuxfoundation.org (Postfix, from userid 486)
	id 3D97328998; Wed, 15 May 2019 04:12:19 +0000 (UTC)
X-Spam-Checker-Version: SpamAssassin 3.3.1 (2010-03-16) on
	pdx-wl-mail.web.codeaurora.org
X-Spam-Level: 
X-Spam-Status: No, score=-8.0 required=2.0 tests=BAYES_00,DKIM_SIGNED,
	DKIM_VALID,DKIM_VALID_AU,FREEMAIL_FROM,MAILING_LIST_MULTI,RCVD_IN_DNSWL_HI
	autolearn=ham version=3.3.1
Received: from vger.kernel.org (vger.kernel.org [209.132.180.67])
	by mail.wl.linuxfoundation.org (Postfix) with ESMTP id B128928971
	for <patchwork-kvm@patchwork.kernel.org>;
 Wed, 15 May 2019 04:12:18 +0000 (UTC)
Received: (majordomo@vger.kernel.org) by vger.kernel.org via listexpand
        id S1726796AbfEOEMK (ORCPT
        <rfc822;patchwork-kvm@patchwork.kernel.org>);
        Wed, 15 May 2019 00:12:10 -0400
Received: from mail-pg1-f196.google.com ([209.85.215.196]:34445 "EHLO
        mail-pg1-f196.google.com" rhost-flags-OK-OK-OK-OK) by vger.kernel.org
        with ESMTP id S1726772AbfEOEMI (ORCPT <rfc822;kvm@vger.kernel.org>);
        Wed, 15 May 2019 00:12:08 -0400
Received: by mail-pg1-f196.google.com with SMTP id c13so667801pgt.1;
        Tue, 14 May 2019 21:12:07 -0700 (PDT)
DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/relaxed;
        d=gmail.com; s=20161025;
        h=from:to:cc:subject:date:message-id:in-reply-to:references
         :mime-version:content-transfer-encoding;
        bh=eb+dbUuTjVA56/xDakck36kQSbW7wCTN88gUyNWFXBA=;
        b=Ijpr+PAPbi6YKCOO4C+MQy3T9VpW9ibaRfbDFWLm1wQ9gqaPPPyKANK+i7lcYTH2Rp
         g4T/WygkDUtTrLF1QDs2P6AvTKakfHFu7b0JzepDMEJgZ3nvULp7/ue4r+sEr0jZo27c
         tbZjTApninRIetbHc132RG+2C1JpzHN0oBOeVlnXwrYvh3VwBsbnC2AbfAX6BKDMu7a0
         a4XKWM0NYuLyi2GY3QM2GBIk49umbCry8Quf8/BLp4OQtQ6ugfbb4TWozSqnqhC+9Mc9
         2nZHw0Z+4nAAaPqjBOzzJbM5we3FGAgpNreGH1j6bMVRqFXVJ3j/YgdxpHPounYDuG3o
         DiPA==
X-Google-DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/relaxed;
        d=1e100.net; s=20161025;
        h=x-gm-message-state:from:to:cc:subject:date:message-id:in-reply-to
         :references:mime-version:content-transfer-encoding;
        bh=eb+dbUuTjVA56/xDakck36kQSbW7wCTN88gUyNWFXBA=;
        b=t2NzdFzaMmFSJezLSiRypBsj05QIw0dGvP+DkV6bpMUvJKQGBcANMFcnKXpokJy3Ig
         lU1A2fYukF5Bbf9cb0QlPhmgjL5JCmI1lsigaAsyx5Axprwtbp7WgooycWYHdWaORJuN
         w5jLYGNzuSu1KRyS3/qb1hLU4UMs2Qs5tTZiWW3/eflEaucT2/nLLyM6q9zT4LcEw1bb
         /Im3xgnW33L9FYBc/2yaUMaLOQMg5kogYarYajqm7ktK3k+E8hK4lynvIDFYufLvgX1f
         ejdQReAsbvSn5pWRa+6Qh34abmiYd9z65hKNpoJnR/9xQFqqeuZUc9iRR54BYi2mMxPM
         0Y0A==
X-Gm-Message-State: APjAAAXpITkL3kRCTnSJGhothHbzwSW6DRd7Iu5Rnqin6BDgBUCWz6wp
        iWfi4VAfas65QQA+gMvNfsW1R6mk
X-Google-Smtp-Source: 
 APXvYqyf8wKC7JXk2fZd4GmzEdwcIs0k+ownIyOfiziiQfQeBGJrqA6R4SYZWrOj/5UWp/CUM4DRSg==
X-Received: by 2002:a65:62c4:: with SMTP id m4mr41742140pgv.308.1557893527519;
        Tue, 14 May 2019 21:12:07 -0700 (PDT)
Received: from localhost.localdomain ([203.205.141.123])
        by smtp.googlemail.com with ESMTPSA id
 z187sm886788pfb.132.2019.05.14.21.12.05
        (version=TLS1_2 cipher=ECDHE-RSA-AES128-SHA bits=128/128);
        Tue, 14 May 2019 21:12:07 -0700 (PDT)
From: Wanpeng Li <kernellwp@gmail.com>
X-Google-Original-From: Wanpeng Li <wanpengli@tencent.com>
To: linux-kernel@vger.kernel.org, kvm@vger.kernel.org
Cc: Paolo Bonzini <pbonzini@redhat.com>,
 =?utf-8?b?UmFkaW0gS3LEjW3DocWZ?= <rkrcmar@redhat.com>,
 Sean Christopherson <sean.j.christopherson@intel.com>,
 Liran Alon <liran.alon@oracle.com>
Subject: [PATCH v2 4/4] KVM: LAPIC: Optimize timer latency further
Date: Wed, 15 May 2019 12:11:54 +0800
Message-Id: <1557893514-5815-5-git-send-email-wanpengli@tencent.com>
X-Mailer: git-send-email 2.7.4
In-Reply-To: <1557893514-5815-1-git-send-email-wanpengli@tencent.com>
References: <1557893514-5815-1-git-send-email-wanpengli@tencent.com>
MIME-Version: 1.0
Content-Type: text/plain; charset=UTF-8
Sender: kvm-owner@vger.kernel.org
Precedence: bulk
List-ID: <kvm.vger.kernel.org>
X-Mailing-List: kvm@vger.kernel.org
X-Virus-Scanned: ClamAV using ClamSMTP

From: Wanpeng Li <wanpengli@tencent.com>

Advance lapic timer tries to hidden the hypervisor overhead between the 
host emulated timer fires and the guest awares the timer is fired. However, 
it just hidden the time between apic_timer_fn/handle_preemption_timer -> 
wait_lapic_expire, instead of the real position of vmentry which is 
mentioned in the orignial commit d0659d946be0 ("KVM: x86: add option to 
advance tscdeadline hrtimer expiration"). There is 700+ cpu cycles between 
the end of wait_lapic_expire and before world switch on my haswell desktop, 
it will be 2400+ cycles if vmentry_l1d_flush is tuned to always. 

This patch tries to narrow the last gap(wait_lapic_expire -> world switch), 
it takes the real overhead time between apic_timer_fn/handle_preemption_timer
and before world switch into consideration when adaptively tuning timer 
advancement. The patch can reduce 40% latency (~1600+ cycles to ~1000+ cycles 
on a haswell desktop) for kvm-unit-tests/tscdeadline_latency when testing 
busy waits.

Cc: Paolo Bonzini <pbonzini@redhat.com>
Cc: Radim Krčmář <rkrcmar@redhat.com>
Cc: Sean Christopherson <sean.j.christopherson@intel.com>
Cc: Liran Alon <liran.alon@oracle.com>
Signed-off-by: Wanpeng Li <wanpengli@tencent.com>
---
 arch/x86/kvm/lapic.c   | 3 ++-
 arch/x86/kvm/lapic.h   | 2 +-
 arch/x86/kvm/svm.c     | 4 ++++
 arch/x86/kvm/vmx/vmx.c | 4 ++++
 arch/x86/kvm/x86.c     | 3 ---
 5 files changed, 11 insertions(+), 5 deletions(-)

diff --git a/arch/x86/kvm/lapic.c b/arch/x86/kvm/lapic.c
index af38ece..63513de 100644
--- a/arch/x86/kvm/lapic.c
+++ b/arch/x86/kvm/lapic.c
@@ -1531,7 +1531,7 @@ static inline void adaptive_tune_timer_advancement(struct kvm_vcpu *vcpu,
 	apic->lapic_timer.timer_advance_ns = timer_advance_ns;
 }
 
-void wait_lapic_expire(struct kvm_vcpu *vcpu)
+void kvm_wait_lapic_expire(struct kvm_vcpu *vcpu)
 {
 	struct kvm_lapic *apic = vcpu->arch.apic;
 	u64 guest_tsc, tsc_deadline;
@@ -1553,6 +1553,7 @@ void wait_lapic_expire(struct kvm_vcpu *vcpu)
 	if (unlikely(!apic->lapic_timer.timer_advance_adjust_done))
 		adaptive_tune_timer_advancement(vcpu, apic->lapic_timer.advance_expire_delta);
 }
+EXPORT_SYMBOL_GPL(kvm_wait_lapic_expire);
 
 static void start_sw_tscdeadline(struct kvm_lapic *apic)
 {
diff --git a/arch/x86/kvm/lapic.h b/arch/x86/kvm/lapic.h
index 3e72a25..f974a3d 100644
--- a/arch/x86/kvm/lapic.h
+++ b/arch/x86/kvm/lapic.h
@@ -220,7 +220,7 @@ static inline int kvm_lapic_latched_init(struct kvm_vcpu *vcpu)
 
 bool kvm_apic_pending_eoi(struct kvm_vcpu *vcpu, int vector);
 
-void wait_lapic_expire(struct kvm_vcpu *vcpu);
+void kvm_wait_lapic_expire(struct kvm_vcpu *vcpu);
 
 bool kvm_intr_is_single_vcpu_fast(struct kvm *kvm, struct kvm_lapic_irq *irq,
 			struct kvm_vcpu **dest_vcpu);
diff --git a/arch/x86/kvm/svm.c b/arch/x86/kvm/svm.c
index 406b558..740fb3f 100644
--- a/arch/x86/kvm/svm.c
+++ b/arch/x86/kvm/svm.c
@@ -5646,6 +5646,10 @@ static void svm_vcpu_run(struct kvm_vcpu *vcpu)
 	 */
 	x86_spec_ctrl_set_guest(svm->spec_ctrl, svm->virt_spec_ctrl);
 
+	if (lapic_in_kernel(vcpu) &&
+		vcpu->arch.apic->lapic_timer.timer_advance_ns)
+		kvm_wait_lapic_expire(vcpu);
+
 	local_irq_enable();
 
 	asm volatile (
diff --git a/arch/x86/kvm/vmx/vmx.c b/arch/x86/kvm/vmx/vmx.c
index 9663d41..1c49946 100644
--- a/arch/x86/kvm/vmx/vmx.c
+++ b/arch/x86/kvm/vmx/vmx.c
@@ -6437,6 +6437,10 @@ static void vmx_vcpu_run(struct kvm_vcpu *vcpu)
 	if (vcpu->arch.cr2 != read_cr2())
 		write_cr2(vcpu->arch.cr2);
 
+	if (lapic_in_kernel(vcpu) &&
+		vcpu->arch.apic->lapic_timer.timer_advance_ns)
+		kvm_wait_lapic_expire(vcpu);
+
 	vmx->fail = __vmx_vcpu_run(vmx, (unsigned long *)&vcpu->arch.regs,
 				   vmx->loaded_vmcs->launched);
 
diff --git a/arch/x86/kvm/x86.c b/arch/x86/kvm/x86.c
index 1d89cb9..0eb9549 100644
--- a/arch/x86/kvm/x86.c
+++ b/arch/x86/kvm/x86.c
@@ -7894,9 +7894,6 @@ static int vcpu_enter_guest(struct kvm_vcpu *vcpu)
 	}
 
 	trace_kvm_entry(vcpu->vcpu_id);
-	if (lapic_in_kernel(vcpu) &&
-	    vcpu->arch.apic->lapic_timer.timer_advance_ns)
-		wait_lapic_expire(vcpu);
 	guest_enter_irqoff();
 
 	fpregs_assert_state_consistent();
