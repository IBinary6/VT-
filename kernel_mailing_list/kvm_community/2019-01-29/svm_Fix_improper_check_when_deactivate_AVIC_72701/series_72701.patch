From patchwork Tue Jan 29 08:09:46 2019
Content-Type: text/plain; charset="utf-8"
MIME-Version: 1.0
Content-Transfer-Encoding: 8bit
X-Patchwork-Submitter: "Suthikulpanit,
 Suravee" <Suravee.Suthikulpanit@amd.com>
X-Patchwork-Id: 10785691
Return-Path: <kvm-owner@kernel.org>
Received: from mail.wl.linuxfoundation.org (pdx-wl-mail.web.codeaurora.org
 [172.30.200.125])
	by pdx-korg-patchwork-2.web.codeaurora.org (Postfix) with ESMTP id 6A1E613B4
	for <patchwork-kvm@patchwork.kernel.org>;
 Tue, 29 Jan 2019 08:10:22 +0000 (UTC)
Received: from mail.wl.linuxfoundation.org (localhost [127.0.0.1])
	by mail.wl.linuxfoundation.org (Postfix) with ESMTP id 5A1322B6B9
	for <patchwork-kvm@patchwork.kernel.org>;
 Tue, 29 Jan 2019 08:10:22 +0000 (UTC)
Received: by mail.wl.linuxfoundation.org (Postfix, from userid 486)
	id 4AE802B6ED; Tue, 29 Jan 2019 08:10:22 +0000 (UTC)
X-Spam-Checker-Version: SpamAssassin 3.3.1 (2010-03-16) on
	pdx-wl-mail.web.codeaurora.org
X-Spam-Level: 
X-Spam-Status: No, score=-7.9 required=2.0 tests=BAYES_00,DKIM_SIGNED,
	DKIM_VALID,MAILING_LIST_MULTI,RCVD_IN_DNSWL_HI autolearn=ham version=3.3.1
Received: from vger.kernel.org (vger.kernel.org [209.132.180.67])
	by mail.wl.linuxfoundation.org (Postfix) with ESMTP id CD2E72B6B9
	for <patchwork-kvm@patchwork.kernel.org>;
 Tue, 29 Jan 2019 08:10:21 +0000 (UTC)
Received: (majordomo@vger.kernel.org) by vger.kernel.org via listexpand
        id S1727908AbfA2IJu (ORCPT
        <rfc822;patchwork-kvm@patchwork.kernel.org>);
        Tue, 29 Jan 2019 03:09:50 -0500
Received: from mail-eopbgr740053.outbound.protection.outlook.com
 ([40.107.74.53]:27758
        "EHLO NAM01-BN3-obe.outbound.protection.outlook.com"
        rhost-flags-OK-OK-OK-FAIL) by vger.kernel.org with ESMTP
        id S1727781AbfA2IJt (ORCPT <rfc822;kvm@vger.kernel.org>);
        Tue, 29 Jan 2019 03:09:49 -0500
DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/relaxed;
 d=amdcloud.onmicrosoft.com; s=selector1-amd-com;
 h=From:Date:Subject:Message-ID:Content-Type:MIME-Version:X-MS-Exchange-SenderADCheck;
 bh=NjOA0nRKaUZqa59shphD8+kqEBj/b7FPWV//9bR1ZNY=;
 b=GFyHmHqAQrr5h0BPYNLEzfyScTMCRnYJgJLn1r/7gAupAgJd43cX+bsXKJvGjST5Zee+1K/jRr4NMTt1djg2qKMTZz1U1uij9dlIFx47IBk5hlxw044lHS0sOhmOn9DfnbjKTDO0OgnvEEpXtfe5NN0A22fwcdyODg/qLgvTsVI=
Received: from DM6PR12MB2844.namprd12.prod.outlook.com (20.176.117.96) by
 DM6PR12MB3610.namprd12.prod.outlook.com (20.178.199.84) with Microsoft SMTP
 Server (version=TLS1_2, cipher=TLS_ECDHE_RSA_WITH_AES_256_GCM_SHA384) id
 15.20.1558.20; Tue, 29 Jan 2019 08:09:46 +0000
Received: from DM6PR12MB2844.namprd12.prod.outlook.com
 ([fe80::c40:929a:abab:308d]) by DM6PR12MB2844.namprd12.prod.outlook.com
 ([fe80::c40:929a:abab:308d%3]) with mapi id 15.20.1558.023; Tue, 29 Jan 2019
 08:09:46 +0000
From: "Suthikulpanit, Suravee" <Suravee.Suthikulpanit@amd.com>
To: "linux-kernel@vger.kernel.org" <linux-kernel@vger.kernel.org>,
        "kvm@vger.kernel.org" <kvm@vger.kernel.org>,
        "x86@kernel.org" <x86@kernel.org>
CC: "joro@8bytes.org" <joro@8bytes.org>,
        "rkrcmar@redhat.com" <rkrcmar@redhat.com>,
        "pbonzini@redhat.com" <pbonzini@redhat.com>,
        "tglx@linutronix.de" <tglx@linutronix.de>,
        "mingo@redhat.com" <mingo@redhat.com>,
        "bp@alien8.de" <bp@alien8.de>, "hpa@zytor.com" <hpa@zytor.com>,
        "Suthikulpanit, Suravee" <Suravee.Suthikulpanit@amd.com>
Subject: [PATCH] svm: Fix improper check when deactivate AVIC
Thread-Topic: [PATCH] svm: Fix improper check when deactivate AVIC
Thread-Index: AQHUt6n/PbEp8KQZn0iUg2/B2tUkjQ==
Date: Tue, 29 Jan 2019 08:09:46 +0000
Message-ID: <20190129080913.40998-1-suravee.suthikulpanit@amd.com>
Accept-Language: en-US
Content-Language: en-US
X-MS-Has-Attach: 
X-MS-TNEF-Correlator: 
x-originating-ip: [124.121.4.14]
x-clientproxiedby: SG2PR02CA0116.apcprd02.prod.outlook.com
 (2603:1096:4:92::32) To DM6PR12MB2844.namprd12.prod.outlook.com
 (2603:10b6:5:45::32)
authentication-results: spf=none (sender IP is )
 smtp.mailfrom=Suravee.Suthikulpanit@amd.com;
x-ms-exchange-messagesentrepresentingtype: 1
x-mailer: git-send-email 2.17.1
x-ms-publictraffictype: Email
x-microsoft-exchange-diagnostics: 
 1;DM6PR12MB3610;20:oV5P7kp3vevm+ygJpalY4V4bVylbE+ADgh9l+mcLfdKz6vifPouEO8c3OKlSpV01vDegF2/DtiCHOKekxUkpnYl3k2lyuOfTcWHAdFSqmavh9SNDJS9cX0km0EfBRpaOCFXBnk3buwE2KNBJvaEryJJ0y1iuqoKMF/mszrFw0Bmf1pUXehriWT/TwZ3odtJmw72TlqFkkeOhMfXQatGGwsRXh3OOeDIjseQ+fI3L7sZ63XLNxgptR+xMQZthD2o/
x-ms-office365-filtering-correlation-id: debe10c2-69e7-40a8-8198-08d685c121a6
x-ms-office365-filtering-ht: Tenant
x-microsoft-antispam: 
 BCL:0;PCL:0;RULEID:(2390118)(7020095)(4652040)(8989299)(4534185)(4627221)(201703031133081)(201702281549075)(8990200)(5600110)(711020)(4605077)(4618075)(2017052603328)(7153060)(7193020);SRVR:DM6PR12MB3610;
x-ms-traffictypediagnostic: DM6PR12MB3610:
x-microsoft-antispam-prvs: 
 <DM6PR12MB3610F2E9C62983EC9E30678AF3970@DM6PR12MB3610.namprd12.prod.outlook.com>
x-forefront-prvs: 093290AD39
x-forefront-antispam-report: 
 SFV:NSPM;SFS:(10009020)(396003)(346002)(376002)(366004)(136003)(39860400002)(199004)(189003)(305945005)(8676002)(81156014)(71200400001)(81166006)(71190400001)(50226002)(7736002)(6116002)(3846002)(256004)(14444005)(8936002)(1076003)(66574012)(2906002)(54906003)(66066001)(52116002)(110136005)(316002)(68736007)(97736004)(386003)(6506007)(99286004)(7416002)(6512007)(102836004)(4326008)(26005)(486006)(476003)(2501003)(2616005)(6486002)(6436002)(186003)(105586002)(72206003)(36756003)(478600001)(53936002)(14454004)(2201001)(106356001)(25786009)(86362001);DIR:OUT;SFP:1101;SCL:1;SRVR:DM6PR12MB3610;H:DM6PR12MB2844.namprd12.prod.outlook.com;FPR:;SPF:None;LANG:en;PTR:InfoNoRecords;A:1;MX:1;
received-spf: None (protection.outlook.com: amd.com does not designate
 permitted sender hosts)
x-ms-exchange-senderadcheck: 1
x-microsoft-antispam-message-info: 
 Akis3geVUYRathRkv8aiOZuACTcrRsXbqFjDijN5hr94aRP4LZZ6f0qnHap8r9MmNDQ3LkIpRQm9A8LWJKFshDNlBXKQid2is+xUcyIve2OQkzOpDTyDUHrRbBJX35UyFoK62Xt/AUaLWhF9jchPQ1tamkSwLMel0RNpJaKZWKsCDWGpvyz0+byKzJb5EhnfzbWoillSFET3sSH3iq7duWRLehZtI5bAK37uIujUio435C3a+gy6uhTKKUIR5+mL8EQ+v2xXZMY+LDy1nGFI6raCmNEjDvY7yBVyi/qLE783h0ygJbnV9jQi0Fg+v5AJ2POD9GLeoltka7VizVgUfM5nn+5EiZVQx9vJsA72nWNeWbZ2vAx86ad45+sl7kn3pw+EONcoBKbQs2JYM7WuyZFfjGnUU39VMzEuLYe+jks=
Content-Type: text/plain; charset="utf-8"
Content-ID: <3CFC8CC90DE3B647B9A3F453C0BE0391@namprd12.prod.outlook.com>
MIME-Version: 1.0
X-OriginatorOrg: amd.com
X-MS-Exchange-CrossTenant-Network-Message-Id: 
 debe10c2-69e7-40a8-8198-08d685c121a6
X-MS-Exchange-CrossTenant-originalarrivaltime: 29 Jan 2019 08:09:35.4222
 (UTC)
X-MS-Exchange-CrossTenant-fromentityheader: Hosted
X-MS-Exchange-CrossTenant-id: 3dd8961f-e488-4e60-8e11-a82d994e183d
X-MS-Exchange-Transport-CrossTenantHeadersStamped: DM6PR12MB3610
Sender: kvm-owner@vger.kernel.org
Precedence: bulk
List-ID: <kvm.vger.kernel.org>
X-Mailing-List: kvm@vger.kernel.org
X-Virus-Scanned: ClamAV using ClamSMTP

The function svm_refresh_apicv_exec_ctrl() always returning prematurely
as kvm_vcpu_apicv_active() always return false when calling from
the function arch/x86/kvm/x86.c:kvm_vcpu_deactivate_apicv().
This is because the apicv_active is set to false just before calling
refresh_apicv_exec_ctrl().

Also, we need to mark VMCB_AVIC bit as dirty instead of VMCB_INTR.

So, fix svm_refresh_apicv_exec_ctrl() to properly deactivate AVIC.

Fixes: 67034bb9dd5e ('KVM: SVM: Add irqchip_split() checks before enabling AVIC')
Cc: Radim Krčmář <rkrcmar@redhat.com>
Cc: Paolo Bonzini <pbonzini@redhat.com>
Signed-off-by: Suravee Suthikulpanit <suravee.suthikulpanit@amd.com>
---
 arch/x86/kvm/svm.c | 22 ++++++++++++++++++----
 1 file changed, 18 insertions(+), 4 deletions(-)

diff --git a/arch/x86/kvm/svm.c b/arch/x86/kvm/svm.c
index d35c9002f282..59b1f68060c7 100644
--- a/arch/x86/kvm/svm.c
+++ b/arch/x86/kvm/svm.c
@@ -390,6 +390,8 @@ static int nested_svm_vmexit(struct vcpu_svm *svm);
 static int nested_svm_check_exception(struct vcpu_svm *svm, unsigned nr,
 				      bool has_error_code, u32 error_code);
 
+static bool svm_get_enable_apicv(struct kvm_vcpu *vcpu);
+
 enum {
 	VMCB_INTERCEPTS, /* Intercept vectors, TSC offset,
 			    pause filter count */
@@ -478,6 +480,12 @@ static inline struct vcpu_svm *to_svm(struct kvm_vcpu *vcpu)
 	return container_of(vcpu, struct vcpu_svm, vcpu);
 }
 
+static bool is_avic_active(struct vcpu_svm *svm)
+{
+	return (svm_get_enable_apicv(&svm->vcpu) &&
+		svm->vmcb->control.int_ctl & AVIC_ENABLE_MASK);
+}
+
 static inline void avic_update_vapic_bar(struct vcpu_svm *svm, u64 data)
 {
 	svm->vmcb->control.avic_vapic_bar = data & VMCB_AVIC_APIC_BAR_MASK;
@@ -5108,17 +5116,23 @@ static void svm_hwapic_isr_update(struct kvm_vcpu *vcpu, int max_isr)
 {
 }
 
-/* Note: Currently only used by Hyper-V. */
-static void svm_refresh_apicv_exec_ctrl(struct kvm_vcpu *vcpu)
+static void svm_deactivate_avic(struct kvm_vcpu *vcpu)
 {
 	struct vcpu_svm *svm = to_svm(vcpu);
 	struct vmcb *vmcb = svm->vmcb;
 
-	if (!kvm_vcpu_apicv_active(&svm->vcpu))
+	if (!lapic_in_kernel(vcpu) || !is_avic_active(svm))
 		return;
 
 	vmcb->control.int_ctl &= ~AVIC_ENABLE_MASK;
-	mark_dirty(vmcb, VMCB_INTR);
+	mark_dirty(vmcb, VMCB_AVIC);
+}
+
+/* Note: Currently only used by Hyper-V. */
+static void svm_refresh_apicv_exec_ctrl(struct kvm_vcpu *vcpu)
+{
+	if (!kvm_vcpu_apicv_active(vcpu))
+		svm_deactivate_avic(vcpu);
 }
 
 static void svm_load_eoi_exitmap(struct kvm_vcpu *vcpu, u64 *eoi_exit_bitmap)
