From patchwork Fri May  3 10:32:04 2019
Content-Type: text/plain; charset="utf-8"
MIME-Version: 1.0
Content-Transfer-Encoding: 7bit
X-Patchwork-Submitter: Nadav Amit <nadav.amit@gmail.com>
X-Patchwork-Id: 10929115
Return-Path: <kvm-owner@kernel.org>
Received: from mail.wl.linuxfoundation.org (pdx-wl-mail.web.codeaurora.org
 [172.30.200.125])
	by pdx-korg-patchwork-2.web.codeaurora.org (Postfix) with ESMTP id 8AAB11395
	for <patchwork-kvm@patchwork.kernel.org>;
 Fri,  3 May 2019 17:54:38 +0000 (UTC)
Received: from mail.wl.linuxfoundation.org (localhost [127.0.0.1])
	by mail.wl.linuxfoundation.org (Postfix) with ESMTP id 7AD4828726
	for <patchwork-kvm@patchwork.kernel.org>;
 Fri,  3 May 2019 17:54:38 +0000 (UTC)
Received: by mail.wl.linuxfoundation.org (Postfix, from userid 486)
	id 6F1312872A; Fri,  3 May 2019 17:54:38 +0000 (UTC)
X-Spam-Checker-Version: SpamAssassin 3.3.1 (2010-03-16) on
	pdx-wl-mail.web.codeaurora.org
X-Spam-Level: 
X-Spam-Status: No, score=-6.5 required=2.0 tests=BAYES_00,DATE_IN_PAST_06_12,
	DKIM_SIGNED,DKIM_VALID,DKIM_VALID_AU,FREEMAIL_FROM,MAILING_LIST_MULTI,
	RCVD_IN_DNSWL_HI autolearn=ham version=3.3.1
Received: from vger.kernel.org (vger.kernel.org [209.132.180.67])
	by mail.wl.linuxfoundation.org (Postfix) with ESMTP id 1F8FF28726
	for <patchwork-kvm@patchwork.kernel.org>;
 Fri,  3 May 2019 17:54:38 +0000 (UTC)
Received: (majordomo@vger.kernel.org) by vger.kernel.org via listexpand
        id S1728138AbfECRyh (ORCPT
        <rfc822;patchwork-kvm@patchwork.kernel.org>);
        Fri, 3 May 2019 13:54:37 -0400
Received: from mail-pf1-f195.google.com ([209.85.210.195]:46904 "EHLO
        mail-pf1-f195.google.com" rhost-flags-OK-OK-OK-OK) by vger.kernel.org
        with ESMTP id S1726681AbfECRyg (ORCPT <rfc822;kvm@vger.kernel.org>);
        Fri, 3 May 2019 13:54:36 -0400
Received: by mail-pf1-f195.google.com with SMTP id j11so3217303pff.13
        for <kvm@vger.kernel.org>; Fri, 03 May 2019 10:54:36 -0700 (PDT)
DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/relaxed;
        d=gmail.com; s=20161025;
        h=from:to:cc:subject:date:message-id:in-reply-to:references;
        bh=YpwcJhC+aRde9DQlu4qky8jgwkS9GBatmOhNjkN4cD8=;
        b=LoW24bqchOPdHaW/ZcyABCuO5jUh63XHskisHJIEZT8Epg4EC3BwXDQWHSnafdaon0
         U2K8Z035+2buzezqZFRViXQZZSg+BtpfJv/5RMI/WFcjnjlKW4Dt+pYiHpeEcOqbBaAe
         wNG9ewzViDx3f4wmzQXs+YomQT4+BlpyrLdyTy26EfUTGpAvp0g66ip7v/Y0bycdl85Q
         /GrCh2nMQy35znRMyTEMVkMrUDDa/3zvK/BAR0WxGgJ1l0/XpXiaYrLWsIZX7/VGNkPR
         PxVE9o5HJ7fnEhZw8PVAiWRsjeNRJZ+E891vP7n+mdkVw6r/bQ8fHJKvJFh4PnXz2Y5g
         w3ZQ==
X-Google-DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/relaxed;
        d=1e100.net; s=20161025;
        h=x-gm-message-state:from:to:cc:subject:date:message-id:in-reply-to
         :references;
        bh=YpwcJhC+aRde9DQlu4qky8jgwkS9GBatmOhNjkN4cD8=;
        b=h/6C3YjG8LlJlS/CQMjPZg1QN+7pe8/p5M0KTK+BWtCczjP+RjBLXLyerA7YuH9alI
         xP+CYdhBM3p/IXKJywO3pVJtdXW2abe5P8x/94kplvDt5bQ6LXAZEDZGo+dNNNm4Y6p0
         MEsWNgVnhWIIxWhC8yn3wYe0ti7Yi1Dp26gA2OZEeW4iOSjgH8uylZU9V9wcA8P/xaTD
         hg8OICzUvHIypdgGqGOIMbRBihvoLJoAK6bMWusR7wApNPvKEXZ79zxCMdZobmTLwAJO
         9rNw8t+sxMSIQcro+z/tpMJU3sksi0cxaJCGDgb63nnMVQkuz0yyNtLt/Y8l565jWpqn
         vA9w==
X-Gm-Message-State: APjAAAXYHwFj/AmeKNqsVr0xRLPEoqOFJHboKzPwJUimWIlsrT5s1jNf
        WjC/bI3FFjOT4jjQB6bzKQg=
X-Google-Smtp-Source: 
 APXvYqwdAQQDDaXkmHNiMumIavT4E4QZeTfiFzSHEaB6pdK09GIY5B3J7lDDdTtUCtOg1tWeNWjZ8w==
X-Received: by 2002:a63:8a4a:: with SMTP id
 y71mr12220822pgd.270.1556906076200;
        Fri, 03 May 2019 10:54:36 -0700 (PDT)
Received: from sc2-haas01-esx0118.eng.vmware.com ([66.170.99.1])
        by smtp.gmail.com with ESMTPSA id
 p20sm3717311pgj.86.2019.05.03.10.54.34
        (version=TLS1_2 cipher=ECDHE-RSA-AES128-GCM-SHA256 bits=128/128);
        Fri, 03 May 2019 10:54:34 -0700 (PDT)
From: nadav.amit@gmail.com
To: Paolo Bonzini <pbonzini@redhat.com>
Cc: kvm@vger.kernel.org, Andrew Jones <drjones@redhat.com>,
        Nadav Amit <nadav.amit@gmail.com>
Subject: [kvm-unit-tests PATCH v2 1/4] lib/alloc_page: Zero allocated pages
Date: Fri,  3 May 2019 03:32:04 -0700
Message-Id: <20190503103207.9021-2-nadav.amit@gmail.com>
X-Mailer: git-send-email 2.17.1
In-Reply-To: <20190503103207.9021-1-nadav.amit@gmail.com>
References: <20190503103207.9021-1-nadav.amit@gmail.com>
Sender: kvm-owner@vger.kernel.org
Precedence: bulk
List-ID: <kvm.vger.kernel.org>
X-Mailing-List: kvm@vger.kernel.org
X-Virus-Scanned: ClamAV using ClamSMTP

From: Nadav Amit <nadav.amit@gmail.com>

One of the most important properties of tests is reproducibility. For
tests to be reproducible, the same environment should be set on each
test invocation.

When it comes to memory content, this is not exactly the case in
kvm-unit-tests. The tests might, mistakenly or intentionally, assume
that memory is zeroed (by the BIOS or KVM).  However, failures might not
be reproducible if this assumption is broken.

As an example, consider x86 do_iret(), which mistakenly does not push
SS:RSP onto the stack on 64-bit mode, although they are popped
unconditionally on iret.

Do not assume that memory is zeroed. Clear it once it is allocated to
allow tests to easily be reproduced.

Signed-off-by: Nadav Amit <nadav.amit@gmail.com>
Reviewed-by: Krish Sadhukhan <krish.sadhukhan@oracle.com>
---
 lib/alloc_page.c | 4 ++++
 1 file changed, 4 insertions(+)

diff --git a/lib/alloc_page.c b/lib/alloc_page.c
index 730f2b5..97d1339 100644
--- a/lib/alloc_page.c
+++ b/lib/alloc_page.c
@@ -65,6 +65,8 @@ void *alloc_page()
 	freelist = *(void **)freelist;
 	spin_unlock(&lock);
 
+	if (p)
+		memset(p, 0, PAGE_SIZE);
 	return p;
 }
 
@@ -126,6 +128,8 @@ void *alloc_pages(unsigned long order)
 		}
 	}
 	spin_unlock(&lock);
+	if (run_start)
+		memset(run_start, 0, n * PAGE_SIZE);
 	return run_start;
 }
 

From patchwork Fri May  3 10:32:05 2019
Content-Type: text/plain; charset="utf-8"
MIME-Version: 1.0
Content-Transfer-Encoding: 7bit
X-Patchwork-Submitter: Nadav Amit <nadav.amit@gmail.com>
X-Patchwork-Id: 10929117
Return-Path: <kvm-owner@kernel.org>
Received: from mail.wl.linuxfoundation.org (pdx-wl-mail.web.codeaurora.org
 [172.30.200.125])
	by pdx-korg-patchwork-2.web.codeaurora.org (Postfix) with ESMTP id ED6BF1395
	for <patchwork-kvm@patchwork.kernel.org>;
 Fri,  3 May 2019 17:54:40 +0000 (UTC)
Received: from mail.wl.linuxfoundation.org (localhost [127.0.0.1])
	by mail.wl.linuxfoundation.org (Postfix) with ESMTP id DDEF228725
	for <patchwork-kvm@patchwork.kernel.org>;
 Fri,  3 May 2019 17:54:40 +0000 (UTC)
Received: by mail.wl.linuxfoundation.org (Postfix, from userid 486)
	id D1FC028727; Fri,  3 May 2019 17:54:40 +0000 (UTC)
X-Spam-Checker-Version: SpamAssassin 3.3.1 (2010-03-16) on
	pdx-wl-mail.web.codeaurora.org
X-Spam-Level: 
X-Spam-Status: No, score=-6.5 required=2.0 tests=BAYES_00,DATE_IN_PAST_06_12,
	DKIM_SIGNED,DKIM_VALID,DKIM_VALID_AU,FREEMAIL_FROM,MAILING_LIST_MULTI,
	RCVD_IN_DNSWL_HI autolearn=ham version=3.3.1
Received: from vger.kernel.org (vger.kernel.org [209.132.180.67])
	by mail.wl.linuxfoundation.org (Postfix) with ESMTP id 34A5A28725
	for <patchwork-kvm@patchwork.kernel.org>;
 Fri,  3 May 2019 17:54:40 +0000 (UTC)
Received: (majordomo@vger.kernel.org) by vger.kernel.org via listexpand
        id S1728349AbfECRyj (ORCPT
        <rfc822;patchwork-kvm@patchwork.kernel.org>);
        Fri, 3 May 2019 13:54:39 -0400
Received: from mail-pg1-f196.google.com ([209.85.215.196]:38489 "EHLO
        mail-pg1-f196.google.com" rhost-flags-OK-OK-OK-OK) by vger.kernel.org
        with ESMTP id S1728348AbfECRyi (ORCPT <rfc822;kvm@vger.kernel.org>);
        Fri, 3 May 2019 13:54:38 -0400
Received: by mail-pg1-f196.google.com with SMTP id j26so3066115pgl.5
        for <kvm@vger.kernel.org>; Fri, 03 May 2019 10:54:38 -0700 (PDT)
DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/relaxed;
        d=gmail.com; s=20161025;
        h=from:to:cc:subject:date:message-id:in-reply-to:references;
        bh=4b7EchxMqpmvcvf8YpPHyox1Fq7RXDgQ+c9gJbqL3zw=;
        b=fMhTRKOCcumxZwr9ry0YEowRo9QuJb5pTbEDyFmn6e7+F2rAyTn8K1jCCiIi8A7o0A
         DKp78UtquaQKv2zOuOJ7OCjQa5Gl8JLLfwDMVdU6aSXDBAF1BSHVtA7a5buM/SSADQFB
         Z9rUqAKz/v/ghk0Lna1RW2kheDKkdu9HmGU8UBCWvZ4TB3VE0GfR3kEq58j6MCUJgwzt
         8E7FC0/JZT1w+pVJVGohNaYdsz9DVj+MhGECrKniP0nlT+1Nk0JmDXeinWQSrz2IMD2Z
         sducKVfF/SS0/eLgI7r8nf3wWTQyykZ6b+8k+YL139Ua23PbIm7PajpVUcDXMlqJcnAv
         +ZBg==
X-Google-DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/relaxed;
        d=1e100.net; s=20161025;
        h=x-gm-message-state:from:to:cc:subject:date:message-id:in-reply-to
         :references;
        bh=4b7EchxMqpmvcvf8YpPHyox1Fq7RXDgQ+c9gJbqL3zw=;
        b=oSpoi9x/fFaVV2KfEOjz9b1G8JcD94fxEFSEEBt70d6NwdmVuSV7qLhWlZSGPPjmHh
         L3mE0srz7kwyD8AmSX+9WL7dEjixwe424pZskGoai+ywONxOKCGTyu2YnkFdBCHfxHWc
         QUXYUBBW0E1QshuK3wV3/qtjy/m2AuYiIONIeX3Ta+odUB02H6i9QXoemThAFdAVyyNV
         uGkOATyX754s/0r/ekJP575weK/2KkcEqagIfj9xt3rj6DuhdG5c3vGzR069MKwqeoOE
         pTfmmHMZLtprIJL4DWCvwDOoyL5X7qWTx5xqc6hbnDbPEic3lsBpDj4trxsyi8s/pkcX
         5z1Q==
X-Gm-Message-State: APjAAAUuv/juRkjnw42HD7WAFCTT4dvL3ISWfhrnCq2jgbLMJz6dfaB8
        HWZjrgtlJ5bhW18QOIZIvns=
X-Google-Smtp-Source: 
 APXvYqx+jAEe4d+OeZl+zYDzpUJ1m161tyObwGl1zkh+BojK8PxRTEp24SPLnac/ZFxHsWZlmw93Uw==
X-Received: by 2002:a62:ac0a:: with SMTP id v10mr3639790pfe.57.1556906077519;
        Fri, 03 May 2019 10:54:37 -0700 (PDT)
Received: from sc2-haas01-esx0118.eng.vmware.com ([66.170.99.1])
        by smtp.gmail.com with ESMTPSA id
 p20sm3717311pgj.86.2019.05.03.10.54.36
        (version=TLS1_2 cipher=ECDHE-RSA-AES128-GCM-SHA256 bits=128/128);
        Fri, 03 May 2019 10:54:36 -0700 (PDT)
From: nadav.amit@gmail.com
To: Paolo Bonzini <pbonzini@redhat.com>
Cc: kvm@vger.kernel.org, Andrew Jones <drjones@redhat.com>,
        Nadav Amit <nadav.amit@gmail.com>
Subject: [kvm-unit-tests PATCH v2 2/4] x86: Remove redeundant page zeroing
Date: Fri,  3 May 2019 03:32:05 -0700
Message-Id: <20190503103207.9021-3-nadav.amit@gmail.com>
X-Mailer: git-send-email 2.17.1
In-Reply-To: <20190503103207.9021-1-nadav.amit@gmail.com>
References: <20190503103207.9021-1-nadav.amit@gmail.com>
Sender: kvm-owner@vger.kernel.org
Precedence: bulk
List-ID: <kvm.vger.kernel.org>
X-Mailing-List: kvm@vger.kernel.org
X-Virus-Scanned: ClamAV using ClamSMTP

From: Nadav Amit <nadav.amit@gmail.com>

Now that alloc_page() zeros the page, remove the redundant page zeroing.

Suggested-by: Andrew Jones <drjones@redhat.com>
Signed-off-by: Nadav Amit <nadav.amit@gmail.com>
Reviewed-by: Krish Sadhukhan <krish.sadhukhan@oracle.com>
---
 lib/x86/intel-iommu.c    |  5 -----
 x86/eventinj.c           |  1 -
 x86/hyperv_connections.c |  4 ----
 x86/vmx.c                | 10 ----------
 x86/vmx_tests.c          | 11 -----------
 5 files changed, 31 deletions(-)

diff --git a/lib/x86/intel-iommu.c b/lib/x86/intel-iommu.c
index 3f3f211..c811ba5 100644
--- a/lib/x86/intel-iommu.c
+++ b/lib/x86/intel-iommu.c
@@ -125,7 +125,6 @@ static void vtd_setup_root_table(void)
 {
 	void *root = alloc_page();
 
-	memset(root, 0, PAGE_SIZE);
 	vtd_writeq(DMAR_RTADDR_REG, virt_to_phys(root));
 	vtd_gcmd_or(VTD_GCMD_ROOT);
 	printf("DMAR table address: %#018lx\n", vtd_root_table());
@@ -135,7 +134,6 @@ static void vtd_setup_ir_table(void)
 {
 	void *root = alloc_page();
 
-	memset(root, 0, PAGE_SIZE);
 	/* 0xf stands for table size (2^(0xf+1) == 65536) */
 	vtd_writeq(DMAR_IRTA_REG, virt_to_phys(root) | 0xf);
 	vtd_gcmd_or(VTD_GCMD_IR_TABLE);
@@ -153,7 +151,6 @@ static void vtd_install_pte(vtd_pte_t *root, iova_t iova,
 		offset = PGDIR_OFFSET(iova, level);
 		if (!(root[offset] & VTD_PTE_RW)) {
 			page = alloc_page();
-			memset(page, 0, PAGE_SIZE);
 			root[offset] = virt_to_phys(page) | VTD_PTE_RW;
 		}
 		root = (uint64_t *)(phys_to_virt(root[offset] &
@@ -195,7 +192,6 @@ void vtd_map_range(uint16_t sid, iova_t iova, phys_addr_t pa, size_t size)
 
 	if (!re->present) {
 		ce = alloc_page();
-		memset(ce, 0, PAGE_SIZE);
 		memset(re, 0, sizeof(*re));
 		re->context_table_p = virt_to_phys(ce) >> VTD_PAGE_SHIFT;
 		re->present = 1;
@@ -209,7 +205,6 @@ void vtd_map_range(uint16_t sid, iova_t iova, phys_addr_t pa, size_t size)
 
 	if (!ce->present) {
 		slptptr = alloc_page();
-		memset(slptptr, 0, PAGE_SIZE);
 		memset(ce, 0, sizeof(*ce));
 		/* To make it simple, domain ID is the same as SID */
 		ce->domain_id = sid;
diff --git a/x86/eventinj.c b/x86/eventinj.c
index 250537b..5a07afe 100644
--- a/x86/eventinj.c
+++ b/x86/eventinj.c
@@ -403,7 +403,6 @@ int main(void)
 
 	pt = alloc_page();
 	cr3 = (void*)read_cr3();
-	memset(pt, 0, 4096);
 	/* use shadowed stack during interrupt delivery */
 	for (i = 0; i < 4096/sizeof(ulong); i++) {
 		if (!cr3[i]) {
diff --git a/x86/hyperv_connections.c b/x86/hyperv_connections.c
index 5d541c9..8eade41 100644
--- a/x86/hyperv_connections.c
+++ b/x86/hyperv_connections.c
@@ -47,7 +47,6 @@ static void setup_hypercall(void)
 	hypercall_page = alloc_page();
 	if (!hypercall_page)
 		report_abort("failed to allocate hypercall page");
-	memset(hypercall_page, 0, PAGE_SIZE);
 
 	wrmsr(HV_X64_MSR_GUEST_OS_ID, guestid);
 
@@ -105,9 +104,6 @@ static void setup_cpu(void *ctx)
 	hv->post_msg = alloc_page();
 	if (!hv->msg_page || !hv->evt_page || !hv->post_msg)
 		report_abort("failed to allocate synic pages for vcpu");
-	memset(hv->msg_page, 0, sizeof(*hv->msg_page));
-	memset(hv->evt_page, 0, sizeof(*hv->evt_page));
-	memset(hv->post_msg, 0, sizeof(*hv->post_msg));
 	hv->msg_conn = MSG_CONN_BASE + vcpu;
 	hv->evt_conn = EVT_CONN_BASE + vcpu;
 
diff --git a/x86/vmx.c b/x86/vmx.c
index be47800..962ec0f 100644
--- a/x86/vmx.c
+++ b/x86/vmx.c
@@ -353,7 +353,6 @@ static void test_vmwrite_vmread(void)
 	struct vmcs *vmcs = alloc_page();
 	u32 vmcs_enum_max, max_index = 0;
 
-	memset(vmcs, 0, PAGE_SIZE);
 	vmcs->hdr.revision_id = basic.revision;
 	assert(!vmcs_clear(vmcs));
 	assert(!make_vmcs_current(vmcs));
@@ -373,7 +372,6 @@ static void test_vmcs_high(void)
 {
 	struct vmcs *vmcs = alloc_page();
 
-	memset(vmcs, 0, PAGE_SIZE);
 	vmcs->hdr.revision_id = basic.revision;
 	assert(!vmcs_clear(vmcs));
 	assert(!make_vmcs_current(vmcs));
@@ -400,7 +398,6 @@ static void test_vmcs_lifecycle(void)
 
 	for (i = 0; i < ARRAY_SIZE(vmcs); i++) {
 		vmcs[i] = alloc_page();
-		memset(vmcs[i], 0, PAGE_SIZE);
 		vmcs[i]->hdr.revision_id = basic.revision;
 	}
 
@@ -647,7 +644,6 @@ static void test_vmclear_flushing(void)
 
 	for (i = 0; i < ARRAY_SIZE(vmcs); i++) {
 		vmcs[i] = alloc_page();
-		memset(vmcs[i], 0, PAGE_SIZE);
 	}
 
 	vmcs[0]->hdr.revision_id = basic.revision;
@@ -745,7 +741,6 @@ static void split_large_ept_entry(unsigned long *ptep, int level)
 
 	new_pt = alloc_page();
 	assert(new_pt);
-	memset(new_pt, 0, PAGE_SIZE);
 
 	prototype = pte & ~EPT_ADDR_MASK;
 	if (level == 2)
@@ -1220,7 +1215,6 @@ static void init_vmcs_guest(void)
 static int init_vmcs(struct vmcs **vmcs)
 {
 	*vmcs = alloc_page();
-	memset(*vmcs, 0, PAGE_SIZE);
 	(*vmcs)->hdr.revision_id = basic.revision;
 	/* vmclear first to init vmcs */
 	if (vmcs_clear(*vmcs)) {
@@ -1259,7 +1253,6 @@ static void init_vmx(void)
 	ulong fix_cr4_set, fix_cr4_clr;
 
 	vmxon_region = alloc_page();
-	memset(vmxon_region, 0, PAGE_SIZE);
 
 	vmcs_root = alloc_page();
 
@@ -1291,9 +1284,7 @@ static void init_vmx(void)
 	*vmxon_region = basic.revision;
 
 	guest_stack = alloc_page();
-	memset(guest_stack, 0, PAGE_SIZE);
 	guest_syscall_stack = alloc_page();
-	memset(guest_syscall_stack, 0, PAGE_SIZE);
 }
 
 static void do_vmxon_off(void *data)
@@ -1420,7 +1411,6 @@ static void test_vmptrst(void)
 	struct vmcs *vmcs1, *vmcs2;
 
 	vmcs1 = alloc_page();
-	memset(vmcs1, 0, PAGE_SIZE);
 	init_vmcs(&vmcs1);
 	ret = vmcs_save(&vmcs2);
 	report("test vmptrst", (!ret) && (vmcs1 == vmcs2));
diff --git a/x86/vmx_tests.c b/x86/vmx_tests.c
index 2d6b12d..c52ebc6 100644
--- a/x86/vmx_tests.c
+++ b/x86/vmx_tests.c
@@ -253,7 +253,6 @@ static void msr_bmp_init(void)
 	u32 ctrl_cpu0;
 
 	msr_bitmap = alloc_page();
-	memset(msr_bitmap, 0x0, PAGE_SIZE);
 	ctrl_cpu0 = vmcs_read(CPU_EXEC_CTRL0);
 	ctrl_cpu0 |= CPU_MSR_BITMAP;
 	vmcs_write(CPU_EXEC_CTRL0, ctrl_cpu0);
@@ -627,8 +626,6 @@ static int iobmp_init(struct vmcs *vmcs)
 
 	io_bitmap_a = alloc_page();
 	io_bitmap_b = alloc_page();
-	memset(io_bitmap_a, 0x0, PAGE_SIZE);
-	memset(io_bitmap_b, 0x0, PAGE_SIZE);
 	ctrl_cpu0 = vmcs_read(CPU_EXEC_CTRL0);
 	ctrl_cpu0 |= CPU_IO_BITMAP;
 	ctrl_cpu0 &= (~CPU_IO);
@@ -1062,8 +1059,6 @@ static int setup_ept(bool enable_ad)
 	if (__setup_ept(virt_to_phys(pml4), enable_ad))
 		return 1;
 
-	memset(pml4, 0, PAGE_SIZE);
-
 	end_of_memory = fwcfg_get_u64(FW_CFG_RAM_SIZE);
 	if (end_of_memory < (1ul << 32))
 		end_of_memory = (1ul << 32);
@@ -1135,8 +1130,6 @@ static int ept_init_common(bool have_ad)
 		return VMX_TEST_EXIT;
 	data_page1 = alloc_page();
 	data_page2 = alloc_page();
-	memset(data_page1, 0x0, PAGE_SIZE);
-	memset(data_page2, 0x0, PAGE_SIZE);
 	*((u32 *)data_page1) = MAGIC_VAL_1;
 	*((u32 *)data_page2) = MAGIC_VAL_2;
 	install_ept(pml4, (unsigned long)data_page1, (unsigned long)data_page2,
@@ -1483,7 +1476,6 @@ static int pml_init(struct vmcs *vmcs)
 	}
 
 	pml_log = alloc_page();
-	memset(pml_log, 0x0, PAGE_SIZE);
 	vmcs_write(PMLADDR, (u64)pml_log);
 	vmcs_write(GUEST_PML_INDEX, PML_INDEX - 1);
 
@@ -1908,9 +1900,6 @@ static int msr_switch_init(struct vmcs *vmcs)
 	exit_msr_store = alloc_page();
 	exit_msr_load = alloc_page();
 	entry_msr_load = alloc_page();
-	memset(exit_msr_store, 0, PAGE_SIZE);
-	memset(exit_msr_load, 0, PAGE_SIZE);
-	memset(entry_msr_load, 0, PAGE_SIZE);
 	entry_msr_load[0].index = MSR_KERNEL_GS_BASE;
 	entry_msr_load[0].value = MSR_MAGIC;
 

From patchwork Fri May  3 10:32:06 2019
Content-Type: text/plain; charset="utf-8"
MIME-Version: 1.0
Content-Transfer-Encoding: 7bit
X-Patchwork-Submitter: Nadav Amit <nadav.amit@gmail.com>
X-Patchwork-Id: 10929119
Return-Path: <kvm-owner@kernel.org>
Received: from mail.wl.linuxfoundation.org (pdx-wl-mail.web.codeaurora.org
 [172.30.200.125])
	by pdx-korg-patchwork-2.web.codeaurora.org (Postfix) with ESMTP id A3AF413AD
	for <patchwork-kvm@patchwork.kernel.org>;
 Fri,  3 May 2019 17:54:41 +0000 (UTC)
Received: from mail.wl.linuxfoundation.org (localhost [127.0.0.1])
	by mail.wl.linuxfoundation.org (Postfix) with ESMTP id 95AA328725
	for <patchwork-kvm@patchwork.kernel.org>;
 Fri,  3 May 2019 17:54:41 +0000 (UTC)
Received: by mail.wl.linuxfoundation.org (Postfix, from userid 486)
	id 89EA228727; Fri,  3 May 2019 17:54:41 +0000 (UTC)
X-Spam-Checker-Version: SpamAssassin 3.3.1 (2010-03-16) on
	pdx-wl-mail.web.codeaurora.org
X-Spam-Level: 
X-Spam-Status: No, score=-6.5 required=2.0 tests=BAYES_00,DATE_IN_PAST_06_12,
	DKIM_SIGNED,DKIM_VALID,DKIM_VALID_AU,FREEMAIL_FROM,MAILING_LIST_MULTI,
	RCVD_IN_DNSWL_HI autolearn=ham version=3.3.1
Received: from vger.kernel.org (vger.kernel.org [209.132.180.67])
	by mail.wl.linuxfoundation.org (Postfix) with ESMTP id 449BC28725
	for <patchwork-kvm@patchwork.kernel.org>;
 Fri,  3 May 2019 17:54:41 +0000 (UTC)
Received: (majordomo@vger.kernel.org) by vger.kernel.org via listexpand
        id S1728348AbfECRyk (ORCPT
        <rfc822;patchwork-kvm@patchwork.kernel.org>);
        Fri, 3 May 2019 13:54:40 -0400
Received: from mail-pl1-f193.google.com ([209.85.214.193]:40876 "EHLO
        mail-pl1-f193.google.com" rhost-flags-OK-OK-OK-OK) by vger.kernel.org
        with ESMTP id S1728437AbfECRyk (ORCPT <rfc822;kvm@vger.kernel.org>);
        Fri, 3 May 2019 13:54:40 -0400
Received: by mail-pl1-f193.google.com with SMTP id b3so3026308plr.7
        for <kvm@vger.kernel.org>; Fri, 03 May 2019 10:54:39 -0700 (PDT)
DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/relaxed;
        d=gmail.com; s=20161025;
        h=from:to:cc:subject:date:message-id:in-reply-to:references;
        bh=2U4NO/rvxs4VJml+XR2FaZxBF2TPZGlSDMhWLkBAfMU=;
        b=gLdfdN0N+5h1kPNVs/8fHv8xo9tH4Pv8nx0VyIWpJoJ87IWOpcCyo1jhaUk4VuM+af
         tiTCB0gbExqSwoeJOOx6JHy5PTAzuShwmu1BiJ7UMqpaIG2RjXD85tKU0yCnRiLSq7+6
         bwZpRaA3J8y0c99EiDW4goEZsiMW5xj+FIr5vnF9h4w8XrQkW5eLnhaDhcNbJRc7ry0u
         4Pkv8IURWVOaa4KeADdLKXsBd2vKQqbzFvMM1vBHEJj2yWmj0Y1SsC3fGWSQLljQfE4I
         oT036PHWlDTAWvZ4xrTRIKKjWIBrQdiguoSjR4+rD4/shicR0S2eCLqaMgo/3LDAgZiI
         ZedQ==
X-Google-DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/relaxed;
        d=1e100.net; s=20161025;
        h=x-gm-message-state:from:to:cc:subject:date:message-id:in-reply-to
         :references;
        bh=2U4NO/rvxs4VJml+XR2FaZxBF2TPZGlSDMhWLkBAfMU=;
        b=aL0q+2d+o8uq5pZziq8kzterkpYYzKZul7FgZkl8p4b3XATrWOIPxrkZqVOfxyaBfL
         noBqg9xHuvHG4fiasBwq2keRbI4vCtB2wwDSC/rio5HjiVnQO7i4Vs4+JW5euwkEIFc7
         oVQ61Bj5j3k1FdWGi3z9kT9u+CfNt4g1Li73GKceQb2CynPE48FqS7LPojG6Z97B8bIE
         Kq/lokt4ikMSZ7DcZneA8+zF0aZycXk0ZULYEiP7gSqjHwKQpJNqFhL2RR2heismxqS5
         XJKW0aGoqqAgXAtNqdeJoCeTCft9/WhSKsu670A+b9pSia3ZXry2AsmPf9Q+ah1OzvP2
         DJLw==
X-Gm-Message-State: APjAAAXvUlRElo/4E3J1sRPJSk5tB7EAn1sAwcJ84goxPqFnIKangnXs
        SNQX2wfiPTEgUr9k80S+NiM=
X-Google-Smtp-Source: 
 APXvYqwzlaYi7JuAPz+mQeYinwReT1O2Lj+gy4/Gw9/q8dXTWEXkKkPE9obMstCRnp+/6n+c91GX3A==
X-Received: by 2002:a17:902:e283:: with SMTP id
 cf3mr12402732plb.160.1556906079231;
        Fri, 03 May 2019 10:54:39 -0700 (PDT)
Received: from sc2-haas01-esx0118.eng.vmware.com ([66.170.99.1])
        by smtp.gmail.com with ESMTPSA id
 p20sm3717311pgj.86.2019.05.03.10.54.37
        (version=TLS1_2 cipher=ECDHE-RSA-AES128-GCM-SHA256 bits=128/128);
        Fri, 03 May 2019 10:54:37 -0700 (PDT)
From: nadav.amit@gmail.com
To: Paolo Bonzini <pbonzini@redhat.com>
Cc: kvm@vger.kernel.org, Andrew Jones <drjones@redhat.com>,
        Nadav Amit <nadav.amit@gmail.com>
Subject: [kvm-unit-tests PATCH v2 3/4] lib: Remove redeundant page zeroing
Date: Fri,  3 May 2019 03:32:06 -0700
Message-Id: <20190503103207.9021-4-nadav.amit@gmail.com>
X-Mailer: git-send-email 2.17.1
In-Reply-To: <20190503103207.9021-1-nadav.amit@gmail.com>
References: <20190503103207.9021-1-nadav.amit@gmail.com>
Sender: kvm-owner@vger.kernel.org
Precedence: bulk
List-ID: <kvm.vger.kernel.org>
X-Mailing-List: kvm@vger.kernel.org
X-Virus-Scanned: ClamAV using ClamSMTP

From: Nadav Amit <nadav.amit@gmail.com>

Now that alloc_page() zeros the page, remove the redundant page zeroing.

Suggested-by: Andrew Jones <drjones@redhat.com>
Signed-off-by: Nadav Amit <nadav.amit@gmail.com>
Reviewed-by: Krish Sadhukhan <krish.sadhukhan@oracle.com>
---
 lib/virtio-mmio.c | 1 -
 1 file changed, 1 deletion(-)

diff --git a/lib/virtio-mmio.c b/lib/virtio-mmio.c
index 57fe78e..e5e8f66 100644
--- a/lib/virtio-mmio.c
+++ b/lib/virtio-mmio.c
@@ -56,7 +56,6 @@ static struct virtqueue *vm_setup_vq(struct virtio_device *vdev,
 	vq = calloc(1, sizeof(*vq));
 	assert(VIRTIO_MMIO_QUEUE_SIZE_MIN <= 2*PAGE_SIZE);
 	queue = alloc_pages(1);
-	memset(queue, 0, 2*PAGE_SIZE);
 	assert(vq && queue);
 
 	writel(index, vm_dev->base + VIRTIO_MMIO_QUEUE_SEL);

From patchwork Fri May  3 10:32:07 2019
Content-Type: text/plain; charset="utf-8"
MIME-Version: 1.0
Content-Transfer-Encoding: 7bit
X-Patchwork-Submitter: Nadav Amit <nadav.amit@gmail.com>
X-Patchwork-Id: 10929121
Return-Path: <kvm-owner@kernel.org>
Received: from mail.wl.linuxfoundation.org (pdx-wl-mail.web.codeaurora.org
 [172.30.200.125])
	by pdx-korg-patchwork-2.web.codeaurora.org (Postfix) with ESMTP id 337B613AD
	for <patchwork-kvm@patchwork.kernel.org>;
 Fri,  3 May 2019 17:54:44 +0000 (UTC)
Received: from mail.wl.linuxfoundation.org (localhost [127.0.0.1])
	by mail.wl.linuxfoundation.org (Postfix) with ESMTP id 251F728725
	for <patchwork-kvm@patchwork.kernel.org>;
 Fri,  3 May 2019 17:54:44 +0000 (UTC)
Received: by mail.wl.linuxfoundation.org (Postfix, from userid 486)
	id 199EF28727; Fri,  3 May 2019 17:54:44 +0000 (UTC)
X-Spam-Checker-Version: SpamAssassin 3.3.1 (2010-03-16) on
	pdx-wl-mail.web.codeaurora.org
X-Spam-Level: 
X-Spam-Status: No, score=-6.5 required=2.0 tests=BAYES_00,DATE_IN_PAST_06_12,
	DKIM_SIGNED,DKIM_VALID,DKIM_VALID_AU,FREEMAIL_FROM,MAILING_LIST_MULTI,
	RCVD_IN_DNSWL_HI autolearn=ham version=3.3.1
Received: from vger.kernel.org (vger.kernel.org [209.132.180.67])
	by mail.wl.linuxfoundation.org (Postfix) with ESMTP id BD52928725
	for <patchwork-kvm@patchwork.kernel.org>;
 Fri,  3 May 2019 17:54:43 +0000 (UTC)
Received: (majordomo@vger.kernel.org) by vger.kernel.org via listexpand
        id S1728437AbfECRym (ORCPT
        <rfc822;patchwork-kvm@patchwork.kernel.org>);
        Fri, 3 May 2019 13:54:42 -0400
Received: from mail-pg1-f194.google.com ([209.85.215.194]:37209 "EHLO
        mail-pg1-f194.google.com" rhost-flags-OK-OK-OK-OK) by vger.kernel.org
        with ESMTP id S1728453AbfECRyl (ORCPT <rfc822;kvm@vger.kernel.org>);
        Fri, 3 May 2019 13:54:41 -0400
Received: by mail-pg1-f194.google.com with SMTP id e6so3066661pgc.4
        for <kvm@vger.kernel.org>; Fri, 03 May 2019 10:54:41 -0700 (PDT)
DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/relaxed;
        d=gmail.com; s=20161025;
        h=from:to:cc:subject:date:message-id:in-reply-to:references;
        bh=EjWUD7AEqMZh2AEG40y523x+dTHNGBkinNX6q5avIyQ=;
        b=KzybIdD9Nledj8gbnchJ/42ZCvnTN3Gft7IFaN0iMfzEf8E1qEH8B6j3cy8GPmy55P
         97U85tr3XCpgeF/khjKBg0p9E30hGJ+YglWgfGvtauU2CO9oC/kiuUP3tus3AL+JRQkb
         numi057UzU7DMkhRe0wYUpLHfqmkcDTA2mpellLKopQsvyjYavttwogzSvP+XwuGMhW6
         k943n4kQVFEou3n1YRE2MpT5HlMcqFcB2qaCI5Wr2qYHPs1WPQvaGWckRyG6LwS/YBfZ
         BogQi4VMCq/VuZkXWLGQkdwAJO4yh7cAOrJaAHtAM+XLd6DukDho1BLEUvCktbCHZ5XI
         LNnw==
X-Google-DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/relaxed;
        d=1e100.net; s=20161025;
        h=x-gm-message-state:from:to:cc:subject:date:message-id:in-reply-to
         :references;
        bh=EjWUD7AEqMZh2AEG40y523x+dTHNGBkinNX6q5avIyQ=;
        b=eZsXdlRnVOsMbWJR28GE/rPgCdWo/O3vrqD4LlgBXn+aI03rrMIUd6jbj6BVCOFhKE
         nW7CEHhIh/2TIJ8EnR4EGaDDZvd5wIQn9sbQuJFpr+4PWCC30nb5ohKq485GXaHYPk6m
         cmfxEH8HfmJHAzHnFNBCtyjAwE5JbSvFWz4ut3Ani2RnbioawzsaJccS2b6MEnP4GzJk
         oE8WFTvCRPcTgU+CnJZaehjG0P8ejvzF4lFonpdEhFcMK4LLTCYG0ml+ONIqzs35EFHV
         WzZyloLvSxld9qOk+BYt2IeBTq7K1G0cr3N0U2ldqCOuf3r5DUheGiTC17uOXgEYqvgP
         ++oA==
X-Gm-Message-State: APjAAAVqTJTwyXgKxRZAzMuFGcF3fnazYwxD0fsEf5zrgleUFMTui7Z9
        4GICQmxSVY8cZv6N0Enuy4E=
X-Google-Smtp-Source: 
 APXvYqxGsRxJY1KpSS7F9Hh8g0V0pbqLwlMCtSuDVWrjZsVxnnFodlXl2wW3TFHePgLWExdA7R1kMQ==
X-Received: by 2002:aa7:92d1:: with SMTP id k17mr12819132pfa.91.1556906080695;
        Fri, 03 May 2019 10:54:40 -0700 (PDT)
Received: from sc2-haas01-esx0118.eng.vmware.com ([66.170.99.1])
        by smtp.gmail.com with ESMTPSA id
 p20sm3717311pgj.86.2019.05.03.10.54.39
        (version=TLS1_2 cipher=ECDHE-RSA-AES128-GCM-SHA256 bits=128/128);
        Fri, 03 May 2019 10:54:39 -0700 (PDT)
From: nadav.amit@gmail.com
To: Paolo Bonzini <pbonzini@redhat.com>
Cc: kvm@vger.kernel.org, Andrew Jones <drjones@redhat.com>,
        Nadav Amit <nadav.amit@gmail.com>
Subject: [kvm-unit-tests PATCH v2 4/4] arm: Remove redeundant page zeroing
Date: Fri,  3 May 2019 03:32:07 -0700
Message-Id: <20190503103207.9021-5-nadav.amit@gmail.com>
X-Mailer: git-send-email 2.17.1
In-Reply-To: <20190503103207.9021-1-nadav.amit@gmail.com>
References: <20190503103207.9021-1-nadav.amit@gmail.com>
Sender: kvm-owner@vger.kernel.org
Precedence: bulk
List-ID: <kvm.vger.kernel.org>
X-Mailing-List: kvm@vger.kernel.org
X-Virus-Scanned: ClamAV using ClamSMTP

From: Nadav Amit <nadav.amit@gmail.com>

Now that alloc_page() zeros the page, remove the redundant page zeroing.

Suggested-by: Andrew Jones <drjones@redhat.com>
Signed-off-by: Nadav Amit <nadav.amit@gmail.com>
---
 lib/arm/asm/pgtable.h   | 2 --
 lib/arm/mmu.c           | 1 -
 lib/arm64/asm/pgtable.h | 1 -
 3 files changed, 4 deletions(-)

diff --git a/lib/arm/asm/pgtable.h b/lib/arm/asm/pgtable.h
index b614bce..241dff6 100644
--- a/lib/arm/asm/pgtable.h
+++ b/lib/arm/asm/pgtable.h
@@ -53,7 +53,6 @@ static inline pmd_t *pmd_alloc_one(void)
 {
 	assert(PTRS_PER_PMD * sizeof(pmd_t) == PAGE_SIZE);
 	pmd_t *pmd = alloc_page();
-	memset(pmd, 0, PTRS_PER_PMD * sizeof(pmd_t));
 	return pmd;
 }
 static inline pmd_t *pmd_alloc(pgd_t *pgd, unsigned long addr)
@@ -80,7 +79,6 @@ static inline pte_t *pte_alloc_one(void)
 {
 	assert(PTRS_PER_PTE * sizeof(pte_t) == PAGE_SIZE);
 	pte_t *pte = alloc_page();
-	memset(pte, 0, PTRS_PER_PTE * sizeof(pte_t));
 	return pte;
 }
 static inline pte_t *pte_alloc(pmd_t *pmd, unsigned long addr)
diff --git a/lib/arm/mmu.c b/lib/arm/mmu.c
index 03f6622..3d38c83 100644
--- a/lib/arm/mmu.c
+++ b/lib/arm/mmu.c
@@ -166,7 +166,6 @@ void *setup_mmu(phys_addr_t phys_end)
 #endif
 
 	mmu_idmap = alloc_page();
-	memset(mmu_idmap, 0, PAGE_SIZE);
 
 	/*
 	 * mach-virt I/O regions:
diff --git a/lib/arm64/asm/pgtable.h b/lib/arm64/asm/pgtable.h
index 5860abe..ee0a2c8 100644
--- a/lib/arm64/asm/pgtable.h
+++ b/lib/arm64/asm/pgtable.h
@@ -61,7 +61,6 @@ static inline pte_t *pte_alloc_one(void)
 {
 	assert(PTRS_PER_PTE * sizeof(pte_t) == PAGE_SIZE);
 	pte_t *pte = alloc_page();
-	memset(pte, 0, PTRS_PER_PTE * sizeof(pte_t));
 	return pte;
 }
 static inline pte_t *pte_alloc(pmd_t *pmd, unsigned long addr)
