From patchwork Thu Oct 18 20:44:53 2018
Content-Type: text/plain; charset="utf-8"
MIME-Version: 1.0
Content-Transfer-Encoding: 7bit
X-Patchwork-Submitter: Christian Ehrhardt <lk@c--e.de>
X-Patchwork-Id: 10648183
Return-Path: <kvm-owner@kernel.org>
Received: from mail.wl.linuxfoundation.org (pdx-wl-mail.web.codeaurora.org
 [172.30.200.125])
	by pdx-korg-patchwork-2.web.codeaurora.org (Postfix) with ESMTP id 0744117D4
	for <patchwork-kvm@patchwork.kernel.org>;
 Thu, 18 Oct 2018 20:44:58 +0000 (UTC)
Received: from mail.wl.linuxfoundation.org (localhost [127.0.0.1])
	by mail.wl.linuxfoundation.org (Postfix) with ESMTP id E9F2328D98
	for <patchwork-kvm@patchwork.kernel.org>;
 Thu, 18 Oct 2018 20:44:57 +0000 (UTC)
Received: by mail.wl.linuxfoundation.org (Postfix, from userid 486)
	id D83AB28D8E; Thu, 18 Oct 2018 20:44:57 +0000 (UTC)
X-Spam-Checker-Version: SpamAssassin 3.3.1 (2010-03-16) on
	pdx-wl-mail.web.codeaurora.org
X-Spam-Level: 
X-Spam-Status: No, score=-7.9 required=2.0 tests=BAYES_00,MAILING_LIST_MULTI,
	RCVD_IN_DNSWL_HI autolearn=ham version=3.3.1
Received: from vger.kernel.org (vger.kernel.org [209.132.180.67])
	by mail.wl.linuxfoundation.org (Postfix) with ESMTP id 7978128D8E
	for <patchwork-kvm@patchwork.kernel.org>;
 Thu, 18 Oct 2018 20:44:57 +0000 (UTC)
Received: (majordomo@vger.kernel.org) by vger.kernel.org via listexpand
        id S1726562AbeJSErm (ORCPT
        <rfc822;patchwork-kvm@patchwork.kernel.org>);
        Fri, 19 Oct 2018 00:47:42 -0400
Received: from smtp.in-ulm.de ([217.10.8.16]:44448 "EHLO smtp.in-ulm.de"
        rhost-flags-OK-OK-OK-OK) by vger.kernel.org with ESMTP
        id S1725934AbeJSErm (ORCPT <rfc822;kvm@vger.kernel.org>);
        Fri, 19 Oct 2018 00:47:42 -0400
X-Virus-Scanned: Debian amavisd-new at smtp.in-ulm.de
DKIM-Filter: OpenDKIM Filter v2.9.1 smtp.in-ulm.de 0F41040B9C
Received: from mail.in-ulm.de (unknown [217.10.8.10])
        by smtp.in-ulm.de (Postfix) with SMTP id EF12A40B82
        for <kvm@vger.kernel.org>; Thu, 18 Oct 2018 22:45:50 +0200 (CEST)
DKIM-Filter: OpenDKIM Filter v2.9.1 smtp.in-ulm.de EF12A40B82
Received: (qmail 507497 invoked by uid 10524); 18 Oct 2018 20:44:53 -0000
Date: Thu, 18 Oct 2018 22:44:53 +0200
From: Christian Ehrhardt <lk@c--e.de>
To: kvm@vger.kernel.org
Cc: Wanpeng Li <kernellwp@gmail.com>
Subject: [PATCH v2] KVM: x86: Only clear %dr6 if really neccessary
Message-ID: <20181018204453.GP573482@lisa.in-ulm.de>
MIME-Version: 1.0
Content-Type: text/plain; charset=us-ascii
Content-Disposition: inline
User-Agent: Mutt/1.5.20 (2009-06-14)
Sender: kvm-owner@vger.kernel.org
Precedence: bulk
List-ID: <kvm.vger.kernel.org>
X-Mailing-List: kvm@vger.kernel.org
X-Virus-Scanned: ClamAV using ClamSMTP

Change efdab992: "KVM: x86: fix escape of guest dr6 to the host"
has negative effects if Linux runs as the L1 guest in a nested
VM setup:

Each call to kvm_arch_vcpu_put causes an additional L1->L0 exit due
to the %dr6 write even if neither L1 nor L2 uses debug registers.
As the current hardware value of %dr6 is already in vcpu->arch.dr6
we can avoid the debug register write if all non-reserved bits have
their default value.

Update the comment and reformat it while there.

Signed-off-by: Christian Ehrhardt <lk@c--e.de>
Reviewed-by: Jim Mattson <jmattson@google.com>
Reviewed-by: Wanpeng Li <wanpengli@tencent.com>
---
 arch/x86/kvm/x86.c | 10 ++++++----
 1 file changed, 6 insertions(+), 4 deletions(-)

diff --git a/arch/x86/kvm/x86.c b/arch/x86/kvm/x86.c
index ca717737347e..fcca60adc037 100644
--- a/arch/x86/kvm/x86.c
+++ b/arch/x86/kvm/x86.c
@@ -3185,11 +3185,13 @@ void kvm_arch_vcpu_put(struct kvm_vcpu *vcpu)
 	kvm_x86_ops->vcpu_put(vcpu);
 	vcpu->arch.last_host_tsc = rdtsc();
 	/*
-	 * If userspace has set any breakpoints or watchpoints, dr6 is restored
-	 * on every vmexit, but if not, we might have a stale dr6 from the
-	 * guest. do_debug expects dr6 to be cleared after it runs, do the same.
+	 * If userspace has set any breakpoints or watchpoints, dr6 is
+	 * restored on every vmexit, but if not, we might have a stale
+	 * dr6 from the guest. Thus reset the hardware value of dr6 to
+	 * its reset value. Avoid the debug register write if possible.
 	 */
-	set_debugreg(0, 6);
+	if (vcpu->arch.dr6 != DR6_INIT)
+		set_debugreg(DR6_INIT, 6);
 }
 
 static int kvm_vcpu_ioctl_get_lapic(struct kvm_vcpu *vcpu,
