From patchwork Fri Aug 10 21:42:20 2018
Content-Type: text/plain; charset="utf-8"
MIME-Version: 1.0
Content-Transfer-Encoding: 7bit
X-Patchwork-Submitter: Krish Sadhukhan <krish.sadhukhan@oracle.com>
X-Patchwork-Id: 10563197
Return-Path: <kvm-owner@kernel.org>
Received: from mail.wl.linuxfoundation.org (pdx-wl-mail.web.codeaurora.org
 [172.30.200.125])
	by pdx-korg-patchwork-2.web.codeaurora.org (Postfix) with ESMTP id 5CC1C90E3
	for <patchwork-kvm@patchwork.kernel.org>;
 Fri, 10 Aug 2018 22:05:25 +0000 (UTC)
Received: from mail.wl.linuxfoundation.org (localhost [127.0.0.1])
	by mail.wl.linuxfoundation.org (Postfix) with ESMTP id 4FA182B451
	for <patchwork-kvm@patchwork.kernel.org>;
 Fri, 10 Aug 2018 22:05:25 +0000 (UTC)
Received: by mail.wl.linuxfoundation.org (Postfix, from userid 486)
	id 43C0F2B488; Fri, 10 Aug 2018 22:05:25 +0000 (UTC)
X-Spam-Checker-Version: SpamAssassin 3.3.1 (2010-03-16) on
	pdx-wl-mail.web.codeaurora.org
X-Spam-Level: 
X-Spam-Status: No, score=-8.0 required=2.0 tests=BAYES_00,DKIM_SIGNED,
	DKIM_VALID,DKIM_VALID_AU,MAILING_LIST_MULTI,RCVD_IN_DNSWL_HI,
	UNPARSEABLE_RELAY autolearn=ham version=3.3.1
Received: from vger.kernel.org (vger.kernel.org [209.132.180.67])
	by mail.wl.linuxfoundation.org (Postfix) with ESMTP id D7DC72B482
	for <patchwork-kvm@patchwork.kernel.org>;
 Fri, 10 Aug 2018 22:05:24 +0000 (UTC)
Received: (majordomo@vger.kernel.org) by vger.kernel.org via listexpand
        id S1727038AbeHKAhG (ORCPT
        <rfc822;patchwork-kvm@patchwork.kernel.org>);
        Fri, 10 Aug 2018 20:37:06 -0400
Received: from aserp2130.oracle.com ([141.146.126.79]:52684 "EHLO
        aserp2130.oracle.com" rhost-flags-OK-OK-OK-OK) by vger.kernel.org
        with ESMTP id S1726774AbeHKAhG (ORCPT <rfc822;kvm@vger.kernel.org>);
        Fri, 10 Aug 2018 20:37:06 -0400
Received: from pps.filterd (aserp2130.oracle.com [127.0.0.1])
        by aserp2130.oracle.com (8.16.0.22/8.16.0.22) with SMTP id
 w7AM3uRL069041;
        Fri, 10 Aug 2018 22:05:19 GMT
DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/relaxed; d=oracle.com;
 h=from : to : cc :
 subject : date : message-id : in-reply-to : references; s=corp-2018-07-02;
 bh=yRTkx1E9OMMoq++Zn1vbQyCrZs+Y/C8SoytBxWxWKpY=;
 b=ZDG/oLu3YrEWW4MC7CXqnwvyEaQ9DA8DYmyjsb4Q0RJSliLzg5dQHtoAl4wHPpMiQ1+/
 c6J3G+FXiX7EnmdHiaPCB6rOd5E28SRgMjjt02zwOSbtQ8Y9Umh2WvL3/7DW0p69G7lf
 2qjholiFg/dx//RGHCgRkp403ZZb9AYi4VCYvJCRptMFWGY46TcYM7ljPjl+xubEE5ko
 5I4Ci/b0BDZjPntadFd8Qcr/mOmdqLEBi3+7QSeyPYejMqnr8njlzVqGLwebh77LeN03
 NfglogNOu9r4IqAyWShUggTmydM59rUISk+Q8UOazlslrxwt6Cu32Z8zwjomF54ScPUO rw==
Received: from aserv0022.oracle.com (aserv0022.oracle.com [141.146.126.234])
        by aserp2130.oracle.com with ESMTP id 2kn1ndh70k-1
        (version=TLSv1.2 cipher=ECDHE-RSA-AES256-GCM-SHA384 bits=256
 verify=OK);
        Fri, 10 Aug 2018 22:05:19 +0000
Received: from userv0121.oracle.com (userv0121.oracle.com [156.151.31.72])
        by aserv0022.oracle.com (8.14.4/8.14.4) with ESMTP id w7AM5I4a008968
        (version=TLSv1/SSLv3 cipher=DHE-RSA-AES256-GCM-SHA384 bits=256
 verify=OK);
        Fri, 10 Aug 2018 22:05:18 GMT
Received: from abhmp0005.oracle.com (abhmp0005.oracle.com [141.146.116.11])
        by userv0121.oracle.com (8.14.4/8.13.8) with ESMTP id w7AM5H0W006240;
        Fri, 10 Aug 2018 22:05:18 GMT
Received: from ban25x6uut29.us.oracle.com (/10.153.73.29)
        by default (Oracle Beehive Gateway v4.0)
        with ESMTP ; Fri, 10 Aug 2018 15:05:17 -0700
From: Krish Sadhukhan <krish.sadhukhan@oracle.com>
To: kvm@vger.kernel.org
Cc: pbonzini@redhat.com, rkrcmar@redhat.com, jmattson@google.com
Subject: [kvm-unit-test] nVMX x86: "external-interrupt exiting" must be set if
 "virtual-interrupt delivery" is set
Date: Fri, 10 Aug 2018 17:42:20 -0400
Message-Id: <20180810214220.25773-2-krish.sadhukhan@oracle.com>
X-Mailer: git-send-email 2.9.5
In-Reply-To: <20180810214220.25773-1-krish.sadhukhan@oracle.com>
References: <20180810214220.25773-1-krish.sadhukhan@oracle.com>
X-Proofpoint-Virus-Version: vendor=nai engine=5900 definitions=8981
 signatures=668707
X-Proofpoint-Spam-Details: rule=notspam policy=default score=0 suspectscore=1
 malwarescore=0
 phishscore=0 bulkscore=0 spamscore=0 mlxscore=0 mlxlogscore=670
 adultscore=0 classifier=spam adjust=0 reason=mlx scancount=1
 engine=8.0.1-1807170000 definitions=main-1808100231
Sender: kvm-owner@vger.kernel.org
Precedence: bulk
List-ID: <kvm.vger.kernel.org>
X-Mailing-List: kvm@vger.kernel.org
X-Virus-Scanned: ClamAV using ClamSMTP

According to section "Checks on VMX Controls" in Intel SDM vol 3C,
the following check needs to be enforced on vmentry of L2 guests:

    If the "virtual-interrupt delivery" VM-execution control is 1, the
    "external-interrupt exiting" VM-execution control must be 1.

This unit-test validates the above vmentry check.

Signed-off-by: Krish Sadhukhan <krish.sadhukhan@oracle.com>
Reviewed-by: Karl Heubaum <karl.heubaum@oracle.com>
Reviewed-by: Jim Mattson <jmattson@google.com>
---
 x86/vmx_tests.c | 46 ++++++++++++++++++++++++++++++++++++++++++++++
 1 file changed, 46 insertions(+)

diff --git a/x86/vmx_tests.c b/x86/vmx_tests.c
index e9fbc22..822e4bc 100644
--- a/x86/vmx_tests.c
+++ b/x86/vmx_tests.c
@@ -3690,11 +3690,57 @@ static void test_apic_virtual_ctls(void)
 	vmcs_write(CPU_EXEC_CTRL1, saved_secondary);
 }
 
+/*
+ * If the "virtual-interrupt delivery" VM-execution control is 1, the
+ * "external-interrupt exiting" VM-execution control must be 1.
+ * [Intel SDM]
+ */
+static void test_virtual_intr_ctls(void)
+{
+	u32 saved_primary = vmcs_read(CPU_EXEC_CTRL0);
+	u32 saved_secondary = vmcs_read(CPU_EXEC_CTRL1);
+	u32 saved_pin = vmcs_read(PIN_CONTROLS);
+	u32 primary = saved_primary;
+	u32 secondary = saved_secondary;
+	u32 pin = saved_pin;
+
+	if (!((ctrl_cpu_rev[1].clr & CPU_VINTD) &&
+	    (ctrl_pin_rev.clr & PIN_EXTINT)))
+		return;
+
+	vmcs_write(CPU_EXEC_CTRL0, primary | CPU_SECONDARY | CPU_TPR_SHADOW);
+	vmcs_write(CPU_EXEC_CTRL1, secondary & ~CPU_VINTD);
+	vmcs_write(PIN_CONTROLS, pin & ~PIN_EXTINT);
+	report_prefix_pushf("Virtualize interrupt-delivery disabled; external-interrupt exiting disabled");
+	test_vmx_controls(true, false);
+	report_prefix_pop();
+
+	vmcs_write(CPU_EXEC_CTRL1, secondary | CPU_VINTD);
+	report_prefix_pushf("Virtualize interrupt-delivery enabled; external-interrupt exiting disabled");
+	test_vmx_controls(false, false);
+	report_prefix_pop();
+
+	vmcs_write(PIN_CONTROLS, pin | PIN_EXTINT);
+	report_prefix_pushf("Virtualize interrupt-delivery enabled; external-interrupt exiting enabled");
+	test_vmx_controls(true, false);
+	report_prefix_pop();
+
+	vmcs_write(PIN_CONTROLS, pin & ~PIN_EXTINT);
+	report_prefix_pushf("Virtualize interrupt-delivery enabled; external-interrupt exiting disabled");
+	test_vmx_controls(false, false);
+	report_prefix_pop();
+
+	vmcs_write(CPU_EXEC_CTRL0, saved_primary);
+	vmcs_write(CPU_EXEC_CTRL1, saved_secondary);
+	vmcs_write(PIN_CONTROLS, saved_pin);
+}
+
 static void test_apic_ctls(void)
 {
 	test_apic_virt_addr();
 	test_apic_access_addr();
 	test_apic_virtual_ctls();
+	test_virtual_intr_ctls();
 }
 
 static void set_vtpr(unsigned vtpr)
