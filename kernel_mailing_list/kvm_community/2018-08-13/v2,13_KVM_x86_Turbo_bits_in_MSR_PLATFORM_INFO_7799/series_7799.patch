From patchwork Mon Aug 13 16:33:43 2018
Content-Type: text/plain; charset="utf-8"
MIME-Version: 1.0
Content-Transfer-Encoding: 7bit
X-Patchwork-Submitter: Drew Schmitt <dasch@google.com>
X-Patchwork-Id: 10564509
Return-Path: <kvm-owner@kernel.org>
Received: from mail.wl.linuxfoundation.org (pdx-wl-mail.web.codeaurora.org
 [172.30.200.125])
	by pdx-korg-patchwork-2.web.codeaurora.org (Postfix) with ESMTP id 8E9161390
	for <patchwork-kvm@patchwork.kernel.org>;
 Mon, 13 Aug 2018 16:33:51 +0000 (UTC)
Received: from mail.wl.linuxfoundation.org (localhost [127.0.0.1])
	by mail.wl.linuxfoundation.org (Postfix) with ESMTP id 7C8A7286C1
	for <patchwork-kvm@patchwork.kernel.org>;
 Mon, 13 Aug 2018 16:33:51 +0000 (UTC)
Received: by mail.wl.linuxfoundation.org (Postfix, from userid 486)
	id 6E56B287A4; Mon, 13 Aug 2018 16:33:51 +0000 (UTC)
X-Spam-Checker-Version: SpamAssassin 3.3.1 (2010-03-16) on
	pdx-wl-mail.web.codeaurora.org
X-Spam-Level: 
X-Spam-Status: No, score=-15.5 required=2.0 tests=BAYES_00,DKIM_SIGNED,
	DKIM_VALID,DKIM_VALID_AU,MAILING_LIST_MULTI,RCVD_IN_DNSWL_HI,
	USER_IN_DEF_DKIM_WL autolearn=ham version=3.3.1
Received: from vger.kernel.org (vger.kernel.org [209.132.180.67])
	by mail.wl.linuxfoundation.org (Postfix) with ESMTP id 1AA2D286C1
	for <patchwork-kvm@patchwork.kernel.org>;
 Mon, 13 Aug 2018 16:33:51 +0000 (UTC)
Received: (majordomo@vger.kernel.org) by vger.kernel.org via listexpand
        id S1729850AbeHMTQq (ORCPT
        <rfc822;patchwork-kvm@patchwork.kernel.org>);
        Mon, 13 Aug 2018 15:16:46 -0400
Received: from mail-io0-f201.google.com ([209.85.223.201]:34280 "EHLO
        mail-io0-f201.google.com" rhost-flags-OK-OK-OK-OK) by vger.kernel.org
        with ESMTP id S1728293AbeHMTQq (ORCPT <rfc822;kvm@vger.kernel.org>);
        Mon, 13 Aug 2018 15:16:46 -0400
Received: by mail-io0-f201.google.com with SMTP id f9-v6so14387577ioh.1
        for <kvm@vger.kernel.org>; Mon, 13 Aug 2018 09:33:49 -0700 (PDT)
DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/relaxed;
        d=google.com; s=20161025;
        h=date:message-id:mime-version:subject:from:to:cc;
        bh=Gw0SirbijTydD588wPeM3VdCjLNFIISUEEpK2cAnuQI=;
        b=da58qyD1ql2VKbGoAmw6h4wQcdF0F77nQtY8RJO/4qpZLzGdUGdwIrMD4KiCnLfZsG
         LsCFHlYW6Pqa6hvLe35xmqO5H1q/LkNtslCyjyEXzw12hh7tnmZdWj+eFE2gII1sP3ZR
         NbagcPnXMwaYHtUc5RBjQM+QH5te+q5GD6LKORNbrRZOojRHyDXYE8wncN7c2Rie1xwr
         SyKSLf26YiQYn84HZsSi+fTnIDc5mSJOGu5t49oOCRdiqvOTiSThIAD3/DhK7UXm0Hbd
         OTL32Yt4ZNrtxGzOMxJQE50CGTH/zCLYpJJatHC2xRd7VahfZaCyuNUZCI2/qo7uo4GY
         jItA==
X-Google-DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/relaxed;
        d=1e100.net; s=20161025;
        h=x-gm-message-state:date:message-id:mime-version:subject:from:to:cc;
        bh=Gw0SirbijTydD588wPeM3VdCjLNFIISUEEpK2cAnuQI=;
        b=Bugdv2Q1xh1uKsV0FTU8x0Ost+pI3T2Ndp5xja64lcwphkovgeEMyy8WK+dqcOzONn
         4Ie5TtsoAb4IZyclb8hEBXUd8vE6jN6q1G5wDstXbMw0K0RDVf0RLtsUAWfexBlIo8IQ
         h+/1Q44xQMGC6HoU/EEuZ+i/O1mghAHnaeSgZQztwDdZQPyX9YeiUIlzLDDByfYOIFmH
         2H6JmHGA5Jxt3uyxVA2i09tlCqBp+PUy8VnQrUl8XIgewiJd0C5fGc5PXMADfhhWgalT
         GzDolMAaiHtdCVryKa7fbSex083zx9ODZN0lmYi8QwCbm06Xii6uzDnD5n/jdSfadLJd
         tsCg==
X-Gm-Message-State: AOUpUlG+1Jx/Ohgo4fNnwuN0y3nyWZtP//5ZfExvylYLMJrcc7x5RA8u
        BIMPT7IUJ17q6fsQztVKU8SENdMeOYwguAcyS+3gW6yMN6U1QirID7oa7FzZBlljick5Q/hFAQH
        nSxak1fLuxlcIc/txYg6Dk7sPUmChqoBr8CBSvT/IKdSbLTvbBW5pPFE=
X-Google-Smtp-Source: 
 AA+uWPx5T4RNOwll4ZUuJ1F/l5ImQ/THoYy+OPueZxU68INTj+Qjf06+AdZMPy00iug7QOlu1PklAmTUGw==
X-Received: by 2002:a24:47ca:: with SMTP id
 t193-v6mr6672733itb.24.1534178028913;
 Mon, 13 Aug 2018 09:33:48 -0700 (PDT)
Date: Mon, 13 Aug 2018 09:33:43 -0700
Message-Id: <20180813163345.194666-1-dasch@google.com>
Mime-Version: 1.0
X-Mailer: git-send-email 2.18.0.597.ga71716f1ad-goog
Subject: [PATCH v2 1/3] KVM: x86: Turbo bits in MSR_PLATFORM_INFO
From: Drew Schmitt <dasch@google.com>
To: kvm@vger.kernel.org
Cc: konrad.wilk@oracle.com, jmattson@google.com,
        Drew Schmitt <dasch@google.com>
Content-Type: text/plain; charset="UTF-8"
Sender: kvm-owner@vger.kernel.org
Precedence: bulk
List-ID: <kvm.vger.kernel.org>
X-Mailing-List: kvm@vger.kernel.org
X-Virus-Scanned: ClamAV using ClamSMTP

Allow userspace to set turbo bits in MSR_PLATFORM_INFO. Previously, only
the CPUID faulting bit was settable. But now any bit in
MSR_PLATFORM_INFO would be settable. This can be used, for example, to
convey frequency information about the platform on which the guest is
running.

Signed-off-by: Drew Schmitt <dasch@google.com>
---
v1 -> v2:
- added more background to commit message
---
 arch/x86/kvm/x86.c | 1 -
 1 file changed, 1 deletion(-)

diff --git a/arch/x86/kvm/x86.c b/arch/x86/kvm/x86.c
index 0046aa70205aa..0278cde1893ca 100644
--- a/arch/x86/kvm/x86.c
+++ b/arch/x86/kvm/x86.c
@@ -2503,7 +2503,6 @@ int kvm_set_msr_common(struct kvm_vcpu *vcpu, struct msr_data *msr_info)
 		break;
 	case MSR_PLATFORM_INFO:
 		if (!msr_info->host_initiated ||
-		    data & ~MSR_PLATFORM_INFO_CPUID_FAULT ||
 		    (!(data & MSR_PLATFORM_INFO_CPUID_FAULT) &&
 		     cpuid_fault_enabled(vcpu)))
 			return 1;

From patchwork Mon Aug 13 16:33:44 2018
Content-Type: text/plain; charset="utf-8"
MIME-Version: 1.0
Content-Transfer-Encoding: 7bit
X-Patchwork-Submitter: Drew Schmitt <dasch@google.com>
X-Patchwork-Id: 10564511
Return-Path: <kvm-owner@kernel.org>
Received: from mail.wl.linuxfoundation.org (pdx-wl-mail.web.codeaurora.org
 [172.30.200.125])
	by pdx-korg-patchwork-2.web.codeaurora.org (Postfix) with ESMTP id 850E51390
	for <patchwork-kvm@patchwork.kernel.org>;
 Mon, 13 Aug 2018 16:34:01 +0000 (UTC)
Received: from mail.wl.linuxfoundation.org (localhost [127.0.0.1])
	by mail.wl.linuxfoundation.org (Postfix) with ESMTP id 7612129592
	for <patchwork-kvm@patchwork.kernel.org>;
 Mon, 13 Aug 2018 16:34:01 +0000 (UTC)
Received: by mail.wl.linuxfoundation.org (Postfix, from userid 486)
	id 6A6A829597; Mon, 13 Aug 2018 16:34:01 +0000 (UTC)
X-Spam-Checker-Version: SpamAssassin 3.3.1 (2010-03-16) on
	pdx-wl-mail.web.codeaurora.org
X-Spam-Level: 
X-Spam-Status: No, score=-15.5 required=2.0 tests=BAYES_00,DKIM_SIGNED,
	DKIM_VALID,DKIM_VALID_AU,MAILING_LIST_MULTI,RCVD_IN_DNSWL_HI,
	USER_IN_DEF_DKIM_WL autolearn=ham version=3.3.1
Received: from vger.kernel.org (vger.kernel.org [209.132.180.67])
	by mail.wl.linuxfoundation.org (Postfix) with ESMTP id 04BF5287A4
	for <patchwork-kvm@patchwork.kernel.org>;
 Mon, 13 Aug 2018 16:34:00 +0000 (UTC)
Received: (majordomo@vger.kernel.org) by vger.kernel.org via listexpand
        id S1730101AbeHMTQz (ORCPT
        <rfc822;patchwork-kvm@patchwork.kernel.org>);
        Mon, 13 Aug 2018 15:16:55 -0400
Received: from mail-it0-f74.google.com ([209.85.214.74]:51565 "EHLO
        mail-it0-f74.google.com" rhost-flags-OK-OK-OK-OK) by vger.kernel.org
        with ESMTP id S1730092AbeHMTQz (ORCPT <rfc822;kvm@vger.kernel.org>);
        Mon, 13 Aug 2018 15:16:55 -0400
Received: by mail-it0-f74.google.com with SMTP id q5-v6so10080775ith.1
        for <kvm@vger.kernel.org>; Mon, 13 Aug 2018 09:33:58 -0700 (PDT)
DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/relaxed;
        d=google.com; s=20161025;
        h=date:in-reply-to:message-id:mime-version:references:subject:from:to
         :cc;
        bh=qpFtx0CGp8gvbfqAtr9bD2I5AFW/3/AUJSRuiTcpVlA=;
        b=VprMvHcntrSR0oxmvibsVfCMevagvGlCWlj8LjE66KNoKhrV7DQ1gsAqbWnmNVW3O/
         Lk6mjeEbyswnQxp/D++KrCb2P1WiKbBFn9NTISRuNPN8Fu/LC032zmXWghSEoKII6XYb
         HYvImlIixI3C0WWAredaGMimra9DOwjuIJCU0mQnqnTTCZ7W5RBFbOqZwUMn0uSb6/c7
         brzNFtu/NAYmLCy0AzseSziVNyTJGiLe2wy65lHDQ/kpNe1nM9vDCl52SahMXQ1+GeRn
         TkYBjU0nI5nd/irdB9uowX2NWIUbHuu54BlCIAF+BKBhTmF/CTYSRmJIw6bE+vX1+st+
         0O3w==
X-Google-DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/relaxed;
        d=1e100.net; s=20161025;
        h=x-gm-message-state:date:in-reply-to:message-id:mime-version
         :references:subject:from:to:cc;
        bh=qpFtx0CGp8gvbfqAtr9bD2I5AFW/3/AUJSRuiTcpVlA=;
        b=UXXlBjtBtzN+s6x0PqIOLksQ/mK6y7EIxGNY2UFPPdVvhGIMgIHIMn+ItzvK+oHfBS
         GzNAYJb83tyggyRwQg755imlNf6lbNT+yj8hUBBHgQWcvh3XWYpAcNGGvVFZ9QSNp89r
         UqUuie0QdJm0w/pcP0jptF3ZDgAMGiAXFX69IvgtSCRC0ABmwoG65cB5j8MEpzj0V7L6
         Z3FL/JYLgVreVDc+RUOHQGIvDFWUaQqDoPm7j/FWhaXSngy/pPy83NteVuE7V6cJibci
         EfKPXJDf95/MaVHHZhKCTkpdYY4k41sDfWXFBr12JAtMlW87Om5T8Gep30BxgfVyIiVX
         eM/g==
X-Gm-Message-State: AOUpUlGpzzBw6iB1d54wOzNKTsTUJvwD218n/gNWvVDTMbg9TVrOr5rB
        kYqiqkFuQpBm8TeUwKXjJHMQ9/lHiLr9W8YVHADNp/IA5ppEATAYlN9Ysp4qEasHtPOZLinwd8r
        VAvjiJqczGfgN5+sfQje5j9bnzJQAocYVf8GFnrT9K/y+GNz22GCcRAE=
X-Google-Smtp-Source: 
 AA+uWPy/hfz/SbI49BdVXPTlCUcAr69AoUYBEwBrQMXsRMljqgJUeeXG+prSzjMdQBGFZ0Be0EULEegTMA==
X-Received: by 2002:a6b:39d6:: with SMTP id
 g205-v6mr8162634ioa.10.1534178038114;
 Mon, 13 Aug 2018 09:33:58 -0700 (PDT)
Date: Mon, 13 Aug 2018 09:33:44 -0700
In-Reply-To: <20180813163345.194666-1-dasch@google.com>
Message-Id: <20180813163345.194666-2-dasch@google.com>
Mime-Version: 1.0
References: <20180813163345.194666-1-dasch@google.com>
X-Mailer: git-send-email 2.18.0.597.ga71716f1ad-goog
Subject: [PATCH v2 2/3] KVM: x86: Control guest reads of MSR_PLATFORM_INFO
From: Drew Schmitt <dasch@google.com>
To: kvm@vger.kernel.org
Cc: konrad.wilk@oracle.com, jmattson@google.com,
        Drew Schmitt <dasch@google.com>
Content-Type: text/plain; charset="UTF-8"
Sender: kvm-owner@vger.kernel.org
Precedence: bulk
List-ID: <kvm.vger.kernel.org>
X-Mailing-List: kvm@vger.kernel.org
X-Virus-Scanned: ClamAV using ClamSMTP

Add KVM_CAP_MSR_PLATFORM_INFO so that userspace can disable guest access
to reads of MSR_PLATFORM_INFO.

Signed-off-by: Drew Schmitt <dasch@google.com>
---
v1 -> v2:
- added KVM_CAP_MSR_PLATFORM_INFO to API docs
---
 Documentation/virtual/kvm/api.txt |  9 +++++++++
 arch/x86/include/asm/kvm_host.h   |  2 ++
 arch/x86/kvm/x86.c                | 10 ++++++++++
 include/uapi/linux/kvm.h          |  1 +
 4 files changed, 22 insertions(+)

diff --git a/Documentation/virtual/kvm/api.txt b/Documentation/virtual/kvm/api.txt
index d10944e619d3d..29b54ed0978c2 100644
--- a/Documentation/virtual/kvm/api.txt
+++ b/Documentation/virtual/kvm/api.txt
@@ -4391,6 +4391,15 @@ all such vmexits.
 
 Do not enable KVM_FEATURE_PV_UNHALT if you disable HLT exits.
 
+7.14 KVM_CAP_MSR_PLATFORM_INFO
+
+Architectures: x86
+Parameters: args[0] whether feature should be enabled or not
+
+With this capability, a guest may read the MSR_PLATFORM_INFO MSR. Otherwise,
+a #GP would be raised when the guest tries to access. Currently, this
+capability does not enable write permissions of this MSR for the guest.
+
 8. Other capabilities.
 ----------------------
 
diff --git a/arch/x86/include/asm/kvm_host.h b/arch/x86/include/asm/kvm_host.h
index c13cd28d9d1be..c0497c7a4869f 100644
--- a/arch/x86/include/asm/kvm_host.h
+++ b/arch/x86/include/asm/kvm_host.h
@@ -853,6 +853,8 @@ struct kvm_arch {
 
 	bool x2apic_format;
 	bool x2apic_broadcast_quirk_disabled;
+
+	bool guest_can_read_msr_platform_info;
 };
 
 struct kvm_vm_stat {
diff --git a/arch/x86/kvm/x86.c b/arch/x86/kvm/x86.c
index 0278cde1893ca..b27d88fc6eb8f 100644
--- a/arch/x86/kvm/x86.c
+++ b/arch/x86/kvm/x86.c
@@ -2743,6 +2743,9 @@ int kvm_get_msr_common(struct kvm_vcpu *vcpu, struct msr_data *msr_info)
 		msr_info->data = vcpu->arch.osvw.status;
 		break;
 	case MSR_PLATFORM_INFO:
+		if (!msr_info->host_initiated &&
+		    !vcpu->kvm->arch.guest_can_read_msr_platform_info)
+			return 1;
 		msr_info->data = vcpu->arch.msr_platform_info;
 		break;
 	case MSR_MISC_FEATURES_ENABLES:
@@ -2890,6 +2893,7 @@ int kvm_vm_ioctl_check_extension(struct kvm *kvm, long ext)
  	case KVM_CAP_SPLIT_IRQCHIP:
 	case KVM_CAP_IMMEDIATE_EXIT:
 	case KVM_CAP_GET_MSR_FEATURES:
+	case KVM_CAP_MSR_PLATFORM_INFO:
 		r = 1;
 		break;
 	case KVM_CAP_SYNC_REGS:
@@ -4259,6 +4263,10 @@ static int kvm_vm_ioctl_enable_cap(struct kvm *kvm,
 			kvm->arch.pause_in_guest = true;
 		r = 0;
 		break;
+	case KVM_CAP_MSR_PLATFORM_INFO:
+		kvm->arch.guest_can_read_msr_platform_info = cap->args[0];
+		r = 0;
+		break;
 	default:
 		r = -EINVAL;
 		break;
@@ -8724,6 +8732,8 @@ int kvm_arch_init_vm(struct kvm *kvm, unsigned long type)
 	kvm->arch.kvmclock_offset = -ktime_get_boot_ns();
 	pvclock_update_vm_gtod_copy(kvm);
 
+	kvm->arch.guest_can_read_msr_platform_info = true;
+
 	INIT_DELAYED_WORK(&kvm->arch.kvmclock_update_work, kvmclock_update_fn);
 	INIT_DELAYED_WORK(&kvm->arch.kvmclock_sync_work, kvmclock_sync_fn);
 
diff --git a/include/uapi/linux/kvm.h b/include/uapi/linux/kvm.h
index b6270a3b38e9f..f3367041b609b 100644
--- a/include/uapi/linux/kvm.h
+++ b/include/uapi/linux/kvm.h
@@ -949,6 +949,7 @@ struct kvm_ppc_resize_hpt {
 #define KVM_CAP_GET_MSR_FEATURES 153
 #define KVM_CAP_HYPERV_EVENTFD 154
 #define KVM_CAP_HYPERV_TLBFLUSH 155
+#define KVM_CAP_MSR_PLATFORM_INFO 156
 
 #ifdef KVM_CAP_IRQ_ROUTING
 

From patchwork Mon Aug 13 16:33:45 2018
Content-Type: text/plain; charset="utf-8"
MIME-Version: 1.0
Content-Transfer-Encoding: 7bit
X-Patchwork-Submitter: Drew Schmitt <dasch@google.com>
X-Patchwork-Id: 10564513
Return-Path: <kvm-owner@kernel.org>
Received: from mail.wl.linuxfoundation.org (pdx-wl-mail.web.codeaurora.org
 [172.30.200.125])
	by pdx-korg-patchwork-2.web.codeaurora.org (Postfix) with ESMTP id 280EC1390
	for <patchwork-kvm@patchwork.kernel.org>;
 Mon, 13 Aug 2018 16:34:06 +0000 (UTC)
Received: from mail.wl.linuxfoundation.org (localhost [127.0.0.1])
	by mail.wl.linuxfoundation.org (Postfix) with ESMTP id 1779D2956E
	for <patchwork-kvm@patchwork.kernel.org>;
 Mon, 13 Aug 2018 16:34:06 +0000 (UTC)
Received: by mail.wl.linuxfoundation.org (Postfix, from userid 486)
	id 0B8EC29577; Mon, 13 Aug 2018 16:34:06 +0000 (UTC)
X-Spam-Checker-Version: SpamAssassin 3.3.1 (2010-03-16) on
	pdx-wl-mail.web.codeaurora.org
X-Spam-Level: 
X-Spam-Status: No, score=-15.5 required=2.0 tests=BAYES_00,DKIM_SIGNED,
	DKIM_VALID,DKIM_VALID_AU,MAILING_LIST_MULTI,RCVD_IN_DNSWL_HI,
	USER_IN_DEF_DKIM_WL autolearn=ham version=3.3.1
Received: from vger.kernel.org (vger.kernel.org [209.132.180.67])
	by mail.wl.linuxfoundation.org (Postfix) with ESMTP id 535DB2956E
	for <patchwork-kvm@patchwork.kernel.org>;
 Mon, 13 Aug 2018 16:34:05 +0000 (UTC)
Received: (majordomo@vger.kernel.org) by vger.kernel.org via listexpand
        id S1730109AbeHMTRB (ORCPT
        <rfc822;patchwork-kvm@patchwork.kernel.org>);
        Mon, 13 Aug 2018 15:17:01 -0400
Received: from mail-qk0-f201.google.com ([209.85.220.201]:41911 "EHLO
        mail-qk0-f201.google.com" rhost-flags-OK-OK-OK-OK) by vger.kernel.org
        with ESMTP id S1730104AbeHMTRB (ORCPT <rfc822;kvm@vger.kernel.org>);
        Mon, 13 Aug 2018 15:17:01 -0400
Received: by mail-qk0-f201.google.com with SMTP id w8-v6so17292972qkf.8
        for <kvm@vger.kernel.org>; Mon, 13 Aug 2018 09:34:03 -0700 (PDT)
DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/relaxed;
        d=google.com; s=20161025;
        h=date:in-reply-to:message-id:mime-version:references:subject:from:to
         :cc;
        bh=GOUflwlDaCR6e3gJ8PsWurMPIvWkOJdhGQA2Efjb2m0=;
        b=L45YSli12+5Z7JSWHLPMdh+jk9EB6cJY0xVyNY3mwD03S+qDEWJ53rBMCETuiSdNjQ
         f3m1uFCIHJKuJkVgVjx/lSOmHBR0x/tPiXZiKO6S9wLaIWHk0rfVpaWM19xJWbggjudi
         2qlEM3r35fJ/ZByqovx1tDoaMoWIlGeB55z6s8cq5KeJ9tFqMb78K4c6Cowz3c5ww4Hu
         md71zY0Yp5YcNGeTQl/FcXDhQpVNPAdYsc2xWObwM5CPEd+KvsNgkgvSpaJCHTU4gWlQ
         DFH3ZlY7k4Wepo+I4DZHPUulcYJUZA8j4XyNeGXMXQNNooRugMJ74wb3ZKL196WEJWFL
         ZB2w==
X-Google-DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/relaxed;
        d=1e100.net; s=20161025;
        h=x-gm-message-state:date:in-reply-to:message-id:mime-version
         :references:subject:from:to:cc;
        bh=GOUflwlDaCR6e3gJ8PsWurMPIvWkOJdhGQA2Efjb2m0=;
        b=RrhEaDb57sFUPpoP2nwytm/ENykM35/wLdboSiT3t2kWLAnqVRre8M+dtjcO/cn1JP
         aIJo7sEZRCBzzOGZJeqZRsZ0ocy59NuiF56rJwKX7AnHsRFHqVO40vs+XvSvpA5V8nvi
         wjdTBsHqOo49oJViBoI8fcQM4tSDVzP1kViq1KQqFxRmUF1tBQ/R4hlkWqWW9xD1eVuC
         uRGVrhWIuVQ8KwrDtKRLIvvi1viBlt2F3SpnFx6/I4F49faRxDHVlv98U2kbEFM4xCiW
         DmMfOx9wz+2dZo52exyAFqVTVNd2EQAm47VDCw1UN8yGndfbsHfG9e2AMuXTRwnabV7q
         p5Cg==
X-Gm-Message-State: AOUpUlEKWpXnHvK0ud471I7dzGAQlTLxlV0dMkZT2ip0jvMijVB66+cK
        Z1nqFcHM2D0z6BFLsqnrvkk8NQAlguBoMmYTKZ0ky64LZlv84H9MG9/dp6v36UGWtqx8SDuR/4J
        bKdWc5kVwhMedWXhU23VxjgIoRfhAftNM2XDHiEPhu0ML0AWa67JX9ck=
X-Google-Smtp-Source: 
 AA+uWPzzRI12uHEnC/TsowumgbtMQvBmN2nvzxd+gptQUWsVtGFxa+HfoXskcGi6Iau7LzLfDYnzRHGs4Q==
X-Received: by 2002:a37:c20d:: with SMTP id
 i13-v6mr11067797qkm.38.1534178042834;
 Mon, 13 Aug 2018 09:34:02 -0700 (PDT)
Date: Mon, 13 Aug 2018 09:33:45 -0700
In-Reply-To: <20180813163345.194666-1-dasch@google.com>
Message-Id: <20180813163345.194666-3-dasch@google.com>
Mime-Version: 1.0
References: <20180813163345.194666-1-dasch@google.com>
X-Mailer: git-send-email 2.18.0.597.ga71716f1ad-goog
Subject: [PATCH v2 3/3] kvm: selftests: Add platform_info_test
From: Drew Schmitt <dasch@google.com>
To: kvm@vger.kernel.org
Cc: konrad.wilk@oracle.com, jmattson@google.com,
        Drew Schmitt <dasch@google.com>
Content-Type: text/plain; charset="UTF-8"
Sender: kvm-owner@vger.kernel.org
Precedence: bulk
List-ID: <kvm.vger.kernel.org>
X-Mailing-List: kvm@vger.kernel.org
X-Virus-Scanned: ClamAV using ClamSMTP

Test guest access to MSR_PLATFORM_INFO when the capability is enabled
or disabled.

Signed-off-by: Drew Schmitt <dasch@google.com>
---
 tools/testing/selftests/kvm/.gitignore        |   1 +
 tools/testing/selftests/kvm/Makefile          |   3 +-
 .../testing/selftests/kvm/include/kvm_util.h  |   4 +
 tools/testing/selftests/kvm/lib/kvm_util.c    |  89 +++++++++++++
 .../selftests/kvm/platform_info_test.c        | 121 ++++++++++++++++++
 5 files changed, 217 insertions(+), 1 deletion(-)
 create mode 100644 tools/testing/selftests/kvm/platform_info_test.c

diff --git a/tools/testing/selftests/kvm/.gitignore b/tools/testing/selftests/kvm/.gitignore
index 63fc1ab9248fa..8078891ded84a 100644
--- a/tools/testing/selftests/kvm/.gitignore
+++ b/tools/testing/selftests/kvm/.gitignore
@@ -1,3 +1,4 @@
+platform_info_test
 set_sregs_test
 sync_regs_test
 vmx_tsc_adjust_test
diff --git a/tools/testing/selftests/kvm/Makefile b/tools/testing/selftests/kvm/Makefile
index d9d00319b07cd..85e3eb4108c28 100644
--- a/tools/testing/selftests/kvm/Makefile
+++ b/tools/testing/selftests/kvm/Makefile
@@ -6,7 +6,8 @@ UNAME_M := $(shell uname -m)
 LIBKVM = lib/assert.c lib/elf.c lib/io.c lib/kvm_util.c lib/sparsebit.c
 LIBKVM_x86_64 = lib/x86.c lib/vmx.c
 
-TEST_GEN_PROGS_x86_64 = set_sregs_test
+TEST_GEN_PROGS_x86_64 = platform_info_test
+TEST_GEN_PROGS_x86_64 += set_sregs_test
 TEST_GEN_PROGS_x86_64 += sync_regs_test
 TEST_GEN_PROGS_x86_64 += vmx_tsc_adjust_test
 
diff --git a/tools/testing/selftests/kvm/include/kvm_util.h b/tools/testing/selftests/kvm/include/kvm_util.h
index 637b7017b6ee5..a7e34eaccadba 100644
--- a/tools/testing/selftests/kvm/include/kvm_util.h
+++ b/tools/testing/selftests/kvm/include/kvm_util.h
@@ -50,6 +50,7 @@ enum vm_mem_backing_src_type {
 };
 
 int kvm_check_cap(long cap);
+int vm_enable_cap(struct kvm_vm *vm, struct kvm_enable_cap *cap);
 
 struct kvm_vm *vm_create(enum vm_guest_mode mode, uint64_t phy_pages, int perm);
 void kvm_vm_free(struct kvm_vm *vmp);
@@ -103,6 +104,9 @@ void vcpu_events_get(struct kvm_vm *vm, uint32_t vcpuid,
 			  struct kvm_vcpu_events *events);
 void vcpu_events_set(struct kvm_vm *vm, uint32_t vcpuid,
 			  struct kvm_vcpu_events *events);
+uint64_t vcpu_get_msr(struct kvm_vm *vm, uint32_t vcpuid, uint64_t msr_index);
+void vcpu_set_msr(struct kvm_vm *vm, uint32_t vcpuid, uint64_t msr_index,
+	uint64_t msr_value);
 
 const char *exit_reason_str(unsigned int exit_reason);
 
diff --git a/tools/testing/selftests/kvm/lib/kvm_util.c b/tools/testing/selftests/kvm/lib/kvm_util.c
index 37e2a787d2fcc..2d13b26d32215 100644
--- a/tools/testing/selftests/kvm/lib/kvm_util.c
+++ b/tools/testing/selftests/kvm/lib/kvm_util.c
@@ -62,6 +62,29 @@ int kvm_check_cap(long cap)
 	return ret;
 }
 
+/* VM Enable Capability
+ *
+ * Input Args:
+ *   vm - Virtual Machine
+ *   cap - Capability
+ *
+ * Output Args: None
+ *
+ * Return: On success, 0. On failure a TEST_ASSERT failure is produced.
+ *
+ * Enables a capability (KVM_CAP_*) on the VM.
+ */
+int vm_enable_cap(struct kvm_vm *vm, struct kvm_enable_cap *cap)
+{
+	int ret;
+
+	ret = ioctl(vm->fd, KVM_ENABLE_CAP, cap);
+	TEST_ASSERT(ret == 0, "KVM_ENABLE_CAP IOCTL failed,\n"
+		"  rc: %i errno: %i", ret, errno);
+
+	return ret;
+}
+
 /* VM Create
  *
  * Input Args:
@@ -1124,6 +1147,72 @@ void vcpu_events_set(struct kvm_vm *vm, uint32_t vcpuid,
 		ret, errno);
 }
 
+/* VCPU Get MSR
+ *
+ * Input Args:
+ *   vm - Virtual Machine
+ *   vcpuid - VCPU ID
+ *   msr_index - Index of MSR
+ *
+ * Output Args: None
+ *
+ * Return: On success, value of the MSR. On failure a TEST_ASSERT is produced.
+ *
+ * Get value of MSR for VCPU.
+ */
+uint64_t vcpu_get_msr(struct kvm_vm *vm, uint32_t vcpuid, uint64_t msr_index)
+{
+	struct vcpu *vcpu = vcpu_find(vm, vcpuid);
+	struct {
+		struct kvm_msrs header;
+		struct kvm_msr_entry entry;
+	} buffer = {};
+	int r;
+
+	TEST_ASSERT(vcpu != NULL, "vcpu not found, vcpuid: %u", vcpuid);
+	buffer.header.nmsrs = 1;
+	buffer.entry.index = msr_index;
+	r = ioctl(vcpu->fd, KVM_GET_MSRS, &buffer.header);
+	TEST_ASSERT(r == 1, "KVM_GET_MSRS IOCTL failed,\n"
+		"  rc: %i errno: %i", r, errno);
+
+	return buffer.entry.data;
+}
+
+/* VCPU Set MSR
+ *
+ * Input Args:
+ *   vm - Virtual Machine
+ *   vcpuid - VCPU ID
+ *   msr_index - Index of MSR
+ *   msr_value - New value of MSR
+ *
+ * Output Args: None
+ *
+ * Return: On success, nothing. On failure a TEST_ASSERT is produced.
+ *
+ * Set value of MSR for VCPU.
+ */
+void vcpu_set_msr(struct kvm_vm *vm, uint32_t vcpuid, uint64_t msr_index,
+	uint64_t msr_value)
+{
+	struct vcpu *vcpu = vcpu_find(vm, vcpuid);
+	struct {
+		struct kvm_msrs header;
+		struct kvm_msr_entry entry;
+	} buffer = {};
+	int r;
+
+	TEST_ASSERT(vcpu != NULL, "vcpu not found, vcpuid: %u", vcpuid);
+	memset(&buffer, 0, sizeof(buffer));
+	buffer.header.nmsrs = 1;
+	buffer.entry.index = msr_index;
+	buffer.entry.data = msr_value;
+	r = ioctl(vcpu->fd, KVM_SET_MSRS, &buffer.header);
+	TEST_ASSERT(r == 1, "KVM_SET_MSRS IOCTL failed,\n"
+		"  rc: %i errno: %i", r, errno);
+}
+
 /* VM VCPU Args Set
  *
  * Input Args:
diff --git a/tools/testing/selftests/kvm/platform_info_test.c b/tools/testing/selftests/kvm/platform_info_test.c
new file mode 100644
index 0000000000000..3c14959a09210
--- /dev/null
+++ b/tools/testing/selftests/kvm/platform_info_test.c
@@ -0,0 +1,121 @@
+// SPDX-License-Identifier: GPL-2.0
+/*
+ * Test for x86 KVM_CAP_MSR_PLATFORM_INFO
+ *
+ * Copyright (C) 2018, Google LLC.
+ *
+ * This work is licensed under the terms of the GNU GPL, version 2.
+ *
+ * Verifies expected behavior of controlling guest access to
+ * MSR_PLATFORM_INFO.
+ */
+
+#define _GNU_SOURCE /* for program_invocation_short_name */
+#include <fcntl.h>
+#include <stdio.h>
+#include <stdlib.h>
+#include <string.h>
+#include <sys/ioctl.h>
+
+#include "test_util.h"
+#include "kvm_util.h"
+#include "x86.h"
+
+#define VCPU_ID 0
+#define PORT_HOST_SYNC 0x1000
+#define MSR_PLATFORM_INFO_MAX_TURBO_RATIO 0xff00
+
+static void __exit_to_l0(uint16_t port, unsigned long arg)
+{
+	__asm__ __volatile__("in %[port], %%al"
+		:
+		: [port]"d"(port), "D"(arg)
+		: "rax");
+}
+
+#define exit_to_l0(_port, _arg) __exit_to_l0(_port, (unsigned long) (_arg))
+
+static void guest_code(void)
+{
+	uint64_t msr_platform_info;
+
+	for (;;) {
+		msr_platform_info = rdmsr(MSR_PLATFORM_INFO);
+		exit_to_l0(PORT_HOST_SYNC, msr_platform_info);
+		asm volatile ("inc %r11");
+	}
+}
+
+static void set_msr_platform_info_enabled(struct kvm_vm *vm, bool enable)
+{
+	struct kvm_enable_cap cap = {};
+
+	cap.cap = KVM_CAP_MSR_PLATFORM_INFO;
+	cap.flags = 0;
+	cap.args[0] = (int)enable;
+	vm_enable_cap(vm, &cap);
+}
+
+static void test_msr_platform_info_enabled(struct kvm_vm *vm)
+{
+	struct kvm_run *run = vcpu_state(vm, VCPU_ID);
+	struct kvm_regs regs;
+
+	set_msr_platform_info_enabled(vm, true);
+	vcpu_run(vm, VCPU_ID);
+	TEST_ASSERT(run->exit_reason == KVM_EXIT_IO,
+			"Exit_reason other than KVM_EXIT_IO: %u (%s),\n",
+			run->exit_reason,
+			exit_reason_str(run->exit_reason));
+	TEST_ASSERT(run->io.port == PORT_HOST_SYNC,
+			"Received IO from port other than PORT_HOST_SYNC: %u\n",
+			run->io.port);
+	vcpu_regs_get(vm, VCPU_ID, &regs);
+	TEST_ASSERT((regs.rdi & MSR_PLATFORM_INFO_MAX_TURBO_RATIO) ==
+		MSR_PLATFORM_INFO_MAX_TURBO_RATIO,
+		"Expected MSR_PLATFORM_INFO to have max turbo ratio mask: %i.",
+		MSR_PLATFORM_INFO_MAX_TURBO_RATIO);
+}
+
+static void test_msr_platform_info_disabled(struct kvm_vm *vm)
+{
+	struct kvm_run *run = vcpu_state(vm, VCPU_ID);
+
+	set_msr_platform_info_enabled(vm, false);
+	vcpu_run(vm, VCPU_ID);
+	TEST_ASSERT(run->exit_reason == KVM_EXIT_SHUTDOWN,
+			"Exit_reason other than KVM_EXIT_SHUTDOWN: %u (%s)\n",
+			run->exit_reason,
+			exit_reason_str(run->exit_reason));
+}
+
+int main(int argc, char *argv[])
+{
+	struct kvm_vm *vm;
+	struct kvm_run *state;
+	int rv;
+	uint64_t msr_platform_info;
+
+	/* Tell stdout not to buffer its content */
+	setbuf(stdout, NULL);
+
+	rv = kvm_check_cap(KVM_CAP_MSR_PLATFORM_INFO);
+	if (!rv) {
+		fprintf(stderr,
+			"KVM_CAP_MSR_PLATFORM_INFO not supported, skip test\n");
+		exit(KSFT_SKIP);
+	}
+
+	vm = vm_create_default(VCPU_ID, guest_code);
+
+	msr_platform_info = vcpu_get_msr(vm, VCPU_ID, MSR_PLATFORM_INFO);
+	vcpu_set_msr(vm, VCPU_ID, MSR_PLATFORM_INFO,
+		msr_platform_info | MSR_PLATFORM_INFO_MAX_TURBO_RATIO);
+	test_msr_platform_info_disabled(vm);
+	test_msr_platform_info_enabled(vm);
+	vcpu_set_msr(vm, VCPU_ID, MSR_PLATFORM_INFO, msr_platform_info);
+
+	kvm_vm_free(vm);
+
+	return 0;
+}
