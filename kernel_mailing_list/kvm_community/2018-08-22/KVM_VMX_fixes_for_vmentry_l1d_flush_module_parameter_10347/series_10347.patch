From patchwork Wed Aug 22 14:53:00 2018
Content-Type: text/plain; charset="utf-8"
MIME-Version: 1.0
Content-Transfer-Encoding: 7bit
X-Patchwork-Submitter: Paolo Bonzini <pbonzini@redhat.com>
X-Patchwork-Id: 10573005
Return-Path: <kvm-owner@kernel.org>
Received: from mail.wl.linuxfoundation.org (pdx-wl-mail.web.codeaurora.org
 [172.30.200.125])
	by pdx-korg-patchwork-2.web.codeaurora.org (Postfix) with ESMTP id 115E9921
	for <patchwork-kvm@patchwork.kernel.org>;
 Wed, 22 Aug 2018 14:53:12 +0000 (UTC)
Received: from mail.wl.linuxfoundation.org (localhost [127.0.0.1])
	by mail.wl.linuxfoundation.org (Postfix) with ESMTP id 002831FF83
	for <patchwork-kvm@patchwork.kernel.org>;
 Wed, 22 Aug 2018 14:53:11 +0000 (UTC)
Received: by mail.wl.linuxfoundation.org (Postfix, from userid 486)
	id E76672A46D; Wed, 22 Aug 2018 14:53:11 +0000 (UTC)
X-Spam-Checker-Version: SpamAssassin 3.3.1 (2010-03-16) on
	pdx-wl-mail.web.codeaurora.org
X-Spam-Level: 
X-Spam-Status: No, score=-7.8 required=2.0 tests=BAYES_00,DKIM_SIGNED,
	MAILING_LIST_MULTI,RCVD_IN_DNSWL_HI,T_DKIM_INVALID autolearn=ham
 version=3.3.1
Received: from vger.kernel.org (vger.kernel.org [209.132.180.67])
	by mail.wl.linuxfoundation.org (Postfix) with ESMTP id 7A9FB1FF83
	for <patchwork-kvm@patchwork.kernel.org>;
 Wed, 22 Aug 2018 14:53:11 +0000 (UTC)
Received: (majordomo@vger.kernel.org) by vger.kernel.org via listexpand
        id S1729167AbeHVSSS (ORCPT
        <rfc822;patchwork-kvm@patchwork.kernel.org>);
        Wed, 22 Aug 2018 14:18:18 -0400
Received: from mail-wr1-f67.google.com ([209.85.221.67]:37617 "EHLO
        mail-wr1-f67.google.com" rhost-flags-OK-OK-OK-OK) by vger.kernel.org
        with ESMTP id S1728947AbeHVSSR (ORCPT <rfc822;kvm@vger.kernel.org>);
        Wed, 22 Aug 2018 14:18:17 -0400
Received: by mail-wr1-f67.google.com with SMTP id u12-v6so590014wrr.4;
        Wed, 22 Aug 2018 07:53:04 -0700 (PDT)
DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/relaxed;
        d=gmail.com; s=20161025;
        h=sender:from:to:cc:subject:date:message-id;
        bh=VqoS7idAgGokWKw/mAUzLpwWnvT9zYvcmyvA03tcStw=;
        b=lyUyfBji0wsUvIlZr/g9TJK2ZWFbVwxXdx1LQKhDwh3ixu3Yj7IqjEJxNqSSIX0Qjh
         Vij9FOKtZQQhqAWiVVJvEDIWkxGlzziCo202G8FxTCZFv/hW7SzKcY4cAE54KhVxQ+0W
         bj4H8mJ9Qr26WfRHrr52T4S9Y/NvCkDyFni1uU+MKQb9LvSljVRB5cFcLoiYxGIhqTeR
         TZ6PFSboBB3QAp3HawCzgVP7RP1qOrp8W3Y5btyO9Cveg1GHYjP+IG71e/PRkFTNhluM
         kUuOrsZW5qSj9tuDRBNizYrZ8wfTFgxLi/cj8jWkTs6doAP2xD0IirweJIT2y/RtCuGb
         JPXg==
X-Google-DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/relaxed;
        d=1e100.net; s=20161025;
        h=x-gm-message-state:sender:from:to:cc:subject:date:message-id;
        bh=VqoS7idAgGokWKw/mAUzLpwWnvT9zYvcmyvA03tcStw=;
        b=qukgOCmRH/JEsn2BxL440Kovr+1MK+MLTGuYfbGtm6mXw2Rwj9l/uR1vNgmNS9lubs
         d0lzIcito7/Xi4CKUjZx0f+nMoJn8OARYqGfPjbLiPmOUPukqhg0SJJl7w6TPgNk2VnA
         rCkTJsu2s5zXf8NSeU/Vuy89sOrMAC2ec7E0dLOAe3djQH0UBWOa7pTLp2One/hB6Dxc
         3eIljQ1sKipieonhPfWASD5eOA9pmPw4wSO/YgpN0ioDUwuQhlPDjD+P3u7FQE3nIR1U
         YX3lsAgtYEmN1LBwsTtH7eQqUreMpJTyjljqxV9P9I9auuCz/y9dsC0VQZcQtLRAg4Pv
         qBDA==
X-Gm-Message-State: AOUpUlFPRhcglof51PTtqUU+R8i//Zr45gDhBdImLYalfnIVEVuDRXY4
        yoO89FICnD3f+Z5eBlh1Or7cR9DX
X-Google-Smtp-Source: 
 AA+uWPzrVmN4f2t+FKCH/aSLJE9UUGp+Tz9IOWg0tvePCbr8jxnrxHYiPHFlaCb9YZXArn+Up8Htrw==
X-Received: by 2002:a5d:428a:: with SMTP id
 k10-v6mr37686899wrq.225.1534949583074;
        Wed, 22 Aug 2018 07:53:03 -0700 (PDT)
Received: from 640k.lan (dynamic-adsl-78-12-184-244.clienti.tiscali.it.
 [78.12.184.244])
        by smtp.gmail.com with ESMTPSA id
 132-v6sm2909832wmd.13.2018.08.22.07.53.01
        (version=TLS1_2 cipher=ECDHE-RSA-AES128-GCM-SHA256 bits=128/128);
        Wed, 22 Aug 2018 07:53:02 -0700 (PDT)
From: Paolo Bonzini <pbonzini@redhat.com>
To: linux-kernel@vger.kernel.org, kvm@vger.kernel.org
Cc: bsd@redhat.com, stable@vger.kernel.org
Subject: [PATCH] KVM: VMX: fixes for vmentry_l1d_flush module parameter
Date: Wed, 22 Aug 2018 16:53:00 +0200
Message-Id: <1534949580-38261-1-git-send-email-pbonzini@redhat.com>
X-Mailer: git-send-email 1.8.3.1
Sender: kvm-owner@vger.kernel.org
Precedence: bulk
List-ID: <kvm.vger.kernel.org>
X-Mailing-List: kvm@vger.kernel.org
X-Virus-Scanned: ClamAV using ClamSMTP

Two bug fixes:

1) missing entries in the l1d_param array; this can cause a host crash
if an access attempts to reach the missing entry. Future-proof the get
function against any overflows as well.  However, the two entries
VMENTER_L1D_FLUSH_EPT_DISABLED and VMENTER_L1D_FLUSH_NOT_REQUIRED must
not be accepted by the parse function, so disable them there.

2) invalid values must be rejected even if the CPU does not have the
bug, so test for them before checking boot_cpu_has(X86_BUG_L1TF)

... and a small refactoring, since the .cmd field is redundant with
the index in the array.

Reported-by: Bandan Das <bsd@redhat.com>
Cc: stable@vger.kernel.org
Fixes: a7b9020b06ec6d7c3f3b0d4ef1a9eba12654f4f7
Signed-off-by: Paolo Bonzini <pbonzini@redhat.com>
Reviewed-by: Konrad Rzeszutek Wilk <konrad.wilk@oracle.com>
Tested-by: Jack Wang <jinpu.wang@profitbricks.com>
---
 arch/x86/kvm/vmx.c | 26 ++++++++++++++++----------
 1 file changed, 16 insertions(+), 10 deletions(-)

diff --git a/arch/x86/kvm/vmx.c b/arch/x86/kvm/vmx.c
index c76ca8c4befa..8dae47e7267a 100644
--- a/arch/x86/kvm/vmx.c
+++ b/arch/x86/kvm/vmx.c
@@ -198,12 +198,14 @@
 
 static const struct {
 	const char *option;
-	enum vmx_l1d_flush_state cmd;
+	bool for_parse;
 } vmentry_l1d_param[] = {
-	{"auto",	VMENTER_L1D_FLUSH_AUTO},
-	{"never",	VMENTER_L1D_FLUSH_NEVER},
-	{"cond",	VMENTER_L1D_FLUSH_COND},
-	{"always",	VMENTER_L1D_FLUSH_ALWAYS},
+	[VMENTER_L1D_FLUSH_AUTO]	 = {"auto", true},
+	[VMENTER_L1D_FLUSH_NEVER]	 = {"never", true},
+	[VMENTER_L1D_FLUSH_COND]	 = {"cond", true},
+	[VMENTER_L1D_FLUSH_ALWAYS]	 = {"always", true},
+	[VMENTER_L1D_FLUSH_EPT_DISABLED] = {"EPT disabled", false},
+	[VMENTER_L1D_FLUSH_NOT_REQUIRED] = {"not required", false},
 };
 
 #define L1D_CACHE_ORDER 4
@@ -287,8 +289,9 @@ static int vmentry_l1d_flush_parse(const char *s)
 
 	if (s) {
 		for (i = 0; i < ARRAY_SIZE(vmentry_l1d_param); i++) {
-			if (sysfs_streq(s, vmentry_l1d_param[i].option))
-				return vmentry_l1d_param[i].cmd;
+			if (vmentry_l1d_param[i].for_parse &&
+			    sysfs_streq(s, vmentry_l1d_param[i].option))
+				return i;
 		}
 	}
 	return -EINVAL;
@@ -298,13 +301,13 @@ static int vmentry_l1d_flush_set(const char *s, const struct kernel_param *kp)
 {
 	int l1tf, ret;
 
-	if (!boot_cpu_has(X86_BUG_L1TF))
-		return 0;
-
 	l1tf = vmentry_l1d_flush_parse(s);
 	if (l1tf < 0)
 		return l1tf;
 
+	if (!boot_cpu_has(X86_BUG_L1TF))
+		return 0;
+
 	/*
 	 * Has vmx_init() run already? If not then this is the pre init
 	 * parameter parsing. In that case just store the value and let
@@ -324,6 +327,9 @@ static int vmentry_l1d_flush_set(const char *s, const struct kernel_param *kp)
 
 static int vmentry_l1d_flush_get(char *s, const struct kernel_param *kp)
 {
+	if (WARN_ON_ONCE(l1tf_vmx_mitigation >= ARRAY_SIZE(vmentry_l1d_param)))
+		return sprintf(s, "???\n");
+
 	return sprintf(s, "%s\n", vmentry_l1d_param[l1tf_vmx_mitigation].option);
 }
 
