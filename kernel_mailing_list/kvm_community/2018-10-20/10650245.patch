From patchwork Sat Oct 20 03:15:33 2018
Content-Type: text/plain; charset="utf-8"
MIME-Version: 1.0
Content-Transfer-Encoding: 7bit
X-Patchwork-Submitter: Junaid Shahid <junaids@google.com>
X-Patchwork-Id: 10650245
Return-Path: <kvm-owner@kernel.org>
Received: from mail.wl.linuxfoundation.org (pdx-wl-mail.web.codeaurora.org
 [172.30.200.125])
	by pdx-korg-patchwork-2.web.codeaurora.org (Postfix) with ESMTP id 67DA813A9
	for <patchwork-kvm@patchwork.kernel.org>;
 Sat, 20 Oct 2018 03:16:09 +0000 (UTC)
Received: from mail.wl.linuxfoundation.org (localhost [127.0.0.1])
	by mail.wl.linuxfoundation.org (Postfix) with ESMTP id 4DB84201F5
	for <patchwork-kvm@patchwork.kernel.org>;
 Sat, 20 Oct 2018 03:16:09 +0000 (UTC)
Received: by mail.wl.linuxfoundation.org (Postfix, from userid 486)
	id 4200E205F7; Sat, 20 Oct 2018 03:16:09 +0000 (UTC)
X-Spam-Checker-Version: SpamAssassin 3.3.1 (2010-03-16) on
	pdx-wl-mail.web.codeaurora.org
X-Spam-Level: 
X-Spam-Status: No, score=-15.5 required=2.0 tests=BAYES_00,DKIM_SIGNED,
	DKIM_VALID,DKIM_VALID_AU,MAILING_LIST_MULTI,RCVD_IN_DNSWL_HI,
	USER_IN_DEF_DKIM_WL autolearn=ham version=3.3.1
Received: from vger.kernel.org (vger.kernel.org [209.132.180.67])
	by mail.wl.linuxfoundation.org (Postfix) with ESMTP id D3539201F5
	for <patchwork-kvm@patchwork.kernel.org>;
 Sat, 20 Oct 2018 03:16:08 +0000 (UTC)
Received: (majordomo@vger.kernel.org) by vger.kernel.org via listexpand
        id S1726176AbeJTLY4 (ORCPT
        <rfc822;patchwork-kvm@patchwork.kernel.org>);
        Sat, 20 Oct 2018 07:24:56 -0400
Received: from mail-io1-f73.google.com ([209.85.166.73]:39438 "EHLO
        mail-io1-f73.google.com" rhost-flags-OK-OK-OK-OK) by vger.kernel.org
        with ESMTP id S1725958AbeJTLY4 (ORCPT <rfc822;kvm@vger.kernel.org>);
        Sat, 20 Oct 2018 07:24:56 -0400
Received: by mail-io1-f73.google.com with SMTP id x5-v6so32479413ioa.6
        for <kvm@vger.kernel.org>; Fri, 19 Oct 2018 20:16:03 -0700 (PDT)
DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/relaxed;
        d=google.com; s=20161025;
        h=date:message-id:mime-version:subject:from:to:cc;
        bh=rfnoi6Ebk9oSFCGM0tLY7C3yLnbkSgeLP05w3Bl1opE=;
        b=q7w29/8L/6N19nyU55YHR56vCGZE6dy+3JKm/+ellZE/S3XgKE4E2zZlBhmKvWWn+6
         kcHG4z7RVl2/NaleB8bMaqUOkfkbOuq8UN26Tmr6BIdcy+Epf69/yCuKx1RTLFjzNmt8
         cFNI1YStHns21eXbk+dLu3d/jSsaceCO8h+e1QdYSSFJ6ZkUwEam0hOftvLxtHhoqdB4
         kMHi2jIrvwoqctetHkjtJdLtD389fkbHs9n6giyqD/9f0AYGSLmR9Cs65cPvrWVxuQFY
         lfxDpNby0JzlywK0ezsU+o4eCHXPjv3lRK3JcBknAg6vePuyNj9KyoMncghQNQFT03+v
         QekA==
X-Google-DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/relaxed;
        d=1e100.net; s=20161025;
        h=x-gm-message-state:date:message-id:mime-version:subject:from:to:cc;
        bh=rfnoi6Ebk9oSFCGM0tLY7C3yLnbkSgeLP05w3Bl1opE=;
        b=kENoyydUICyEpstbki9OR37OV/trEGpMvEtjBB3LBMtJWsfZjtp7oDgi9XACxSyC52
         d2bNbjHWMdJXUneq2oGGqvKRH6/9KGr16fLo4uFJZwgvPjxqrZRiyCnkdxrDrl/hfoOU
         HvHRToOLqyRzJKuAeoU8VzbEKVsbHFBhI5K+nGE0aHRuSJ+7AvXA4hMeOrgokWfjba59
         jz+q+I2E9pZ/iHY4aCC6bBph4zneU0wF2JodpD1xUNeX+zpi2CQREPbY8GfAQq+Hz7NZ
         9vS18c6M8y1vJztt/y/3MT79LmP/KPEf4Lr4xrJf7NCyylDQfceqS5Y1OGvMKhupFmzY
         yUFQ==
X-Gm-Message-State: ABuFfogocOdesHHVg+6Fqxw6lPZhL1ESkUGlGLGNkn8htv/NiHMKngQ6
        912editDJMM0xQ8jVSPApmoxTywh6bGP
X-Google-Smtp-Source: 
 ACcGV62E+bDPGnVEYAVEzS7O4JjxBjPkctzCDRJyStoVZJFex6qwMwzW0NLOI+AjwN1b0wYI6Eb8s2F7HGD5
X-Received: by 2002:a05:660c:145:: with SMTP id
 r5mr5465677itk.25.1540005363376;
 Fri, 19 Oct 2018 20:16:03 -0700 (PDT)
Date: Fri, 19 Oct 2018 20:15:33 -0700
Message-Id: <20181020031543.124399-1-junaids@google.com>
Mime-Version: 1.0
X-Mailer: git-send-email 2.19.1.568.g152ad8e336-goog
Subject: [PATCH 00/10] x86: PTE D Bit based dirty logging
From: Junaid Shahid <junaids@google.com>
To: pbonzini@redhat.com
Cc: kvm@vger.kernel.org, pfeiner@google.com
Content-Type: text/plain; charset="UTF-8"
Sender: kvm-owner@vger.kernel.org
Precedence: bulk
List-ID: <kvm.vger.kernel.org>
X-Mailing-List: kvm@vger.kernel.org
X-Virus-Scanned: ClamAV using ClamSMTP

This patch series implements a new dirty logging mode utilizing the Dirty
bits in the SPTEs, when available, instead of relying on write protection.
On hosts that do not support PML, this can result in significant
improvement in VM performance for some workloads during the brownout phase
of a live migration when compared to write protection based dirty logging,
because of the elimination of all the VM exits on memory writes.

However, this new mode does incur additional time in the get_dirty_log
IOCTL because of having to scan all the SPTEs for dirtiness, which can
in some cases, result in slightly elongating the blackout time. Two
strategies can be used to mitigate that. The first, included in this
series, is to have the ability to dynamically switch between D Bit based
and write protection based dirty logging modes. Then the mode could be
switched to write protection just before entering blackout, thus incurring
less time in the get_dirty_log IOCTL during blackout, while keeping the
reduced overhead of the D Bit based mode during brownout. Secondly, the
scan in the get_dirty_log IOCTL can be parallelized, which results in that
IOCTL becoming faster for all modes. That patch series will be sent out
separately a little later.

The series also includes a couple of other minor dirty logging related
performance improvements, including removal of extra TLB flushes in one
instance and more efficient functions for testing/clearing Writable/Dirty
bits.

Junaid Shahid (10):
  kvm: mmu: spte_write_protect optimization
  kvm: mmu: Allow reading hardware dirty state from
    kvm_get_dirty_log_protect
  kvm: x86: mmu: Change __rmap_clear_dirty to
    __rmap_test_and_clear_dirty
  kvm: mmu: x86: Add dirty bit clearing notification hook
  kvm: x86: mmu: Remove extra TLB flush from vmx_slot_enable_log_dirty()
  kvm: x86: mmu: Use D bit for dirty logging
  kvm: x86: mmu: Per-VM dirty logging mode
  kvm: x86: mmu: Refactor kvm_mmu_slot_*_remove_write_access
  kvm: x86: mmu: Ability to switch dirty logging mode dynamically
  kvm: x86: mmu: Add IOCTLs to allow userspace to switch dirty logging
    mode

 Documentation/virtual/kvm/api.txt |  39 +++
 arch/mips/kvm/mmu.c               |  16 +-
 arch/x86/include/asm/kvm_host.h   |  27 ++-
 arch/x86/include/uapi/asm/kvm.h   |   5 +
 arch/x86/kvm/mmu.c                | 390 +++++++++++++++++++++++++-----
 arch/x86/kvm/mmu.h                |   3 +
 arch/x86/kvm/vmx.c                |  20 +-
 arch/x86/kvm/x86.c                |  54 ++++-
 include/linux/kvm_host.h          |   8 +-
 include/uapi/linux/kvm.h          |   3 +
 virt/kvm/arm/mmu.c                |   9 +-
 virt/kvm/kvm_main.c               |  21 +-
 12 files changed, 482 insertions(+), 113 deletions(-)
