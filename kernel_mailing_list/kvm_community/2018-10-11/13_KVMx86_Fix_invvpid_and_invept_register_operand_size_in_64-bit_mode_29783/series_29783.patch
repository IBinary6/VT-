From patchwork Thu Oct 11 17:40:43 2018
Content-Type: text/plain; charset="utf-8"
MIME-Version: 1.0
Content-Transfer-Encoding: 7bit
X-Patchwork-Submitter: Uros Bizjak <ubizjak@gmail.com>
X-Patchwork-Id: 10637075
Return-Path: <kvm-owner@kernel.org>
Received: from mail.wl.linuxfoundation.org (pdx-wl-mail.web.codeaurora.org
 [172.30.200.125])
	by pdx-korg-patchwork-2.web.codeaurora.org (Postfix) with ESMTP id 9F3F015E2
	for <patchwork-kvm@patchwork.kernel.org>;
 Thu, 11 Oct 2018 17:40:58 +0000 (UTC)
Received: from mail.wl.linuxfoundation.org (localhost [127.0.0.1])
	by mail.wl.linuxfoundation.org (Postfix) with ESMTP id 91C502BD5D
	for <patchwork-kvm@patchwork.kernel.org>;
 Thu, 11 Oct 2018 17:40:58 +0000 (UTC)
Received: by mail.wl.linuxfoundation.org (Postfix, from userid 486)
	id 85F642BD67; Thu, 11 Oct 2018 17:40:58 +0000 (UTC)
X-Spam-Checker-Version: SpamAssassin 3.3.1 (2010-03-16) on
	pdx-wl-mail.web.codeaurora.org
X-Spam-Level: 
X-Spam-Status: No, score=-8.0 required=2.0 tests=BAYES_00,DKIM_SIGNED,
	DKIM_VALID,DKIM_VALID_AU,FREEMAIL_FROM,MAILING_LIST_MULTI,RCVD_IN_DNSWL_HI
	autolearn=ham version=3.3.1
Received: from vger.kernel.org (vger.kernel.org [209.132.180.67])
	by mail.wl.linuxfoundation.org (Postfix) with ESMTP id 3B51F2BD34
	for <patchwork-kvm@patchwork.kernel.org>;
 Thu, 11 Oct 2018 17:40:58 +0000 (UTC)
Received: (majordomo@vger.kernel.org) by vger.kernel.org via listexpand
        id S1727328AbeJLBJK (ORCPT
        <rfc822;patchwork-kvm@patchwork.kernel.org>);
        Thu, 11 Oct 2018 21:09:10 -0400
Received: from mail-wm1-f66.google.com ([209.85.128.66]:52788 "EHLO
        mail-wm1-f66.google.com" rhost-flags-OK-OK-OK-OK) by vger.kernel.org
        with ESMTP id S1726071AbeJLBJK (ORCPT <rfc822;kvm@vger.kernel.org>);
        Thu, 11 Oct 2018 21:09:10 -0400
Received: by mail-wm1-f66.google.com with SMTP id 189-v6so9840196wmw.2
        for <kvm@vger.kernel.org>; Thu, 11 Oct 2018 10:40:55 -0700 (PDT)
DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/relaxed;
        d=gmail.com; s=20161025;
        h=from:to:cc:subject:date:message-id;
        bh=kau9368ggYbCL8WjoMGnHnWKfOgWTCPATHZxb61PCCU=;
        b=Uqfr4tSphZEkM9MlzCqIdmi1OK1rzmLvnNZPDukiQBKk5RsJRH2AKEmAu8DDL77RfH
         EbdNiwXgkdcxbtMG/TGHK7mJ25g6HWqWKuk3lqO/DYQnXb8VBB9zxsozPyfs4xC9qn82
         2ayTvAIaa6tpcWwEs0t6wkEqtepkoEXkMCYilJgjOvQ8u9Tp0frJr9QJxdXJuBbrDoav
         1gXco3OEzjpp1XBYZ/t0SLYiwfLem4DlBV1qrCrInvyDO8e0y4uQVw8FcS8QvjQ/81wE
         LrqxYqJpJUUr2dVziTa76kcnytwDKUKlVVqxVk4iGP/YoZmu+VPzByc79950oQHkwFpw
         fbqQ==
X-Google-DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/relaxed;
        d=1e100.net; s=20161025;
        h=x-gm-message-state:from:to:cc:subject:date:message-id;
        bh=kau9368ggYbCL8WjoMGnHnWKfOgWTCPATHZxb61PCCU=;
        b=t8JrRYMK8ZEN5R9MByt8cI99rkGOycvxU/wVfpvx2MXgsn+dj/+Y1Zt6JhiprKp4J6
         KbBct/zAbAtuaSjDim9thBecyqTK9O0Uk0QrprxGO5ITMsYtywUSZQR8cEcHrwT5jpBb
         f+59uykTkhVv7DeG84cNAe2/ogc4JNsaTORhLYdXRLyY5WaUwOwKh+O0g/JqwQ34RhlA
         Yt1GLTJ2hRqdyZ1ZDkkeYeDzntOyAnTaDXgQPOQESXy5AwyMLer8s5fsCmqM4sKwJwJ1
         cDIsjNPn8YS17VWcy7MpaDLYDJ5tA+LAVViHLshkNlUNECKzVh+N/2awvPpIpV4/ORd4
         vxBA==
X-Gm-Message-State: ABuFfohIskdpnDxbD5qimW3MEwBBpx4diMLaM7YHFvtU44IjDz8xmkmZ
        Nngy2+hEgRcxz7W/+TBzsm0BEF35
X-Google-Smtp-Source: 
 ACcGV638T/NQfuseW91OMhJihmSka4GO4eFrb3KOPjEThmrc+ltaRLrbWkRusaA8BOOGbOEqCZQzWQ==
X-Received: by 2002:a1c:d712:: with SMTP id
 o18-v6mr2661966wmg.54.1539279654492;
        Thu, 11 Oct 2018 10:40:54 -0700 (PDT)
Received: from localhost.localdomain.com (93-103-18-160.static.t-2.net.
 [93.103.18.160])
        by smtp.gmail.com with ESMTPSA id
 193-v6sm22947244wmj.21.2018.10.11.10.40.53
        (version=TLS1_2 cipher=ECDHE-RSA-CHACHA20-POLY1305 bits=256/256);
        Thu, 11 Oct 2018 10:40:53 -0700 (PDT)
From: Uros Bizjak <ubizjak@gmail.com>
To: kvm@vger.kernel.org, pbonzini@redhat.com
Cc: Uros Bizjak <ubizjak@gmail.com>
Subject: [PATCH 1/3] KVM/x86: Fix invvpid and invept register operand size in
 64-bit mode
Date: Thu, 11 Oct 2018 19:40:43 +0200
Message-Id: <20181011174045.4415-1-ubizjak@gmail.com>
X-Mailer: git-send-email 2.17.1
Sender: kvm-owner@vger.kernel.org
Precedence: bulk
List-ID: <kvm.vger.kernel.org>
X-Mailing-List: kvm@vger.kernel.org
X-Virus-Scanned: ClamAV using ClamSMTP

Register operand size of invvpid and invept instruction in 64-bit mode
has always 64 bits. Adjust inline function argument type to reflect
correct size.

Signed-off-by: Uros Bizjak <ubizjak@gmail.com>
---
 arch/x86/kvm/vmx.c | 4 ++--
 1 file changed, 2 insertions(+), 2 deletions(-)

diff --git a/arch/x86/kvm/vmx.c b/arch/x86/kvm/vmx.c
index 612fd17be635..b04fb093ce87 100644
--- a/arch/x86/kvm/vmx.c
+++ b/arch/x86/kvm/vmx.c
@@ -2073,7 +2073,7 @@ static int __find_msr_index(struct vcpu_vmx *vmx, u32 msr)
 	return -1;
 }
 
-static inline void __invvpid(int ext, u16 vpid, gva_t gva)
+static inline void __invvpid(unsigned long ext, u16 vpid, gva_t gva)
 {
     struct {
 	u64 vpid : 16;
@@ -2088,7 +2088,7 @@ static inline void __invvpid(int ext, u16 vpid, gva_t gva)
     BUG_ON(error);
 }
 
-static inline void __invept(int ext, u64 eptp, gpa_t gpa)
+static inline void __invept(unsigned long ext, u64 eptp, gpa_t gpa)
 {
 	struct {
 		u64 eptp, gpa;

From patchwork Thu Oct 11 17:40:44 2018
Content-Type: text/plain; charset="utf-8"
MIME-Version: 1.0
Content-Transfer-Encoding: 7bit
X-Patchwork-Submitter: Uros Bizjak <ubizjak@gmail.com>
X-Patchwork-Id: 10637077
Return-Path: <kvm-owner@kernel.org>
Received: from mail.wl.linuxfoundation.org (pdx-wl-mail.web.codeaurora.org
 [172.30.200.125])
	by pdx-korg-patchwork-2.web.codeaurora.org (Postfix) with ESMTP id 57BF815E2
	for <patchwork-kvm@patchwork.kernel.org>;
 Thu, 11 Oct 2018 17:41:03 +0000 (UTC)
Received: from mail.wl.linuxfoundation.org (localhost [127.0.0.1])
	by mail.wl.linuxfoundation.org (Postfix) with ESMTP id 491882BD4A
	for <patchwork-kvm@patchwork.kernel.org>;
 Thu, 11 Oct 2018 17:41:03 +0000 (UTC)
Received: by mail.wl.linuxfoundation.org (Postfix, from userid 486)
	id 4732D2BD5B; Thu, 11 Oct 2018 17:41:03 +0000 (UTC)
X-Spam-Checker-Version: SpamAssassin 3.3.1 (2010-03-16) on
	pdx-wl-mail.web.codeaurora.org
X-Spam-Level: 
X-Spam-Status: No, score=-8.0 required=2.0 tests=BAYES_00,DKIM_SIGNED,
	DKIM_VALID,DKIM_VALID_AU,FREEMAIL_FROM,MAILING_LIST_MULTI,RCVD_IN_DNSWL_HI
	autolearn=ham version=3.3.1
Received: from vger.kernel.org (vger.kernel.org [209.132.180.67])
	by mail.wl.linuxfoundation.org (Postfix) with ESMTP id 9975A2BD4A
	for <patchwork-kvm@patchwork.kernel.org>;
 Thu, 11 Oct 2018 17:41:02 +0000 (UTC)
Received: (majordomo@vger.kernel.org) by vger.kernel.org via listexpand
        id S1728142AbeJLBJP (ORCPT
        <rfc822;patchwork-kvm@patchwork.kernel.org>);
        Thu, 11 Oct 2018 21:09:15 -0400
Received: from mail-wm1-f65.google.com ([209.85.128.65]:53574 "EHLO
        mail-wm1-f65.google.com" rhost-flags-OK-OK-OK-OK) by vger.kernel.org
        with ESMTP id S1726071AbeJLBJP (ORCPT <rfc822;kvm@vger.kernel.org>);
        Thu, 11 Oct 2018 21:09:15 -0400
Received: by mail-wm1-f65.google.com with SMTP id y11-v6so9819945wma.3
        for <kvm@vger.kernel.org>; Thu, 11 Oct 2018 10:40:59 -0700 (PDT)
DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/relaxed;
        d=gmail.com; s=20161025;
        h=from:to:cc:subject:date:message-id:in-reply-to:references;
        bh=Mi5K5HY2PcjGus9oJIT3EG+XLe5Yy61yovmfWfcUlWI=;
        b=ggSqifC3AiH20CvBVefXdswwL3B8muPSc1tu8vO6uNiT789cMkrPw7Im0Tu/6PCat+
         Qohy77XAJ6vuhPLv881tn5H+YjtdjOr5v5zt8zLT/eidFzQtgSN3ycA1OWGxOZkLNOnK
         4zfW348piWn3zba6yMRGAHhRmcaMSuEDFSPALIqiAnwOOju+GhfNdTlj3VDvQ/X1X2Y2
         BlmBArl/oB5c8aR0y+79WsOfl1AtqhMIdd5TLv3Y2/4I7sKSKk8yxo7/J6vTdn49uvOP
         CbAtGIgDQdQ/MUIwZqraljCg9R+tDrGOe1yAENnNhow390xsgJZIF3jg1Al4JVaCLA9B
         b1HQ==
X-Google-DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/relaxed;
        d=1e100.net; s=20161025;
        h=x-gm-message-state:from:to:cc:subject:date:message-id:in-reply-to
         :references;
        bh=Mi5K5HY2PcjGus9oJIT3EG+XLe5Yy61yovmfWfcUlWI=;
        b=MKI+1021P796wmsB5+zG4YNuwddwUSm5+Xwhp3OUsxAlrPoQJUke0+l8Qj+7VZ0ZhR
         X5QU0g3gn/ZMvp3ypqL8xlQLsx2e4bI7T8Q7yMJ0cXmlbPb0c9Ap38Nac/T/osMkkzrU
         eq1O7Sc/gfHj57aP3mEjbBXyGAw9GyaFaAOXKKWgPEGhvGtOQ9SllthPZ3FcpLQ5tvWz
         6JT8ihwO3N1FMvy91gWl/QNB3Oxw/tDPNK5FX1jM2GFOrsaVM1lsEcO2iNaSDOGPj49i
         DiLcvFbD2VzNNGu91vVyQIcyXBusdou9ThevGhkPOZJfo2qQAbOaGTHvbN/MAzOkyci0
         j+ag==
X-Gm-Message-State: ABuFfogjoIFdjgVU3OMXBnE3PBVLuUsCaYU9+SsSc+/qS5LVxbJHAeiD
        KyvY7wtqqYHc5hfc5csHacW2bNQ4
X-Google-Smtp-Source: 
 ACcGV63hK0Z0JymLFME0KWK68sp550eZWhf7o8fqrIJ2Cb5rdTPpEfK6LUPrmKylNmUZaIj8i3c1aw==
X-Received: by 2002:a1c:448a:: with SMTP id
 r132-v6mr2605076wma.132.1539279658443;
        Thu, 11 Oct 2018 10:40:58 -0700 (PDT)
Received: from localhost.localdomain.com (93-103-18-160.static.t-2.net.
 [93.103.18.160])
        by smtp.gmail.com with ESMTPSA id
 193-v6sm22947244wmj.21.2018.10.11.10.40.57
        (version=TLS1_2 cipher=ECDHE-RSA-CHACHA20-POLY1305 bits=256/256);
        Thu, 11 Oct 2018 10:40:57 -0700 (PDT)
From: Uros Bizjak <ubizjak@gmail.com>
To: kvm@vger.kernel.org, pbonzini@redhat.com
Cc: Uros Bizjak <ubizjak@gmail.com>
Subject: [PATCH 2/3] KVM/x86: Use assembly instruction mnemonics instead of
 .byte streams
Date: Thu, 11 Oct 2018 19:40:44 +0200
Message-Id: <20181011174045.4415-2-ubizjak@gmail.com>
X-Mailer: git-send-email 2.17.1
In-Reply-To: <20181011174045.4415-1-ubizjak@gmail.com>
References: <20181011174045.4415-1-ubizjak@gmail.com>
Sender: kvm-owner@vger.kernel.org
Precedence: bulk
List-ID: <kvm.vger.kernel.org>
X-Mailing-List: kvm@vger.kernel.org
X-Virus-Scanned: ClamAV using ClamSMTP

Recently the minimum required version of binutils was changed to 2.20,
which supports all VMX instruction mnemonics. The patch removes
all .byte #defines and uses real instruction mnemonics instead.

The compiler is now able to pass memory operand to the instruction,
so there is no need for memory clobber anymore. Also, the compiler
adds CC register clobber automatically to all extended asm clauses,
so the patch also removes explicit CC clobber.

The immediate benefit of the patch is removal of many unnecesary
register moves, resulting in 1434 saved bytes in vmx.o:

   text    data     bss     dec     hex filename
 151257   18246    8500  178003   2b753 vmx.o
 152691   18246    8500  179437   2bced vmx-old.o

Some examples of improvement include removal of unneeded moves
of %rsp to %rax in front of invept and invvpid instructions:

    a57e:	b9 01 00 00 00       	mov    $0x1,%ecx
    a583:	48 89 04 24          	mov    %rax,(%rsp)
    a587:	48 89 e0             	mov    %rsp,%rax
    a58a:	48 c7 44 24 08 00 00 	movq   $0x0,0x8(%rsp)
    a591:	00 00
    a593:	66 0f 38 80 08       	invept (%rax),%rcx

to:

    a45c:	48 89 04 24          	mov    %rax,(%rsp)
    a460:	b8 01 00 00 00       	mov    $0x1,%eax
    a465:	48 c7 44 24 08 00 00 	movq   $0x0,0x8(%rsp)
    a46c:	00 00
    a46e:	66 0f 38 80 04 24    	invept (%rsp),%rax

and the ability to use more optimal registers and memory operands
in the instruction:

    8faa:	48 8b 44 24 28       	mov    0x28(%rsp),%rax
    8faf:	4c 89 c2             	mov    %r8,%rdx
    8fb2:	0f 79 d0             	vmwrite %rax,%rdx

to:

    8e7c:	44 0f 79 44 24 28    	vmwrite 0x28(%rsp),%r8

Signed-off-by: Uros Bizjak <ubizjak@gmail.com>
---
 arch/x86/include/asm/virtext.h |  2 +-
 arch/x86/include/asm/vmx.h     | 13 -----------
 arch/x86/kvm/vmx.c             | 40 +++++++++++++++-------------------
 3 files changed, 18 insertions(+), 37 deletions(-)

diff --git a/arch/x86/include/asm/virtext.h b/arch/x86/include/asm/virtext.h
index 0116b2ee9e64..449c92da2c91 100644
--- a/arch/x86/include/asm/virtext.h
+++ b/arch/x86/include/asm/virtext.h
@@ -40,7 +40,7 @@ static inline int cpu_has_vmx(void)
  */
 static inline void cpu_vmxoff(void)
 {
-	asm volatile (ASM_VMX_VMXOFF : : : "cc");
+	asm volatile ("vmxoff");
 	cr4_clear_bits(X86_CR4_VMXE);
 }
 
diff --git a/arch/x86/include/asm/vmx.h b/arch/x86/include/asm/vmx.h
index 9527ba5d62da..ade0f153947d 100644
--- a/arch/x86/include/asm/vmx.h
+++ b/arch/x86/include/asm/vmx.h
@@ -503,19 +503,6 @@ enum vmcs_field {
 
 #define VMX_EPT_IDENTITY_PAGETABLE_ADDR		0xfffbc000ul
 
-
-#define ASM_VMX_VMCLEAR_RAX       ".byte 0x66, 0x0f, 0xc7, 0x30"
-#define ASM_VMX_VMLAUNCH          ".byte 0x0f, 0x01, 0xc2"
-#define ASM_VMX_VMRESUME          ".byte 0x0f, 0x01, 0xc3"
-#define ASM_VMX_VMPTRLD_RAX       ".byte 0x0f, 0xc7, 0x30"
-#define ASM_VMX_VMREAD_RDX_RAX    ".byte 0x0f, 0x78, 0xd0"
-#define ASM_VMX_VMWRITE_RAX_RDX   ".byte 0x0f, 0x79, 0xd0"
-#define ASM_VMX_VMWRITE_RSP_RDX   ".byte 0x0f, 0x79, 0xd4"
-#define ASM_VMX_VMXOFF            ".byte 0x0f, 0x01, 0xc4"
-#define ASM_VMX_VMXON_RAX         ".byte 0xf3, 0x0f, 0xc7, 0x30"
-#define ASM_VMX_INVEPT		  ".byte 0x66, 0x0f, 0x38, 0x80, 0x08"
-#define ASM_VMX_INVVPID		  ".byte 0x66, 0x0f, 0x38, 0x81, 0x08"
-
 struct vmx_msr_entry {
 	u32 index;
 	u32 reserved;
diff --git a/arch/x86/kvm/vmx.c b/arch/x86/kvm/vmx.c
index b04fb093ce87..552af5eba5bc 100644
--- a/arch/x86/kvm/vmx.c
+++ b/arch/x86/kvm/vmx.c
@@ -2082,9 +2082,8 @@ static inline void __invvpid(unsigned long ext, u16 vpid, gva_t gva)
     } operand = { vpid, 0, gva };
     bool error;
 
-    asm volatile (__ex(ASM_VMX_INVVPID) CC_SET(na)
-		  : CC_OUT(na) (error) : "a"(&operand), "c"(ext)
-		  : "memory");
+    asm volatile (__ex("invvpid %2, %1") CC_SET(na)
+		  : CC_OUT(na) (error) : "r"(ext), "m"(operand));
     BUG_ON(error);
 }
 
@@ -2095,9 +2094,8 @@ static inline void __invept(unsigned long ext, u64 eptp, gpa_t gpa)
 	} operand = {eptp, gpa};
 	bool error;
 
-	asm volatile (__ex(ASM_VMX_INVEPT) CC_SET(na)
-		      : CC_OUT(na) (error) : "a" (&operand), "c" (ext)
-		      : "memory");
+	asm volatile (__ex("invept %2, %1") CC_SET(na)
+		      : CC_OUT(na) (error) : "r"(ext), "m"(operand));
 	BUG_ON(error);
 }
 
@@ -2116,9 +2114,8 @@ static void vmcs_clear(struct vmcs *vmcs)
 	u64 phys_addr = __pa(vmcs);
 	bool error;
 
-	asm volatile (__ex(ASM_VMX_VMCLEAR_RAX) CC_SET(na)
-		      : CC_OUT(na) (error) : "a"(&phys_addr), "m"(phys_addr)
-		      : "memory");
+	asm volatile (__ex("vmclear %1") CC_SET(na)
+		      : CC_OUT(na) (error) : "m"(phys_addr));
 	if (unlikely(error))
 		printk(KERN_ERR "kvm: vmclear fail: %p/%llx\n",
 		       vmcs, phys_addr);
@@ -2141,9 +2138,8 @@ static void vmcs_load(struct vmcs *vmcs)
 	if (static_branch_unlikely(&enable_evmcs))
 		return evmcs_load(phys_addr);
 
-	asm volatile (__ex(ASM_VMX_VMPTRLD_RAX) CC_SET(na)
-		      : CC_OUT(na) (error) : "a"(&phys_addr), "m"(phys_addr)
-		      : "memory");
+	asm volatile (__ex("vmptrld %1") CC_SET(na)
+		      : CC_OUT(na) (error) : "m"(phys_addr));
 	if (unlikely(error))
 		printk(KERN_ERR "kvm: vmptrld %p/%llx failed\n",
 		       vmcs, phys_addr);
@@ -2319,8 +2315,8 @@ static __always_inline unsigned long __vmcs_readl(unsigned long field)
 {
 	unsigned long value;
 
-	asm volatile (__ex_clear(ASM_VMX_VMREAD_RDX_RAX, "%0")
-		      : "=a"(value) : "d"(field) : "cc");
+	asm volatile (__ex_clear("vmread %1, %0", "%0")
+		      : "=r"(value) : "r"(field));
 	return value;
 }
 
@@ -2371,8 +2367,8 @@ static __always_inline void __vmcs_writel(unsigned long field, unsigned long val
 {
 	bool error;
 
-	asm volatile (__ex(ASM_VMX_VMWRITE_RAX_RDX) CC_SET(na)
-		      : CC_OUT(na) (error) : "a"(value), "d"(field));
+	asm volatile (__ex("vmwrite %2, %1") CC_SET(na)
+		      : CC_OUT(na) (error) : "r"(field), "rm"(value));
 	if (unlikely(error))
 		vmwrite_error(field, value);
 }
@@ -4393,9 +4389,7 @@ static void kvm_cpu_vmxon(u64 addr)
 	cr4_set_bits(X86_CR4_VMXE);
 	intel_pt_handle_vmx(1);
 
-	asm volatile (ASM_VMX_VMXON_RAX
-			: : "a"(&addr), "m"(addr)
-			: "memory", "cc");
+	asm volatile ("vmxon %0" : : "m"(addr));
 }
 
 static int hardware_enable(void)
@@ -4464,7 +4458,7 @@ static void vmclear_local_loaded_vmcss(void)
  */
 static void kvm_cpu_vmxoff(void)
 {
-	asm volatile (__ex(ASM_VMX_VMXOFF) : : : "cc");
+	asm volatile (__ex("vmxoff"));
 
 	intel_pt_handle_vmx(0);
 	cr4_clear_bits(X86_CR4_VMXE);
@@ -10741,7 +10735,7 @@ static void __noclone vmx_vcpu_run(struct kvm_vcpu *vcpu)
 		"mov %%" _ASM_SP ", (%%" _ASM_SI ") \n\t"
 		"jmp 1f \n\t"
 		"2: \n\t"
-		__ex(ASM_VMX_VMWRITE_RSP_RDX) "\n\t"
+		__ex("vmwrite %%" _ASM_SP ", %%" _ASM_DX) "\n\t"
 		"1: \n\t"
 		/* Reload cr2 if changed */
 		"mov %c[cr2](%0), %%" _ASM_AX " \n\t"
@@ -10773,9 +10767,9 @@ static void __noclone vmx_vcpu_run(struct kvm_vcpu *vcpu)
 
 		/* Enter guest mode */
 		"jne 1f \n\t"
-		__ex(ASM_VMX_VMLAUNCH) "\n\t"
+		__ex("vmlaunch") "\n\t"
 		"jmp 2f \n\t"
-		"1: " __ex(ASM_VMX_VMRESUME) "\n\t"
+		"1: " __ex("vmresume") "\n\t"
 		"2: "
 		/* Save guest registers, load host registers, keep flags */
 		"mov %0, %c[wordsize](%%" _ASM_SP ") \n\t"

From patchwork Thu Oct 11 17:40:45 2018
Content-Type: text/plain; charset="utf-8"
MIME-Version: 1.0
Content-Transfer-Encoding: 7bit
X-Patchwork-Submitter: Uros Bizjak <ubizjak@gmail.com>
X-Patchwork-Id: 10637079
Return-Path: <kvm-owner@kernel.org>
Received: from mail.wl.linuxfoundation.org (pdx-wl-mail.web.codeaurora.org
 [172.30.200.125])
	by pdx-korg-patchwork-2.web.codeaurora.org (Postfix) with ESMTP id C3E4B17E1
	for <patchwork-kvm@patchwork.kernel.org>;
 Thu, 11 Oct 2018 17:41:05 +0000 (UTC)
Received: from mail.wl.linuxfoundation.org (localhost [127.0.0.1])
	by mail.wl.linuxfoundation.org (Postfix) with ESMTP id B811D2BD6B
	for <patchwork-kvm@patchwork.kernel.org>;
 Thu, 11 Oct 2018 17:41:05 +0000 (UTC)
Received: by mail.wl.linuxfoundation.org (Postfix, from userid 486)
	id B669E2BD66; Thu, 11 Oct 2018 17:41:05 +0000 (UTC)
X-Spam-Checker-Version: SpamAssassin 3.3.1 (2010-03-16) on
	pdx-wl-mail.web.codeaurora.org
X-Spam-Level: 
X-Spam-Status: No, score=-8.0 required=2.0 tests=BAYES_00,DKIM_SIGNED,
	DKIM_VALID,DKIM_VALID_AU,FREEMAIL_FROM,MAILING_LIST_MULTI,RCVD_IN_DNSWL_HI
	autolearn=ham version=3.3.1
Received: from vger.kernel.org (vger.kernel.org [209.132.180.67])
	by mail.wl.linuxfoundation.org (Postfix) with ESMTP id 6EEED2BD5B
	for <patchwork-kvm@patchwork.kernel.org>;
 Thu, 11 Oct 2018 17:41:05 +0000 (UTC)
Received: (majordomo@vger.kernel.org) by vger.kernel.org via listexpand
        id S1728181AbeJLBJS (ORCPT
        <rfc822;patchwork-kvm@patchwork.kernel.org>);
        Thu, 11 Oct 2018 21:09:18 -0400
Received: from mail-wr1-f65.google.com ([209.85.221.65]:45999 "EHLO
        mail-wr1-f65.google.com" rhost-flags-OK-OK-OK-OK) by vger.kernel.org
        with ESMTP id S1727370AbeJLBJS (ORCPT <rfc822;kvm@vger.kernel.org>);
        Thu, 11 Oct 2018 21:09:18 -0400
Received: by mail-wr1-f65.google.com with SMTP id q5-v6so10619683wrw.12
        for <kvm@vger.kernel.org>; Thu, 11 Oct 2018 10:41:03 -0700 (PDT)
DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/relaxed;
        d=gmail.com; s=20161025;
        h=from:to:cc:subject:date:message-id:in-reply-to:references;
        bh=92k8Pve68z2BZH3FTzFIOIwY95zcfS2RuTznbgQocMw=;
        b=XUjey41VWX6noa3qvHdESG8VV+G3W/t4xxxZnwqiVc5XTEAdfWY515sjZFyBIVMJvt
         15kaU5Pmhbl7AcUkYLKjdj3EYMjiTsTznzsoMuJj+v0H9wiEe+UfVZ8yco1e6cIT/FyN
         DQL+lVIpNVXWNv0xfWBm+4Vf61iNbspeF5SBPqPFovke3qU7Tr3mUKBAvapxUbsrb9h3
         VMpYzjo5EDzk/UcV92vi2+51LcC7ej8DwsqjJl51BxsoXqz6uJhkxRhvZBVxkHBVmt+K
         1/COV/MXKrZBbhQ1Rg6wWA26m0fgJSKtAli9SvsKM8wqYTvZAIt4p/MWNrSKdJ6Wmsuq
         9iRA==
X-Google-DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/relaxed;
        d=1e100.net; s=20161025;
        h=x-gm-message-state:from:to:cc:subject:date:message-id:in-reply-to
         :references;
        bh=92k8Pve68z2BZH3FTzFIOIwY95zcfS2RuTznbgQocMw=;
        b=Aot3O8kgDxxpwDPoOIEow07kzXCV6JxwgdDDpsqF9bgT7fcjAsx/Yyq679WFvO0i2e
         Al8XUddc9MKvjewUDjMaTZkyL2vs4NL5uUrG5sgpB9Q8ooOuiJcEsPnojBKii84Xfw0z
         BQOaqKxv2sdkP1iQHMM83iRbB5nJKg6Yqdf8GmF9PcSovpxWmfA3Ip4PwL4aBVxViLN7
         gJudR/jkZhajnzALGqutWKfFdtSTyLoxwzPJB2hIAD03rjuDleINsLbvJdF/f3RQgq+x
         h4edfWKr8mFe8ChCJ9yJutl31tvfKRG5jSyKwh0FxWcSey2leAUrZ9Bcw13VulZlmUkU
         q1eA==
X-Gm-Message-State: ABuFfohP4o81SUqpFUxeNqbJMml3F964hyPIya9eh6B5qfdCkcV6UumA
        EvqSj+DTnJ/bqJmsLFezTWNDQRmY
X-Google-Smtp-Source: 
 ACcGV61B3djPpLlCty02yYzALwWExcXlR+1fFshv7fTHGw8FCJxzexrWmjNuRck4BzdBcIkdhFkzbw==
X-Received: by 2002:adf:e886:: with SMTP id d6-v6mr2582347wrm.7.1539279662249;
        Thu, 11 Oct 2018 10:41:02 -0700 (PDT)
Received: from localhost.localdomain.com (93-103-18-160.static.t-2.net.
 [93.103.18.160])
        by smtp.gmail.com with ESMTPSA id
 193-v6sm22947244wmj.21.2018.10.11.10.41.01
        (version=TLS1_2 cipher=ECDHE-RSA-CHACHA20-POLY1305 bits=256/256);
        Thu, 11 Oct 2018 10:41:01 -0700 (PDT)
From: Uros Bizjak <ubizjak@gmail.com>
To: kvm@vger.kernel.org, pbonzini@redhat.com
Cc: Uros Bizjak <ubizjak@gmail.com>
Subject: [PATCH 3/3] KVM/x86: Use 32bit xor to clear register
Date: Thu, 11 Oct 2018 19:40:45 +0200
Message-Id: <20181011174045.4415-3-ubizjak@gmail.com>
X-Mailer: git-send-email 2.17.1
In-Reply-To: <20181011174045.4415-1-ubizjak@gmail.com>
References: <20181011174045.4415-1-ubizjak@gmail.com>
Sender: kvm-owner@vger.kernel.org
Precedence: bulk
List-ID: <kvm.vger.kernel.org>
X-Mailing-List: kvm@vger.kernel.org
X-Virus-Scanned: ClamAV using ClamSMTP

x86_64 zero-extends 32bit xor to a full 64bit register. Use %k asm
operand modifier to force 32bit register and save 268 bytes in kvm.o

Signed-off-by: Uros Bizjak <ubizjak@gmail.com>
---
 arch/x86/kvm/vmx.c | 4 ++--
 1 file changed, 2 insertions(+), 2 deletions(-)

diff --git a/arch/x86/kvm/vmx.c b/arch/x86/kvm/vmx.c
index 552af5eba5bc..293a7f107c82 100644
--- a/arch/x86/kvm/vmx.c
+++ b/arch/x86/kvm/vmx.c
@@ -61,7 +61,7 @@
 
 #define __ex(x) __kvm_handle_fault_on_reboot(x)
 #define __ex_clear(x, reg) \
-	____kvm_handle_fault_on_reboot(x, "xor " reg " , " reg)
+	____kvm_handle_fault_on_reboot(x, "xorl " reg " , " reg)
 
 MODULE_AUTHOR("Qumranet");
 MODULE_LICENSE("GPL");
@@ -2315,7 +2315,7 @@ static __always_inline unsigned long __vmcs_readl(unsigned long field)
 {
 	unsigned long value;
 
-	asm volatile (__ex_clear("vmread %1, %0", "%0")
+	asm volatile (__ex_clear("vmread %1, %0", "%k0")
 		      : "=r"(value) : "r"(field));
 	return value;
 }
