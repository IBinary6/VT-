From patchwork Tue Nov 13 15:22:04 2018
Content-Type: text/plain; charset="utf-8"
MIME-Version: 1.0
Content-Transfer-Encoding: 7bit
X-Patchwork-Submitter: "Tambe, William" <WILLIAM.TAMBE@amd.com>
X-Patchwork-Id: 10680983
Return-Path: <kvm-owner@kernel.org>
Received: from mail.wl.linuxfoundation.org (pdx-wl-mail.web.codeaurora.org
 [172.30.200.125])
	by pdx-korg-patchwork-2.web.codeaurora.org (Postfix) with ESMTP id 1B44B139B
	for <patchwork-kvm@patchwork.kernel.org>;
 Tue, 13 Nov 2018 15:22:12 +0000 (UTC)
Received: from mail.wl.linuxfoundation.org (localhost [127.0.0.1])
	by mail.wl.linuxfoundation.org (Postfix) with ESMTP id 0B6C22AD9F
	for <patchwork-kvm@patchwork.kernel.org>;
 Tue, 13 Nov 2018 15:22:12 +0000 (UTC)
Received: by mail.wl.linuxfoundation.org (Postfix, from userid 486)
	id 09C772ADCB; Tue, 13 Nov 2018 15:22:12 +0000 (UTC)
X-Spam-Checker-Version: SpamAssassin 3.3.1 (2010-03-16) on
	pdx-wl-mail.web.codeaurora.org
X-Spam-Level: 
X-Spam-Status: No, score=-7.9 required=2.0 tests=BAYES_00,DKIM_SIGNED,
	DKIM_VALID,MAILING_LIST_MULTI,RCVD_IN_DNSWL_HI autolearn=ham version=3.3.1
Received: from vger.kernel.org (vger.kernel.org [209.132.180.67])
	by mail.wl.linuxfoundation.org (Postfix) with ESMTP id 5BA8C2ADC2
	for <patchwork-kvm@patchwork.kernel.org>;
 Tue, 13 Nov 2018 15:22:11 +0000 (UTC)
Received: (majordomo@vger.kernel.org) by vger.kernel.org via listexpand
        id S1732771AbeKNBUo (ORCPT
        <rfc822;patchwork-kvm@patchwork.kernel.org>);
        Tue, 13 Nov 2018 20:20:44 -0500
Received: from mail-eopbgr760078.outbound.protection.outlook.com
 ([40.107.76.78]:32649
        "EHLO NAM02-CY1-obe.outbound.protection.outlook.com"
        rhost-flags-OK-OK-OK-FAIL) by vger.kernel.org with ESMTP
        id S1732028AbeKNBUo (ORCPT <rfc822;kvm@vger.kernel.org>);
        Tue, 13 Nov 2018 20:20:44 -0500
DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/relaxed;
 d=amdcloud.onmicrosoft.com; s=selector1-amd-com;
 h=From:Date:Subject:Message-ID:Content-Type:MIME-Version:X-MS-Exchange-SenderADCheck;
 bh=90AAYln/xoF/jogPXvO0ieSyLq7BBxP1WD1NUYS1OmI=;
 b=to+KCaBlc2fgopmQqqfj7I1eEbuZF0YYT61de4F7PzUUk8dRJPJrDHyh9kCeiB8XEpfS6R2/KWYeEu7xnmEfjErmt6/QS798F8f3pl2NNlA4pDDp13sm89YOL210TJ/bPx/QsdAB2HJLUcDYxwIxhK8Ve1OZ8KoZFcMFC6XKkoQ=
Received: from DM5PR1201MB0091.namprd12.prod.outlook.com (10.174.106.21) by
 DM5PR1201MB0059.namprd12.prod.outlook.com (10.174.106.13) with Microsoft SMTP
 Server (version=TLS1_2, cipher=TLS_ECDHE_RSA_WITH_AES_256_GCM_SHA384) id
 15.20.1294.28; Tue, 13 Nov 2018 15:22:04 +0000
Received: from DM5PR1201MB0091.namprd12.prod.outlook.com
 ([fe80::b5d0:7d79:342e:83a5]) by DM5PR1201MB0091.namprd12.prod.outlook.com
 ([fe80::b5d0:7d79:342e:83a5%3]) with mapi id 15.20.1294.045; Tue, 13 Nov 2018
 15:22:04 +0000
From: "Tambe, William" <William.Tambe@amd.com>
To: "kvm@vger.kernel.org" <kvm@vger.kernel.org>
Subject: [PATCH] KVM: nSVM: Fix nested guest support for PAUSE filtering.
Thread-Topic: [PATCH] KVM: nSVM: Fix nested guest support for PAUSE filtering.
Thread-Index: AQHUe2Sh8ypRlt5NdEm5NOv74YlQNg==
Date: Tue, 13 Nov 2018 15:22:04 +0000
Message-ID: <20181113152153.24238-1-william.tambe@amd.com>
Accept-Language: en-US
Content-Language: en-US
X-MS-Has-Attach: 
X-MS-TNEF-Correlator: 
x-clientproxiedby: SN4PR0801CA0023.namprd08.prod.outlook.com
 (2603:10b6:803:29::33) To DM5PR1201MB0091.namprd12.prod.outlook.com
 (2603:10b6:4:54::21)
authentication-results: spf=none (sender IP is )
 smtp.mailfrom=William.Tambe@amd.com;
x-ms-exchange-messagesentrepresentingtype: 1
x-originating-ip: [165.204.77.1]
x-ms-publictraffictype: Email
x-microsoft-exchange-diagnostics: 
 1;DM5PR1201MB0059;20:pAqToBrivQs8y2RgV4dY/rNUzk3buZPrfW8ZgpRoQSh3pRvs1jGYg7omOprsTFMzYkzY/OCG+1A7A9e3d1T39/RKl11MSKKnUij2Y7SP9EoZdUmz4+twZoBsdEx2241YwymxWtsOKrWdwoeMILRv5TkPmWoIFklyMBW2O95rHcDd3CFR5ETcRoivL3Tj8kHg7NFImN5oxwYoupYQp5Wg2hX75mJJ8E3vPebYhCxAhe0ArtC5xt236O4KTuQApgi3
x-ms-office365-filtering-correlation-id: 75c276ae-8c8e-4fcc-71a9-08d6497bc43a
x-ms-office365-filtering-ht: Tenant
x-microsoft-antispam: 
 BCL:0;PCL:0;RULEID:(2390060)(7020095)(4652040)(8989299)(4534185)(4627221)(201703031133081)(201702281549075)(8990200)(5600074)(711020)(4618075)(2017052603328)(7153060)(7193020);SRVR:DM5PR1201MB0059;
x-ms-traffictypediagnostic: DM5PR1201MB0059:
x-microsoft-antispam-prvs: 
 <DM5PR1201MB0059D5D2B45AF99B28DA8D4DF7C20@DM5PR1201MB0059.namprd12.prod.outlook.com>
x-exchange-antispam-report-test: UriScan:(767451399110);
x-ms-exchange-senderadcheck: 1
x-exchange-antispam-report-cfa-test: 
 BCL:0;PCL:0;RULEID:(8211001083)(6040522)(2401047)(5005006)(8121501046)(823302103)(3002001)(10201501046)(93006095)(93001095)(3231406)(944501410)(52105112)(6055026)(148016)(149066)(150057)(6041310)(20161123562045)(20161123558120)(20161123564045)(20161123560045)(201703131423095)(201702281528075)(20161123555045)(201703061421075)(201703061406153)(201708071742011)(7699051)(76991095);SRVR:DM5PR1201MB0059;BCL:0;PCL:0;RULEID:;SRVR:DM5PR1201MB0059;
x-forefront-prvs: 085551F5A8
x-forefront-antispam-report: 
 SFV:NSPM;SFS:(10009020)(136003)(366004)(376002)(346002)(39860400002)(396003)(199004)(189003)(105586002)(97736004)(1857600001)(36756003)(106356001)(186003)(6436002)(6506007)(486006)(6916009)(7736002)(386003)(2900100001)(6486002)(86362001)(8936002)(2351001)(14454004)(52116002)(256004)(305945005)(5640700003)(26005)(6512007)(2501003)(66066001)(53936002)(5660300001)(6116002)(1076002)(99286004)(3846002)(71190400001)(476003)(316002)(478600001)(72206003)(71200400001)(8676002)(102836004)(68736007)(81156014)(1730700003)(2616005)(25786009)(81166006)(2906002);DIR:OUT;SFP:1101;SCL:1;SRVR:DM5PR1201MB0059;H:DM5PR1201MB0091.namprd12.prod.outlook.com;FPR:;SPF:None;LANG:en;PTR:InfoNoRecords;A:1;MX:1;
received-spf: None (protection.outlook.com: amd.com does not designate
 permitted sender hosts)
x-microsoft-antispam-message-info: 
 6ssYylpRUP+AjBr3PLd2jJp+rPZonv+CfjQRXlxp11clGZpXwSSjUCjALPnGtW5aibsFlywlJiZe09ahIS/E0wBxD6bfl8vNlwauwtLwp4ltJ+ZyZclFAlwR8UdwzK8L4vK/kdPmvfKOqXc21heE+/4ZbBDqpxedU7nyspweR8RdjAKJi7RTdkeZM6IxPUu/nyVW9I8joHFMol48/rdn7gokBWAwkEeaWYCH4jBZ61Bm/lWqHAejBZO1Nnteb2LDF8YWn+VX73BvRvFk6pRBIv5HvJByhx2cYlErRd9xJf5+1I/T0S0OuwCzjNO6LeZ3b0uCcuh1varcMpLfj8Xo6qt1Ie/K8tkm35UnIb46n+8=
spamdiagnosticoutput: 1:99
spamdiagnosticmetadata: NSPM
Content-Type: text/plain; charset="iso-8859-1"
MIME-Version: 1.0
X-OriginatorOrg: amd.com
X-MS-Exchange-CrossTenant-Network-Message-Id: 
 75c276ae-8c8e-4fcc-71a9-08d6497bc43a
X-MS-Exchange-CrossTenant-originalarrivaltime: 13 Nov 2018 15:22:04.5067
 (UTC)
X-MS-Exchange-CrossTenant-fromentityheader: Hosted
X-MS-Exchange-CrossTenant-id: 3dd8961f-e488-4e60-8e11-a82d994e183d
X-MS-Exchange-Transport-CrossTenantHeadersStamped: DM5PR1201MB0059
Sender: kvm-owner@vger.kernel.org
Precedence: bulk
List-ID: <kvm.vger.kernel.org>
X-Mailing-List: kvm@vger.kernel.org
X-Virus-Scanned: ClamAV using ClamSMTP

Currently, the nested guest's PAUSE intercept intentions are not being
honored.  Instead, since the L0 hypervisor's pause_filter_count and
pause_filter_thresh values are still in place, these values are used
instead of those programmed in the VMCB by the L1 hypervisor.

To honor the desired PAUSE intercept support of the L1 hypervisor, the L0
hypervisor must use the PAUSE filtering fields of the L1 hypervisor. This
requires saving and restoring of both the L0 and L1 hypervisor's PAUSE
filtering fields.

Signed-off-by: William Tambe <william.tambe@amd.com>
---
 arch/x86/kvm/svm.c | 12 ++++++++++++
 1 file changed, 12 insertions(+)

diff --git a/arch/x86/kvm/svm.c b/arch/x86/kvm/svm.c
index 0e21ccc46792..279a3e800ac1 100644
--- a/arch/x86/kvm/svm.c
+++ b/arch/x86/kvm/svm.c
@@ -3261,6 +3261,8 @@ static inline void copy_vmcb_control_area(struct vmcb *dst_vmcb, struct vmcb *fr
 	dst->event_inj_err        = from->event_inj_err;
 	dst->nested_cr3           = from->nested_cr3;
 	dst->virt_ext              = from->virt_ext;
+	dst->pause_filter_count   = from->pause_filter_count;
+	dst->pause_filter_thresh  = from->pause_filter_thresh;
 }
 
 static int nested_svm_vmexit(struct vcpu_svm *svm)
@@ -3339,6 +3341,11 @@ static int nested_svm_vmexit(struct vcpu_svm *svm)
 	nested_vmcb->control.event_inj         = 0;
 	nested_vmcb->control.event_inj_err     = 0;
 
+	nested_vmcb->control.pause_filter_count =
+		svm->vmcb->control.pause_filter_count;
+	nested_vmcb->control.pause_filter_thresh =
+		svm->vmcb->control.pause_filter_thresh;
+
 	/* We always set V_INTR_MASKING and remember the old value in hflags */
 	if (!(svm->vcpu.arch.hflags & HF_VINTR_MASK))
 		nested_vmcb->control.int_ctl &= ~V_INTR_MASKING_MASK;
@@ -3516,6 +3523,11 @@ static void enter_svm_guest_mode(struct vcpu_svm *svm, u64 vmcb_gpa,
 	svm->vmcb->control.event_inj = nested_vmcb->control.event_inj;
 	svm->vmcb->control.event_inj_err = nested_vmcb->control.event_inj_err;
 
+	svm->vmcb->control.pause_filter_count =
+		nested_vmcb->control.pause_filter_count;
+	svm->vmcb->control.pause_filter_thresh =
+		nested_vmcb->control.pause_filter_thresh;
+
 	nested_svm_unmap(page);
 
 	/* Enter Guest-Mode */
