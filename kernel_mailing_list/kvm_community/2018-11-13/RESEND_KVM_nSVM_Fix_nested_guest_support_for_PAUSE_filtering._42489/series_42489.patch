From patchwork Tue Nov 13 16:51:20 2018
Content-Type: text/plain; charset="utf-8"
MIME-Version: 1.0
Content-Transfer-Encoding: 7bit
X-Patchwork-Submitter: "Tambe, William" <WILLIAM.TAMBE@amd.com>
X-Patchwork-Id: 10681111
Return-Path: <kvm-owner@kernel.org>
Received: from mail.wl.linuxfoundation.org (pdx-wl-mail.web.codeaurora.org
 [172.30.200.125])
	by pdx-korg-patchwork-2.web.codeaurora.org (Postfix) with ESMTP id 5044A139B
	for <patchwork-kvm@patchwork.kernel.org>;
 Tue, 13 Nov 2018 16:51:29 +0000 (UTC)
Received: from mail.wl.linuxfoundation.org (localhost [127.0.0.1])
	by mail.wl.linuxfoundation.org (Postfix) with ESMTP id 410402B0CB
	for <patchwork-kvm@patchwork.kernel.org>;
 Tue, 13 Nov 2018 16:51:29 +0000 (UTC)
Received: by mail.wl.linuxfoundation.org (Postfix, from userid 486)
	id 3EAB02B0D1; Tue, 13 Nov 2018 16:51:29 +0000 (UTC)
X-Spam-Checker-Version: SpamAssassin 3.3.1 (2010-03-16) on
	pdx-wl-mail.web.codeaurora.org
X-Spam-Level: 
X-Spam-Status: No, score=-7.9 required=2.0 tests=BAYES_00,DKIM_SIGNED,
	DKIM_VALID,MAILING_LIST_MULTI,RCVD_IN_DNSWL_HI autolearn=ham version=3.3.1
Received: from vger.kernel.org (vger.kernel.org [209.132.180.67])
	by mail.wl.linuxfoundation.org (Postfix) with ESMTP id 6E1932B074
	for <patchwork-kvm@patchwork.kernel.org>;
 Tue, 13 Nov 2018 16:51:28 +0000 (UTC)
Received: (majordomo@vger.kernel.org) by vger.kernel.org via listexpand
        id S1731051AbeKNCuU (ORCPT
        <rfc822;patchwork-kvm@patchwork.kernel.org>);
        Tue, 13 Nov 2018 21:50:20 -0500
Received: from mail-eopbgr800073.outbound.protection.outlook.com
 ([40.107.80.73]:62188
        "EHLO NAM03-DM3-obe.outbound.protection.outlook.com"
        rhost-flags-OK-OK-OK-FAIL) by vger.kernel.org with ESMTP
        id S1726517AbeKNCuU (ORCPT <rfc822;kvm@vger.kernel.org>);
        Tue, 13 Nov 2018 21:50:20 -0500
DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/relaxed;
 d=amdcloud.onmicrosoft.com; s=selector1-amd-com;
 h=From:Date:Subject:Message-ID:Content-Type:MIME-Version:X-MS-Exchange-SenderADCheck;
 bh=90AAYln/xoF/jogPXvO0ieSyLq7BBxP1WD1NUYS1OmI=;
 b=DWZ+PFWoeNuluCiQEIqLXVjJo8IGbI0SgC1yzjDG90qSl7AdZicGKpNzYeI2vCFZwB9b2+PxHCzeDURzFJD/54DEgYZwE0KLMPbvhrAIECJkgJwupNIj6HtVnJlfNgXuGNDlO9hJYcgbq1hzHshLhAr4ggooDyA1P80LFYZ9OeE=
Received: from DM5PR1201MB0091.namprd12.prod.outlook.com (10.174.106.21) by
 DM5PR1201MB0220.namprd12.prod.outlook.com (10.174.107.20) with Microsoft SMTP
 Server (version=TLS1_2, cipher=TLS_ECDHE_RSA_WITH_AES_256_GCM_SHA384) id
 15.20.1294.30; Tue, 13 Nov 2018 16:51:21 +0000
Received: from DM5PR1201MB0091.namprd12.prod.outlook.com
 ([fe80::b5d0:7d79:342e:83a5]) by DM5PR1201MB0091.namprd12.prod.outlook.com
 ([fe80::b5d0:7d79:342e:83a5%3]) with mapi id 15.20.1294.045; Tue, 13 Nov 2018
 16:51:21 +0000
From: "Tambe, William" <William.Tambe@amd.com>
To: "kvm@vger.kernel.org" <kvm@vger.kernel.org>
CC: "pbonzini@redhat.com" <pbonzini@redhat.com>,
        "joro@8bytes.org" <joro@8bytes.org>,
        "rkrcmar@redhat.com" <rkrcmar@redhat.com>
Subject: [PATCH RESEND] KVM: nSVM: Fix nested guest support for PAUSE
 filtering.
Thread-Topic: [PATCH RESEND] KVM: nSVM: Fix nested guest support for PAUSE
 filtering.
Thread-Index: AQHUe3EaetZrsk8NREK3LDYusUr9yQ==
Date: Tue, 13 Nov 2018 16:51:20 +0000
Message-ID: <20181113165100.24430-1-william.tambe@amd.com>
Accept-Language: en-US
Content-Language: en-US
X-MS-Has-Attach: 
X-MS-TNEF-Correlator: 
x-clientproxiedby: SN6PR1501CA0003.namprd15.prod.outlook.com
 (2603:10b6:805::16) To DM5PR1201MB0091.namprd12.prod.outlook.com
 (2603:10b6:4:54::21)
authentication-results: spf=none (sender IP is )
 smtp.mailfrom=William.Tambe@amd.com;
x-ms-exchange-messagesentrepresentingtype: 1
x-originating-ip: [165.204.77.1]
x-ms-publictraffictype: Email
x-microsoft-exchange-diagnostics: 
 1;DM5PR1201MB0220;20:875gN+ZwwoeoK0uybJGOGUn8K/rVCO7ePBbMJr2J44T/9/rraLAgE06L+mLly7sPq2HxsVdDZwNuiNqwL6YIB23wMMghsFDtgCCg6Yzal4dqeCH6ExvaTI70scY/nJ/O5+RxzvemJIL69X/xnp4wqSHqFNZUho+s5k0sZq+wAboqC5igQagZvBq9u0lq2YmZZ+OidbhXgtVY1gnMY9w6z8f25588n42Bme3ixTD/h9XvGmMvHKgzQg6G+B7fKXGn
x-ms-office365-filtering-correlation-id: e7deea27-1e0e-407c-9765-08d649883cc4
x-ms-office365-filtering-ht: Tenant
x-microsoft-antispam: 
 BCL:0;PCL:0;RULEID:(2390060)(7020095)(4652040)(8989299)(4534185)(4627221)(201703031133081)(201702281549075)(8990200)(5600074)(711020)(4618075)(2017052603328)(7153060)(7193020);SRVR:DM5PR1201MB0220;
x-ms-traffictypediagnostic: DM5PR1201MB0220:
x-microsoft-antispam-prvs: 
 <DM5PR1201MB02204554FA2424F17F0BE77EF7C20@DM5PR1201MB0220.namprd12.prod.outlook.com>
x-exchange-antispam-report-test: UriScan:(767451399110);
x-ms-exchange-senderadcheck: 1
x-exchange-antispam-report-cfa-test: 
 BCL:0;PCL:0;RULEID:(8211001083)(6040522)(2401047)(5005006)(8121501046)(823302103)(3231406)(944501410)(52105112)(10201501046)(93006095)(93001095)(3002001)(6055026)(148016)(149066)(150057)(6041310)(20161123558120)(20161123562045)(20161123560045)(201703131423095)(201702281528075)(20161123555045)(201703061421075)(201703061406153)(20161123564045)(201708071742011)(7699051)(76991095);SRVR:DM5PR1201MB0220;BCL:0;PCL:0;RULEID:;SRVR:DM5PR1201MB0220;
x-forefront-prvs: 085551F5A8
x-forefront-antispam-report: 
 SFV:NSPM;SFS:(10009020)(346002)(136003)(39860400002)(396003)(366004)(376002)(189003)(199004)(1076002)(3846002)(6116002)(52116002)(97736004)(2616005)(476003)(316002)(54906003)(486006)(186003)(26005)(386003)(2900100001)(6506007)(102836004)(105586002)(2351001)(99286004)(66066001)(106356001)(86362001)(2906002)(7736002)(71190400001)(305945005)(71200400001)(256004)(68736007)(6916009)(72206003)(14454004)(8936002)(5660300001)(5640700003)(6486002)(36756003)(2501003)(6436002)(81166006)(1730700003)(8676002)(81156014)(4326008)(478600001)(53936002)(6512007)(25786009);DIR:OUT;SFP:1101;SCL:1;SRVR:DM5PR1201MB0220;H:DM5PR1201MB0091.namprd12.prod.outlook.com;FPR:;SPF:None;LANG:en;PTR:InfoNoRecords;MX:1;A:1;
received-spf: None (protection.outlook.com: amd.com does not designate
 permitted sender hosts)
x-microsoft-antispam-message-info: 
 e0k1t2M916reL1vS+Dv5oVQwzV6Eo7faT41sh18II37B4+pZiQo75DONct/tURB4bd9sUSwICDR5m3lDFJPy+6UYj6z0OTEKzYJijNYAkqOT6q8pbsbAJdx0uakn1L4ffvh4odzkyjV3kXQ+O2WB5q5wFOwOKU2oF2XTScsw7j/ntbAsgY4UMLnM2LKt921dFFXQMB32QnmAWdrKVxL1krnRkbTqbQvEm2t9vGiR+wC87OX7y+I/PMWzc6Jgtrej0OoLYB+J5W2cij9tIoZdvq235xJ8FJATlMTytAhZN9CKUJ+QfAsYexTqnOwTdI1WFkGoXaRcPyOrPNlpQxBuAPcL1E0a17dsSmT+sBeyr5I=
spamdiagnosticoutput: 1:99
spamdiagnosticmetadata: NSPM
Content-Type: text/plain; charset="iso-8859-1"
MIME-Version: 1.0
X-OriginatorOrg: amd.com
X-MS-Exchange-CrossTenant-Network-Message-Id: 
 e7deea27-1e0e-407c-9765-08d649883cc4
X-MS-Exchange-CrossTenant-originalarrivaltime: 13 Nov 2018 16:51:20.9181
 (UTC)
X-MS-Exchange-CrossTenant-fromentityheader: Hosted
X-MS-Exchange-CrossTenant-id: 3dd8961f-e488-4e60-8e11-a82d994e183d
X-MS-Exchange-Transport-CrossTenantHeadersStamped: DM5PR1201MB0220
Sender: kvm-owner@vger.kernel.org
Precedence: bulk
List-ID: <kvm.vger.kernel.org>
X-Mailing-List: kvm@vger.kernel.org
X-Virus-Scanned: ClamAV using ClamSMTP

Currently, the nested guest's PAUSE intercept intentions are not being
honored.  Instead, since the L0 hypervisor's pause_filter_count and
pause_filter_thresh values are still in place, these values are used
instead of those programmed in the VMCB by the L1 hypervisor.

To honor the desired PAUSE intercept support of the L1 hypervisor, the L0
hypervisor must use the PAUSE filtering fields of the L1 hypervisor. This
requires saving and restoring of both the L0 and L1 hypervisor's PAUSE
filtering fields.

Signed-off-by: William Tambe <william.tambe@amd.com>
---
 arch/x86/kvm/svm.c | 12 ++++++++++++
 1 file changed, 12 insertions(+)

diff --git a/arch/x86/kvm/svm.c b/arch/x86/kvm/svm.c
index 0e21ccc46792..279a3e800ac1 100644
--- a/arch/x86/kvm/svm.c
+++ b/arch/x86/kvm/svm.c
@@ -3261,6 +3261,8 @@ static inline void copy_vmcb_control_area(struct vmcb *dst_vmcb, struct vmcb *fr
 	dst->event_inj_err        = from->event_inj_err;
 	dst->nested_cr3           = from->nested_cr3;
 	dst->virt_ext              = from->virt_ext;
+	dst->pause_filter_count   = from->pause_filter_count;
+	dst->pause_filter_thresh  = from->pause_filter_thresh;
 }
 
 static int nested_svm_vmexit(struct vcpu_svm *svm)
@@ -3339,6 +3341,11 @@ static int nested_svm_vmexit(struct vcpu_svm *svm)
 	nested_vmcb->control.event_inj         = 0;
 	nested_vmcb->control.event_inj_err     = 0;
 
+	nested_vmcb->control.pause_filter_count =
+		svm->vmcb->control.pause_filter_count;
+	nested_vmcb->control.pause_filter_thresh =
+		svm->vmcb->control.pause_filter_thresh;
+
 	/* We always set V_INTR_MASKING and remember the old value in hflags */
 	if (!(svm->vcpu.arch.hflags & HF_VINTR_MASK))
 		nested_vmcb->control.int_ctl &= ~V_INTR_MASKING_MASK;
@@ -3516,6 +3523,11 @@ static void enter_svm_guest_mode(struct vcpu_svm *svm, u64 vmcb_gpa,
 	svm->vmcb->control.event_inj = nested_vmcb->control.event_inj;
 	svm->vmcb->control.event_inj_err = nested_vmcb->control.event_inj_err;
 
+	svm->vmcb->control.pause_filter_count =
+		nested_vmcb->control.pause_filter_count;
+	svm->vmcb->control.pause_filter_thresh =
+		nested_vmcb->control.pause_filter_thresh;
+
 	nested_svm_unmap(page);
 
 	/* Enter Guest-Mode */
