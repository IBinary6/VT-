From patchwork Fri Sep 28 12:45:16 2018
Content-Type: text/plain; charset="utf-8"
MIME-Version: 1.0
Content-Transfer-Encoding: 7bit
X-Patchwork-Submitter: Tianyu Lan <Tianyu.Lan@microsoft.com>
X-Patchwork-Id: 10619891
Return-Path: <kvm-owner@kernel.org>
Received: from mail.wl.linuxfoundation.org (pdx-wl-mail.web.codeaurora.org
 [172.30.200.125])
	by pdx-korg-patchwork-2.web.codeaurora.org (Postfix) with ESMTP id 9F947174A
	for <patchwork-kvm@patchwork.kernel.org>;
 Fri, 28 Sep 2018 12:45:28 +0000 (UTC)
Received: from mail.wl.linuxfoundation.org (localhost [127.0.0.1])
	by mail.wl.linuxfoundation.org (Postfix) with ESMTP id 9095E2B19B
	for <patchwork-kvm@patchwork.kernel.org>;
 Fri, 28 Sep 2018 12:45:28 +0000 (UTC)
Received: by mail.wl.linuxfoundation.org (Postfix, from userid 486)
	id 84ACE2B209; Fri, 28 Sep 2018 12:45:28 +0000 (UTC)
X-Spam-Checker-Version: SpamAssassin 3.3.1 (2010-03-16) on
	pdx-wl-mail.web.codeaurora.org
X-Spam-Level: 
X-Spam-Status: No, score=-8.0 required=2.0 tests=BAYES_00,DKIM_SIGNED,
	DKIM_VALID,DKIM_VALID_AU,MAILING_LIST_MULTI,RCVD_IN_DNSWL_HI autolearn=ham
	version=3.3.1
Received: from vger.kernel.org (vger.kernel.org [209.132.180.67])
	by mail.wl.linuxfoundation.org (Postfix) with ESMTP id 39F082B19B
	for <patchwork-kvm@patchwork.kernel.org>;
 Fri, 28 Sep 2018 12:45:28 +0000 (UTC)
Received: (majordomo@vger.kernel.org) by vger.kernel.org via listexpand
        id S1729016AbeI1TI6 (ORCPT
        <rfc822;patchwork-kvm@patchwork.kernel.org>);
        Fri, 28 Sep 2018 15:08:58 -0400
Received: from mail-sg2apc01on0111.outbound.protection.outlook.com
 ([104.47.125.111]:28864
        "EHLO APC01-SG2-obe.outbound.protection.outlook.com"
        rhost-flags-OK-OK-OK-FAIL) by vger.kernel.org with ESMTP
        id S1726068AbeI1TI5 (ORCPT <rfc822;kvm@vger.kernel.org>);
        Fri, 28 Sep 2018 15:08:57 -0400
DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/relaxed; d=microsoft.com;
 s=selector1;
 h=From:Date:Subject:Message-ID:Content-Type:MIME-Version:X-MS-Exchange-SenderADCheck;
 bh=5YqA7+Drrzp54XA8zJ9l8CgS1JW5oN8XeVuWtv/kxY0=;
 b=luJfNfnbP8iZpe+emKI9q3k6CzEfBIF5DcNJyHlSvcBeGdNQ/+C1Vi4+RXhcK67h4gTk0MXn19mE/7fpjOg0r3ChpUBjEZu3y2DHJP0nPEltuxVs3FM9epRdYMVMZtxO3fqfDjQD9NQ/eirwDBxdK2MgAJRslZs2gODYwDZLLkA=
Received: from HK0P153MB0129.APCP153.PROD.OUTLOOK.COM (52.133.156.18) by
 HK0P153MB0179.APCP153.PROD.OUTLOOK.COM (52.133.212.17) with Microsoft SMTP
 Server (version=TLS1_2, cipher=TLS_ECDHE_RSA_WITH_AES_256_GCM_SHA384) id
 15.20.1207.3; Fri, 28 Sep 2018 12:45:17 +0000
Received: from HK0P153MB0129.APCP153.PROD.OUTLOOK.COM
 ([fe80::8584:ad93:130a:6267]) by HK0P153MB0129.APCP153.PROD.OUTLOOK.COM
 ([fe80::8584:ad93:130a:6267%3]) with mapi id 15.20.1207.011; Fri, 28 Sep 2018
 12:45:17 +0000
From: Tianyu Lan <Tianyu.Lan@microsoft.com>
CC: Tianyu Lan <Tianyu.Lan@microsoft.com>,
        "pbonzini@redhat.com" <pbonzini@redhat.com>,
        "rkrcmar@redhat.com" <rkrcmar@redhat.com>,
        "tglx@linutronix.de" <tglx@linutronix.de>,
        "mingo@redhat.com" <mingo@redhat.com>,
        "hpa@zytor.com" <hpa@zytor.com>, "x86@kernel.org" <x86@kernel.org>,
        "kvm@vger.kernel.org" <kvm@vger.kernel.org>,
        "linux-kernel@vger.kernel.org" <linux-kernel@vger.kernel.org>
Subject: [PATCH] KVM/VMX: Remve unused function is_external_interrupt().
Thread-Topic: [PATCH] KVM/VMX: Remve unused function is_external_interrupt().
Thread-Index: AQHUVykbq0ivsPwgo06IrxynQUenpQ==
Date: Fri, 28 Sep 2018 12:45:16 +0000
Message-ID: <20180928124449.11493-1-Tianyu.Lan@microsoft.com>
Accept-Language: en-US
Content-Language: en-US
X-MS-Has-Attach: 
X-MS-TNEF-Correlator: 
authentication-results: spf=none (sender IP is )
 smtp.mailfrom=Tianyu.Lan@microsoft.com;
x-originating-ip: [52.168.54.252]
x-ms-publictraffictype: Email
x-microsoft-exchange-diagnostics: 
 1;HK0P153MB0179;6:rcJQXU25nRXKB9+YD+p377NbJrlN2mcR6c8aC4CN0Qo/EfyIx1mBVjy9XOxqhNTc0Hp+wm7cBO11TesDzUucwNu3K695KqY2lM9nQlEo720rHVjK69AEElns9TORDUeuCPaOypF+bnkuoKRnU68YeDSm25AeJWiUhyyIp9jfnrIM7mHRovW2z1sJlzneKO7WW1ShZpFD9gkvHOTdkJEVRPQykFsqLv+QEcp0bTIMSo4qXuSqVqr0B6v/4kOYa984LqONB5HDoioAeyceWOAt7h4GBuopRDc4bmsTcET/ADxREq01gyI7Vv2+IziacqsY4+Tu05TpRx7/39CUeHj2jSRBeWMnQfvMl096JWcfK09vhAQ9nkzQXosdHg2M2EmphDqCWOFO3qCdX1xZD4eX7cR/QfoQZ5e7Cx61vTbFeHSQGkbnPCef4qYmmWjkj8cgAZrVe9VqU5j7XLhA6dK+iw==;5:SoqOIuFJzmTRv86OF37yzadK/KMvH1wq9ybJhe0rP15cgh2TBFuHMDr/yddtJDgJJG7VDFAyUd283+Lvsn0tSAnSfszXfYNlsuIeM43QnvVd1nJsUBYD7BUxND+QqRHXajGM8+iuEzGG2ZFOXTPKQl3EpvPyetqxnZ+578YwJFg=;7:qfAOOHbEb5wFl3fp0XuAuJVG0Uz8aoly0BVGARV/VBXZAlY8obCAtXpcXGDu7FOsG9EG33lTdJm4/K3aeRIdsbJDx9weegZE5oJ/6bapN7etMOD2WqrjEtjrD5/gWKW75J2kZdOyF1SaDXExTH8E9vHmEUzXnRzkY1cWcOHtTQmiU9bJv2UyCTTOb3NFA+ntxiKXp186xEYuEuRivbzsBPOf6Wkk3VX6YfjCH5gfsJ4m8SmGhYf1kCBQ7hxtsFjg
x-ms-office365-filtering-correlation-id: 6e4ca83c-c6ea-416c-1ced-08d625403e41
x-ms-office365-filtering-ht: Tenant
x-microsoft-antispam: 
 BCL:0;PCL:0;RULEID:(7020095)(4652040)(8989299)(5600074)(711020)(4618075)(2017052603328)(7193020);SRVR:HK0P153MB0179;
x-ms-traffictypediagnostic: HK0P153MB0179:
x-microsoft-antispam-prvs: 
 <HK0P153MB01798DABF4C40C661E88EA3792EC0@HK0P153MB0179.APCP153.PROD.OUTLOOK.COM>
x-exchange-antispam-report-test: UriScan:(28532068793085)(89211679590171);
x-ms-exchange-senderadcheck: 1
x-exchange-antispam-report-cfa-test: 
 BCL:0;PCL:0;RULEID:(8211001083)(6040522)(2401047)(8121501046)(5005006)(3002001)(10201501046)(93006095)(93001095)(3231355)(944501410)(52105095)(6055026)(149066)(150057)(6041310)(20161123558120)(20161123562045)(20161123560045)(201703131423095)(201702281528075)(20161123555045)(201703061421075)(201703061406153)(20161123564045)(201708071742011)(7699051);SRVR:HK0P153MB0179;BCL:0;PCL:0;RULEID:;SRVR:HK0P153MB0179;
x-forefront-prvs: 0809C12563
x-forefront-antispam-report: 
 SFV:NSPM;SFS:(10019020)(39860400002)(136003)(396003)(376002)(366004)(346002)(199004)(189003)(1671002)(256004)(105586002)(106356001)(2900100001)(5660300001)(14454004)(86612001)(86362001)(2906002)(10090500001)(10290500003)(478600001)(72206003)(59246006)(7736002)(305945005)(3846002)(6116002)(1076002)(68736007)(102836004)(6512007)(71200400001)(26005)(1857600001)(71190400001)(476003)(2616005)(486006)(109986005)(4326008)(6486002)(8676002)(25786009)(22452003)(6506007)(81166006)(6436002)(54906003)(99286004)(97736004)(81156014)(5250100002)(34290500001)(8936002)(36756003)(316002)(66066001)(53936002);DIR:OUT;SFP:1102;SCL:1;SRVR:HK0P153MB0179;H:HK0P153MB0129.APCP153.PROD.OUTLOOK.COM;FPR:;SPF:None;LANG:en;PTR:InfoNoRecords;A:1;MX:1;
received-spf: None (protection.outlook.com: microsoft.com does not designate
 permitted sender hosts)
x-microsoft-antispam-message-info: 
 Ikr/6nrbsIAP1LlV9oTwoenG33fmA3gIcn94sSi7iKj2d1qfmdbOk8wXPLXWh1j0llTmyD+fR0wjwBtKqifwCPIG0WMWMJaiKDBEjECT4eklLp9rjHITV23e0ex7nRUMYqpdVE605pOkAmiArG/b6+PzpCot0I9H05Ik/6g4Xfs5KsGjaGOgRekVtkDCeIsEHGP955vzDbjGvIrXOoiWmyLo2QrmT2bUMZsRmTpT2x0EciwkKSEPq2lxrtN28RJKpNefY6pVv/XDdsTk6JeRW4Hh4GB11QkKa6gSdZIgpWvz1JwPmuMedtfYI+jmDb3HCu9Nr9AjDJdTtAr7Ga7DAEzMLvlmzoH8bIuRWSojfSY=
spamdiagnosticoutput: 1:99
spamdiagnosticmetadata: NSPM
Content-Type: text/plain; charset="iso-8859-1"
MIME-Version: 1.0
X-OriginatorOrg: microsoft.com
X-MS-Exchange-CrossTenant-Network-Message-Id: 
 6e4ca83c-c6ea-416c-1ced-08d625403e41
X-MS-Exchange-CrossTenant-originalarrivaltime: 28 Sep 2018 12:45:16.7619
 (UTC)
X-MS-Exchange-CrossTenant-fromentityheader: Hosted
X-MS-Exchange-CrossTenant-id: 72f988bf-86f1-41af-91ab-2d7cd011db47
X-MS-Exchange-Transport-CrossTenantHeadersStamped: HK0P153MB0179
To: unlisted-recipients:; (no To-header on input)
Sender: kvm-owner@vger.kernel.org
Precedence: bulk
List-ID: <kvm.vger.kernel.org>
X-Mailing-List: kvm@vger.kernel.org
X-Virus-Scanned: ClamAV using ClamSMTP

is_external_interrupt() is not used now and so remove it.

Signed-off-by: Lan Tianyu <Tianyu.Lan@microsoft.com>
---
 arch/x86/kvm/vmx.c | 6 ------
 1 file changed, 6 deletions(-)

diff --git a/arch/x86/kvm/vmx.c b/arch/x86/kvm/vmx.c
index 70e1f916bfc9..619307b3e6bb 100644
--- a/arch/x86/kvm/vmx.c
+++ b/arch/x86/kvm/vmx.c
@@ -1667,12 +1667,6 @@ static inline bool is_gp_fault(u32 intr_info)
 	return is_exception_n(intr_info, GP_VECTOR);
 }
 
-static inline bool is_external_interrupt(u32 intr_info)
-{
-	return (intr_info & (INTR_INFO_INTR_TYPE_MASK | INTR_INFO_VALID_MASK))
-		== (INTR_TYPE_EXT_INTR | INTR_INFO_VALID_MASK);
-}
-
 static inline bool is_machine_check(u32 intr_info)
 {
 	return (intr_info & (INTR_INFO_INTR_TYPE_MASK | INTR_INFO_VECTOR_MASK |
