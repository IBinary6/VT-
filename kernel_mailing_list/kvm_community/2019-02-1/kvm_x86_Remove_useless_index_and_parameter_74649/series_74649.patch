From patchwork Fri Feb  1 11:14:16 2019
Content-Type: text/plain; charset="utf-8"
MIME-Version: 1.0
Content-Transfer-Encoding: 7bit
X-Patchwork-Submitter: "Liu, Jing2" <jing2.liu@linux.intel.com>
X-Patchwork-Id: 10792503
Return-Path: <kvm-owner@kernel.org>
Received: from mail.wl.linuxfoundation.org (pdx-wl-mail.web.codeaurora.org
 [172.30.200.125])
	by pdx-korg-patchwork-2.web.codeaurora.org (Postfix) with ESMTP id 4A1BB13BF
	for <patchwork-kvm@patchwork.kernel.org>;
 Fri,  1 Feb 2019 11:09:36 +0000 (UTC)
Received: from mail.wl.linuxfoundation.org (localhost [127.0.0.1])
	by mail.wl.linuxfoundation.org (Postfix) with ESMTP id 3A63A317BD
	for <patchwork-kvm@patchwork.kernel.org>;
 Fri,  1 Feb 2019 11:09:36 +0000 (UTC)
Received: by mail.wl.linuxfoundation.org (Postfix, from userid 486)
	id 2E89C317CF; Fri,  1 Feb 2019 11:09:36 +0000 (UTC)
X-Spam-Checker-Version: SpamAssassin 3.3.1 (2010-03-16) on
	pdx-wl-mail.web.codeaurora.org
X-Spam-Level: 
X-Spam-Status: No, score=-7.9 required=2.0 tests=BAYES_00,MAILING_LIST_MULTI,
	RCVD_IN_DNSWL_HI autolearn=ham version=3.3.1
Received: from vger.kernel.org (vger.kernel.org [209.132.180.67])
	by mail.wl.linuxfoundation.org (Postfix) with ESMTP id B7620317BD
	for <patchwork-kvm@patchwork.kernel.org>;
 Fri,  1 Feb 2019 11:09:35 +0000 (UTC)
Received: (majordomo@vger.kernel.org) by vger.kernel.org via listexpand
        id S1728053AbfBALJe (ORCPT
        <rfc822;patchwork-kvm@patchwork.kernel.org>);
        Fri, 1 Feb 2019 06:09:34 -0500
Received: from mga18.intel.com ([134.134.136.126]:8509 "EHLO mga18.intel.com"
        rhost-flags-OK-OK-OK-OK) by vger.kernel.org with ESMTP
        id S1726206AbfBALJe (ORCPT <rfc822;kvm@vger.kernel.org>);
        Fri, 1 Feb 2019 06:09:34 -0500
X-Amp-Result: SKIPPED(no attachment in message)
X-Amp-File-Uploaded: False
Received: from orsmga003.jf.intel.com ([10.7.209.27])
  by orsmga106.jf.intel.com with ESMTP/TLS/DHE-RSA-AES256-GCM-SHA384;
 01 Feb 2019 03:09:33 -0800
X-ExtLoop1: 1
X-IronPort-AV: E=Sophos;i="5.56,548,1539673200";
   d="scan'208";a="123139001"
Received: from liujing-dell.bj.intel.com ([10.238.145.49])
  by orsmga003.jf.intel.com with ESMTP; 01 Feb 2019 03:09:32 -0800
From: Jing Liu <jing2.liu@linux.intel.com>
To: kvm@vger.kernel.org
Cc: jing2.liu@linux.intel.com
Subject: [PATCH] kvm: x86: Remove useless index and parameter
Date: Fri,  1 Feb 2019 19:14:16 +0800
Message-Id: <1549019656-29795-1-git-send-email-jing2.liu@linux.intel.com>
X-Mailer: git-send-email 1.8.3.1
Sender: kvm-owner@vger.kernel.org
Precedence: bulk
List-ID: <kvm.vger.kernel.org>
X-Mailing-List: kvm@vger.kernel.org
X-Virus-Scanned: ClamAV using ClamSMTP

The kvm_cpuid_param structure is designed for getting cpu level, with ECX input
is zero. While it is useless and wasteful to use a field in the structure for this.
Just remove the field and use 0 directly.

Also, the parameter in function is_centaur_cpu() is also useless.

Number of a 64 bit build:

          text    data     bss     dec     hex filename
before:   7529     112       0    7641    1dd9 ./arch/x86/kvm/cpuid.o
after:    7428     112       0    7540    1d74 ./arch/x86/kvm/cpuid.o

Signed-off-by: Jing Liu <jing2.liu@linux.intel.com>
Signed-off-by: Sean Christopherson <sean.j.christopherson@intel.com>
---
 arch/x86/kvm/cpuid.c | 11 +++++------
 1 file changed, 5 insertions(+), 6 deletions(-)

diff --git a/arch/x86/kvm/cpuid.c b/arch/x86/kvm/cpuid.c
index bbffa6c..389aaf7 100644
--- a/arch/x86/kvm/cpuid.c
+++ b/arch/x86/kvm/cpuid.c
@@ -741,12 +741,11 @@ static int do_cpuid_ent(struct kvm_cpuid_entry2 *entry, u32 func,
 
 struct kvm_cpuid_param {
 	u32 func;
-	u32 idx;
 	bool has_leaf_count;
-	bool (*qualifier)(const struct kvm_cpuid_param *param);
+	bool (*qualifier)(void);
 };
 
-static bool is_centaur_cpu(const struct kvm_cpuid_param *param)
+static bool is_centaur_cpu(void)
 {
 	return boot_cpu_data.x86_vendor == X86_VENDOR_CENTAUR;
 }
@@ -811,10 +810,10 @@ int kvm_dev_ioctl_get_cpuid(struct kvm_cpuid2 *cpuid,
 	for (i = 0; i < ARRAY_SIZE(param); i++) {
 		const struct kvm_cpuid_param *ent = &param[i];
 
-		if (ent->qualifier && !ent->qualifier(ent))
+		if (ent->qualifier && !ent->qualifier())
 			continue;
 
-		r = do_cpuid_ent(&cpuid_entries[nent], ent->func, ent->idx,
+		r = do_cpuid_ent(&cpuid_entries[nent], ent->func, 0,
 				&nent, cpuid->nent, type);
 
 		if (r)
@@ -825,7 +824,7 @@ int kvm_dev_ioctl_get_cpuid(struct kvm_cpuid2 *cpuid,
 
 		limit = cpuid_entries[nent - 1].eax;
 		for (func = ent->func + 1; func <= limit && nent < cpuid->nent && r == 0; ++func)
-			r = do_cpuid_ent(&cpuid_entries[nent], func, ent->idx,
+			r = do_cpuid_ent(&cpuid_entries[nent], func, 0,
 				     &nent, cpuid->nent, type);
 
 		if (r)
