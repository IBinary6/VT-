From patchwork Fri Sep 14 09:57:57 2018
Content-Type: text/plain; charset="utf-8"
MIME-Version: 1.0
Content-Transfer-Encoding: 7bit
X-Patchwork-Submitter: Paul Mackerras <paulus@ozlabs.org>
X-Patchwork-Id: 10600597
Return-Path: <kvm-owner@kernel.org>
Received: from mail.wl.linuxfoundation.org (pdx-wl-mail.web.codeaurora.org
 [172.30.200.125])
	by pdx-korg-patchwork-2.web.codeaurora.org (Postfix) with ESMTP id 9E67B933
	for <patchwork-kvm@patchwork.kernel.org>;
 Fri, 14 Sep 2018 09:58:04 +0000 (UTC)
Received: from mail.wl.linuxfoundation.org (localhost [127.0.0.1])
	by mail.wl.linuxfoundation.org (Postfix) with ESMTP id 7A1212AA16
	for <patchwork-kvm@patchwork.kernel.org>;
 Fri, 14 Sep 2018 09:58:04 +0000 (UTC)
Received: by mail.wl.linuxfoundation.org (Postfix, from userid 486)
	id 6E3072AADB; Fri, 14 Sep 2018 09:58:04 +0000 (UTC)
X-Spam-Checker-Version: SpamAssassin 3.3.1 (2010-03-16) on
	pdx-wl-mail.web.codeaurora.org
X-Spam-Level: 
X-Spam-Status: No, score=-8.0 required=2.0 tests=BAYES_00,DKIM_SIGNED,
	DKIM_VALID,DKIM_VALID_AU,MAILING_LIST_MULTI,RCVD_IN_DNSWL_HI autolearn=ham
	version=3.3.1
Received: from vger.kernel.org (vger.kernel.org [209.132.180.67])
	by mail.wl.linuxfoundation.org (Postfix) with ESMTP id BB8B82AA16
	for <patchwork-kvm@patchwork.kernel.org>;
 Fri, 14 Sep 2018 09:58:03 +0000 (UTC)
Received: (majordomo@vger.kernel.org) by vger.kernel.org via listexpand
        id S1728031AbeINPLr (ORCPT
        <rfc822;patchwork-kvm@patchwork.kernel.org>);
        Fri, 14 Sep 2018 11:11:47 -0400
Received: from ozlabs.org ([203.11.71.1]:48415 "EHLO ozlabs.org"
        rhost-flags-OK-OK-OK-OK) by vger.kernel.org with ESMTP
        id S1726955AbeINPLr (ORCPT <rfc822;kvm@vger.kernel.org>);
        Fri, 14 Sep 2018 11:11:47 -0400
Received: by ozlabs.org (Postfix, from userid 1003)
        id 42BWD848CGz9sBx; Fri, 14 Sep 2018 19:58:00 +1000 (AEST)
DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/simple; d=ozlabs.org; s=201707;
        t=1536919080; bh=BQuNvWbDbtQm2TQyyPtKo3fmzcUzNb2xkO7j7cyhwUI=;
        h=Date:From:To:Cc:Subject:From;
        b=OrWphcXAESUvQ0pmuc+07RRTvMouVLWqaH7bUkFNCx2aIeKyCOPme6gawL1amFrq8
         /wva291rz42Yff/I/r4PBZm6U14YZ6OCRlhZ8Ikt3TGRmKe7NJRYiArL6/tEdwSyWg
         X33tzmcMi+99IynPPcvO05dl+TUTLGvaYAd1ueh5qONzAe6fkK/p/7z5/RSu7lvMix
         NK7bDsLSZjzek+2ji0rHtK/kdUaZPyg8T89iQvLsmDoTpJOVUb8VM2OwYd5+sZ2mzr
         88YhV9f6idFlJqLMIg14fC+m+2y4rEjLOPsZsctpYRnMAIb6b2rrwWM1W1hKmmnr/t
         b1rAlm6jT0W+g==
Date: Fri, 14 Sep 2018 19:57:57 +1000
From: Paul Mackerras <paulus@ozlabs.org>
To: Paolo Bonzini <pbonzini@redhat.com>,
 Radim =?utf-8?b?S3LEjW3DocWZ?= <rkrcmar@redhat.com>, kvm@vger.kernel.org
Cc: David Gibson <david@gibson.dropbear.id.au>, kvm-ppc@vger.kernel.org
Subject: [GIT PULL] Please pull my kvm-ppc-fixes-4.19-2 tag
Message-ID: <20180914095757.GA8894@fergus>
MIME-Version: 1.0
Content-Type: text/plain; charset=us-ascii
Content-Disposition: inline
User-Agent: Mutt/1.5.24 (2015-08-30)
Sender: kvm-owner@vger.kernel.org
Precedence: bulk
List-ID: <kvm.vger.kernel.org>
X-Mailing-List: kvm@vger.kernel.org
X-Virus-Scanned: ClamAV using ClamSMTP

Paolo or Radim,

Please do a pull from my kvm-ppc-fixes-4.19-2 tag to get two commits
that should go into 4.19 because they fix host crashes and memory
corruption that can occur on POWER machines when the memory backing a
guest contains transparent huge pages.

Thanks,
Paul.

The following changes since commit bdf7ffc89922a52a4f08a12f7421ea24bb7626a0:

  KVM: LAPIC: Fix pv ipis out-of-bounds access (2018-09-07 18:38:43 +0200)

are available in the git repository at:

  git://git.kernel.org/pub/scm/linux/kernel/git/paulus/powerpc tags/kvm-ppc-fixes-4.19-2

for you to fetch changes up to 71d29f43b6332badc5598c656616a62575e83342:

  KVM: PPC: Book3S HV: Don't use compound_order to determine host mapping size (2018-09-12 08:50:50 +1000)

----------------------------------------------------------------
Second set of PPC KVM fixes for 4.19

Two fixes for KVM on POWER machines.  Both of these relate to memory
corruption and host crashes seen when transparent huge pages are
enabled.  The first fixes a host crash that can occur when a DMA
mapping is removed by the guest and the page mapped was part of a
transparent huge page; the second fixes corruption that could occur
when a hypervisor page fault for a radix guest is being serviced at
the same time that the backing page is being collapsed or split.

----------------------------------------------------------------
Alexey Kardashevskiy (1):
      KVM: PPC: Avoid marking DMA-mapped pages dirty in real mode

Nicholas Piggin (1):
      KVM: PPC: Book3S HV: Don't use compound_order to determine host mapping size

 arch/powerpc/include/asm/book3s/64/pgtable.h |  1 -
 arch/powerpc/include/asm/iommu.h             |  2 -
 arch/powerpc/include/asm/mmu_context.h       |  1 +
 arch/powerpc/kernel/iommu.c                  | 25 --------
 arch/powerpc/kvm/book3s_64_mmu_radix.c       | 91 +++++++++++-----------------
 arch/powerpc/kvm/book3s_64_vio_hv.c          | 39 +++++++++---
 arch/powerpc/mm/init_64.c                    | 49 ---------------
 arch/powerpc/mm/mmu_context_iommu.c          | 34 +++++++++--
 8 files changed, 99 insertions(+), 143 deletions(-)
