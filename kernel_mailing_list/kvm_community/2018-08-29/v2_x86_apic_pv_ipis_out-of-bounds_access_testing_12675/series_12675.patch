From patchwork Wed Aug 29 10:12:25 2018
Content-Type: text/plain; charset="utf-8"
MIME-Version: 1.0
Content-Transfer-Encoding: 8bit
X-Patchwork-Submitter: Wanpeng Li <kernellwp@gmail.com>
X-Patchwork-Id: 10579789
Return-Path: <kvm-owner@kernel.org>
Received: from mail.wl.linuxfoundation.org (pdx-wl-mail.web.codeaurora.org
 [172.30.200.125])
	by pdx-korg-patchwork-2.web.codeaurora.org (Postfix) with ESMTP id 6775914E1
	for <patchwork-kvm@patchwork.kernel.org>;
 Wed, 29 Aug 2018 10:12:46 +0000 (UTC)
Received: from mail.wl.linuxfoundation.org (localhost [127.0.0.1])
	by mail.wl.linuxfoundation.org (Postfix) with ESMTP id 58E1B2AB18
	for <patchwork-kvm@patchwork.kernel.org>;
 Wed, 29 Aug 2018 10:12:46 +0000 (UTC)
Received: by mail.wl.linuxfoundation.org (Postfix, from userid 486)
	id 4D70D2AB1C; Wed, 29 Aug 2018 10:12:46 +0000 (UTC)
X-Spam-Checker-Version: SpamAssassin 3.3.1 (2010-03-16) on
	pdx-wl-mail.web.codeaurora.org
X-Spam-Level: 
X-Spam-Status: No, score=-8.0 required=2.0 tests=BAYES_00,DKIM_SIGNED,
	DKIM_VALID,DKIM_VALID_AU,FREEMAIL_FROM,MAILING_LIST_MULTI,RCVD_IN_DNSWL_HI
	autolearn=ham version=3.3.1
Received: from vger.kernel.org (vger.kernel.org [209.132.180.67])
	by mail.wl.linuxfoundation.org (Postfix) with ESMTP id EA61C2AB18
	for <patchwork-kvm@patchwork.kernel.org>;
 Wed, 29 Aug 2018 10:12:45 +0000 (UTC)
Received: (majordomo@vger.kernel.org) by vger.kernel.org via listexpand
        id S1728107AbeH2OIy (ORCPT
        <rfc822;patchwork-kvm@patchwork.kernel.org>);
        Wed, 29 Aug 2018 10:08:54 -0400
Received: from mail-pl1-f196.google.com ([209.85.214.196]:46951 "EHLO
        mail-pl1-f196.google.com" rhost-flags-OK-OK-OK-OK) by vger.kernel.org
        with ESMTP id S1728094AbeH2OIy (ORCPT <rfc822;kvm@vger.kernel.org>);
        Wed, 29 Aug 2018 10:08:54 -0400
Received: by mail-pl1-f196.google.com with SMTP id a4-v6so2069875plm.13
        for <kvm@vger.kernel.org>; Wed, 29 Aug 2018 03:12:44 -0700 (PDT)
DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/relaxed;
        d=gmail.com; s=20161025;
        h=from:to:cc:subject:date:message-id:mime-version
         :content-transfer-encoding;
        bh=m0c0vFdwSCC+zPpvK0V9JdNzQ9pFkeosXobWOAAf6tk=;
        b=jQL/hJayT877IamMR+N9W83fdsWPUpKQvgyrUL/+RFI8wJ0YyfBIp81bJyVoy+C/zr
         jHHaa+KC11CpNZBczHgs8M/NoKo+MGot7cfernyWLvrzV8wyLS57T4DU6IuvynJddGYa
         hH5cH6D1kuBkYZQKc7eAIi4xhe2hVDdpaJ93jfK3X5Jtk7rJED9u0BDlkvVA0Q7vObFS
         AoLmZ1lsnVJMka8jIMWq2z/HujA9AuVJQerM9rfJJJWelOC3tTOegB99WaIlG2/IiwKk
         J9JmktONghSBE5wKYr1wzYin+dyErSBNRlVeQUmOer4doVOGD7G0c3RiHtFzAuBVtHWQ
         kqSg==
X-Google-DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/relaxed;
        d=1e100.net; s=20161025;
        h=x-gm-message-state:from:to:cc:subject:date:message-id:mime-version
         :content-transfer-encoding;
        bh=m0c0vFdwSCC+zPpvK0V9JdNzQ9pFkeosXobWOAAf6tk=;
        b=kcV4HaeLa4IJ6lVsZdGKUOgdiVr+EbhGRuEqqvK2rmcynl15j6Y01b+tzJ127mdPRB
         DrS3CJEd5LKdqLN+rhHLlyh5JBUhU2htY5xlFoOcvfXB51vtay0wRksrLbnrAxsrYQid
         QVPCqWA3RMaV9ASFfliXg01j9SU1w50+F1rLjCuVanWoR3i17Ppdbrj8v5YEVqHUdWB6
         KhWR5HIb6OAqidrXp/spE6V9fwkalJM0JW2Q+EEGF+3B1uOF4Hu5A345CnoPYl/AeGKR
         dLpJLIH67/zMaJYbpwxmwn/mDfu1Uqm62wG8N6/ekU19jtZYXyoa/YKep1fF/zRIXHEK
         Qq3g==
X-Gm-Message-State: APzg51BqhorsUFWjGddkwM+O0gvzfbQWskUSK27Uvy+QeFAQpBKoslqE
        xrQQIJxrOBxE/lCSAu6VyQYA8X3J
X-Google-Smtp-Source: 
 ANB0VdbHFEvUMyOWlZrK4i9IR1vEJzp5bWQaWreYY9EXmusQwcbYAEa8uhO0Irjn9CLUoiaCAMcXnA==
X-Received: by 2002:a17:902:5a3:: with SMTP id
 f32-v6mr5400678plf.286.1535537563942;
        Wed, 29 Aug 2018 03:12:43 -0700 (PDT)
Received: from localhost.localdomain ([203.205.141.123])
        by smtp.googlemail.com with ESMTPSA id
 f4-v6sm6283833pfj.46.2018.08.29.03.12.42
        (version=TLS1_2 cipher=ECDHE-RSA-AES128-SHA bits=128/128);
        Wed, 29 Aug 2018 03:12:43 -0700 (PDT)
From: Wanpeng Li <kernellwp@gmail.com>
X-Google-Original-From: Wanpeng Li <wanpengli@tencent.com>
To: kvm@vger.kernel.org
Cc: Paolo Bonzini <pbonzini@redhat.com>,
 =?utf-8?b?UmFkaW0gS3LEjW3DocWZ?= <rkrcmar@redhat.com>,
 Liran Alon <liran.alon@oracle.com>
Subject: [PATCH v2] x86: apic: pv ipis out-of-bounds access testing
Date: Wed, 29 Aug 2018 18:12:25 +0800
Message-Id: <1535537545-31023-1-git-send-email-wanpengli@tencent.com>
X-Mailer: git-send-email 2.7.4
MIME-Version: 1.0
Content-Type: text/plain; charset=UTF-8
Sender: kvm-owner@vger.kernel.org
Precedence: bulk
List-ID: <kvm.vger.kernel.org>
X-Mailing-List: kvm@vger.kernel.org
X-Virus-Scanned: ClamAV using ClamSMTP

From: Wanpeng Li <wanpengli@tencent.com>

Dan Carpenter reported that the untrusted data returns from kvm_register_read()
results in the following static checker warning:
  arch/x86/kvm/lapic.c:576 kvm_pv_send_ipi()
  error: buffer underflow 'map->phys_map' 's32min-s32max'

KVM guest can easily trigger this by executing the following assembly sequence 
in Ring0:

mov $10, %rax
mov $0xFFFFFFFF, %rbx
mov $0xFFFFFFFF, %rdx
mov $0, %rsi
vmcall

As this will cause KVM to execute the following code-path:
vmx_handle_exit() -> handle_vmcall() -> kvm_emulate_hypercall() -> kvm_pv_send_ipi()
which will reach out-of-bounds access.

This patch adds the testcase to kvm-unit-tests.

Cc: Paolo Bonzini <pbonzini@redhat.com>
Cc: Radim Krčmář <rkrcmar@redhat.com>
Cc: Liran Alon <liran.alon@oracle.com>
Reviewed-By: Liran Alon <liran.alon@oracle.com>
Signed-off-by: Wanpeng Li <wanpengli@tencent.com>
---
v1 -> v2:
 * add more changelog
 * arguments are documented in Documentation/virtual/kvm/hypercalls.txt
 * Define KVM_HC_SEND_IPI instead of using hard-coded

 x86/apic.c | 12 ++++++++++++
 1 file changed, 12 insertions(+)

diff --git a/x86/apic.c b/x86/apic.c
index c976e8d..6c6ed20 100644
--- a/x86/apic.c
+++ b/x86/apic.c
@@ -566,6 +566,17 @@ static void test_apic_change_mode(void)
 	report("TMCCT should stay at zero", !apic_read(APIC_TMCCT));
 }
 
+#define KVM_HC_SEND_IPI 10
+
+void test_pv_ipi()
+{
+    int ret;
+    unsigned long a0 = 0xFFFFFFFF, a1 = 0, a2 = 0xFFFFFFFF, a3 = 0x0;
+
+    asm volatile("vmcall" : "=a"(ret) :"a"(KVM_HC_SEND_IPI), "b"(a0), "c"(a1), "d"(a2), "S"(a3));
+    report("PV IPIs testing", !ret);
+}
+
 int main(void)
 {
     setup_vm();
@@ -581,6 +592,7 @@ int main(void)
 
     test_self_ipi();
     test_physical_broadcast();
+    test_pv_ipi();
 
     test_sti_nmi();
     test_multiple_nmi();
