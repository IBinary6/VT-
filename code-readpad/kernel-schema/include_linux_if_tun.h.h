
\n
struct socket *tun_get_socket(struct file *)
; struct ptr_ring *tun_get_tx_ring(struct file *file)
; bool tun_is_xdp_frame(void *ptr)
; void *tun_xdp_to_ptr(void *ptr)
; void *tun_ptr_to_xdp(void *ptr)
; void tun_ptr_free(void *ptr)
;include <linux/err.h>include <linux/errno.h> struct file; struct socket; static inline struct socket *tun_get_socket(struct file *f)
struct socket *tun_get_socket(struct file *)
; struct ptr_ring *tun_get_tx_ring(struct file *file)
; bool tun_is_xdp_frame(void *ptr)
; void *tun_xdp_to_ptr(void *ptr)
; void *tun_ptr_to_xdp(void *ptr)
; void tun_ptr_free(void *ptr)
;include <linux/err.h>include <linux/errno.h> struct file; struct socket; static inline struct socket *tun_get_socket(struct file *f)
return ERR_PTR(-EINVAL)
; } static inline struct ptr_ring *tun_get_tx_ring(struct file *f)
struct socket *tun_get_socket(struct file *)
; struct ptr_ring *tun_get_tx_ring(struct file *file)
; bool tun_is_xdp_frame(void *ptr)
; void *tun_xdp_to_ptr(void *ptr)
; void *tun_ptr_to_xdp(void *ptr)
; void tun_ptr_free(void *ptr)
;include <linux/err.h>include <linux/errno.h> struct file; struct socket; static inline struct socket *tun_get_socket(struct file *f)
return ERR_PTR(-EINVAL)
; } static inline struct ptr_ring *tun_get_tx_ring(struct file *f)
return ERR_PTR(-EINVAL)
; } static inline bool tun_is_xdp_frame(void *ptr)
struct socket *tun_get_socket(struct file *)
; struct ptr_ring *tun_get_tx_ring(struct file *file)
; bool tun_is_xdp_frame(void *ptr)
; void *tun_xdp_to_ptr(void *ptr)
; void *tun_ptr_to_xdp(void *ptr)
; void tun_ptr_free(void *ptr)
;include <linux/err.h>include <linux/errno.h> struct file; struct socket; static inline struct socket *tun_get_socket(struct file *f)
return ERR_PTR(-EINVAL)
; } static inline struct ptr_ring *tun_get_tx_ring(struct file *f)
return ERR_PTR(-EINVAL)
; } static inline bool tun_is_xdp_frame(void *ptr)
return false; } static inline void *tun_xdp_to_ptr(void *ptr)
struct socket *tun_get_socket(struct file *)
; struct ptr_ring *tun_get_tx_ring(struct file *file)
; bool tun_is_xdp_frame(void *ptr)
; void *tun_xdp_to_ptr(void *ptr)
; void *tun_ptr_to_xdp(void *ptr)
; void tun_ptr_free(void *ptr)
;include <linux/err.h>include <linux/errno.h> struct file; struct socket; static inline struct socket *tun_get_socket(struct file *f)
return ERR_PTR(-EINVAL)
; } static inline struct ptr_ring *tun_get_tx_ring(struct file *f)
return ERR_PTR(-EINVAL)
; } static inline bool tun_is_xdp_frame(void *ptr)
return false; } static inline void *tun_xdp_to_ptr(void *ptr)
return NULL; } static inline void *tun_ptr_to_xdp(void *ptr)
struct socket *tun_get_socket(struct file *)
; struct ptr_ring *tun_get_tx_ring(struct file *file)
; bool tun_is_xdp_frame(void *ptr)
; void *tun_xdp_to_ptr(void *ptr)
; void *tun_ptr_to_xdp(void *ptr)
; void tun_ptr_free(void *ptr)
;include <linux/err.h>include <linux/errno.h> struct file; struct socket; static inline struct socket *tun_get_socket(struct file *f)
return ERR_PTR(-EINVAL)
; } static inline struct ptr_ring *tun_get_tx_ring(struct file *f)
return ERR_PTR(-EINVAL)
; } static inline bool tun_is_xdp_frame(void *ptr)
return false; } static inline void *tun_xdp_to_ptr(void *ptr)
return NULL; } static inline void *tun_ptr_to_xdp(void *ptr)
return NULL; } static inline void tun_ptr_free(void *ptr)
\n
     34 void *ptr
     11 struct file *f
      9 -EINVAL
      6 struct file *file
      6 struct file *
